/* MODULE NAME:  foundry_sn_switch_group.h
 *
 * PURPOSE: For SNMP to access Brocade's FOUNDRY-SN-SWITCH-GROUP-MIB:
 *
 * foundry(1991).products(1).switch(1).snSwitch(3)
 *
 * NOTES:
 *
 * HISTORY (mm/dd/yyyy)
 *    05/09/2011 - Qiyao Zhong, Created
 *
 * Copyright(C)      Accton Corporation, 2011
 */

/* Note: this file originally auto-generated by mib2c using
 *        : mib2c.old-api.conf,v 1.4 2004/07/28 08:04:58 dts12 Exp $
 */
#ifndef FOUNDRY_SN_SWITCH_GROUP_H
#define FOUNDRY_SN_SWITCH_GROUP_H

/* function declarations
 */

/* ------------------------------------------------------------------------
 * SCALAR NODES - 1.1.3.1 snSwInfo.*
 * ------------------------------------------------------------------------
 */
void init_snSwGroupIpMcastMode(void);  /* 3 */
Netsnmp_Node_Handler do_snSwGroupIpMcastMode;

void init_snFdbTableCurEntry(void);  /* 9 */
Netsnmp_Node_Handler get_snFdbTableCurEntry;

void init_snFdbTableStationFlush(void);  /* 10 */
Netsnmp_Node_Handler do_snFdbTableStationFlush;

void init_snSwGlobalStpMode(void);  /* 14 */
Netsnmp_Node_Handler do_snSwGlobalStpMode;

void init_snSwIpMcastQuerierMode(void);  /* 15 */
Netsnmp_Node_Handler do_snSwIpMcastQuerierMode;

void init_snSwClearCounters(void);  /* 33 */
Netsnmp_Node_Handler do_snSwClearCounters;

void init_snSwQosMechanism(void);   /* 40 */
Netsnmp_Node_Handler do_snSwQosMechanism;

void init_snSwSingleStpMode(void);  /* 41 */
Netsnmp_Node_Handler do_snSwSingleStpMode;

/* ------------------------------------------------------------------------
 * TABLE NAME - 1.1.3.3.5 snSwIfInfoTable
 * ------------------------------------------------------------------------
 */
void init_snSwIfInfoTable(void);
FindVarMethod var_snSwIfInfoTable;
WriteMethod write_snSwIfInfoMonitorMode;
WriteMethod write_snSwIfInfoMirrorPorts;
WriteMethod write_snSwIfInfoTagMode;
WriteMethod write_snSwIfInfoTagType;
WriteMethod write_snSwIfInfoChnMode;
WriteMethod write_snSwIfInfoSpeed;
WriteMethod write_snSwIfInfoAdminStatus;
WriteMethod write_snSwIfInfoPortQos;
WriteMethod write_snSwIfLockAddressCount;
WriteMethod write_snSwIfStpPortEnable;
WriteMethod write_snSwIfDhcpGateListId;
WriteMethod write_snSwIfName;
WriteMethod write_snSwIfInfoAutoNegotiate;
WriteMethod write_snSwIfInfoFlowControl;
WriteMethod write_snSwIfFastSpanPortEnable;
WriteMethod write_snSwIfFastSpanUplinkEnable;
WriteMethod write_snSwIfVlanId;
WriteMethod write_snSwIfRouteOnly;
WriteMethod write_snSwIfLoadInterval;
WriteMethod write_snSwIfInfoMirrorMode;
WriteMethod write_snSwIfMacLearningDisable;

/* ------------------------------------------------------------------------
 * TABLE NAME - 1.1.3.3.6 snIfOpticalMonitoringInfoTable
 * ------------------------------------------------------------------------
 */
void init_snIfOpticalMonitoringInfoTable(void);
FindVarMethod var_snIfOpticalMonitoringInfoTable;

/* ------------------------------------------------------------------------
 * TABLE NAME - 1.1.3.3.9 snIfMediaInfoTable
 * ------------------------------------------------------------------------
 */
void init_snIfMediaInfoTable(void);
FindVarMethod var_snIfMediaInfoTable;

#if (SYS_CPNT_NETACCESS_MACAUTH == TRUE)
/* ------------------------------------------------------------------------
 * TABLE NAME - 1.1.3.10.3 snMacFilterIfAccessTable
 * ------------------------------------------------------------------------
 */
void init_snMacFilterIfAccessTable(void);
FindVarMethod var_snMacFilterIfAccessTable;
WriteMethod write_snMacFilterIfAccessFilters;
WriteMethod write_snMacFilterIfAccessRowStatus;
#endif

/* ------------------------------------------------------------------------
 * SCALAR NODES - 1.1.3.12 snRadius.snRadiusGeneral(1).*
 * ------------------------------------------------------------------------
 */
void init_snRadiusRetransmit(void);  /* 3 */
Netsnmp_Node_Handler do_snRadiusRetransmit;

void init_snRadiusTimeOut(void);  /* 4 */
Netsnmp_Node_Handler do_snRadiusTimeOut;

void init_snRadiusKey(void);  /* 6 */
Netsnmp_Node_Handler do_snRadiusKey;

void init_snRadiusLoginMethod(void);  /* 7 */
Netsnmp_Node_Handler do_snRadiusLoginMethod;

/* ------------------------------------------------------------------------
 * SCALAR NODES - 1.1.3.13 snTacacs.snTacacsGeneral(1).*
 * ------------------------------------------------------------------------
 */
void init_snTacacsKey(void);  /* 4 */
Netsnmp_Node_Handler do_snTacacsKey;

/* ------------------------------------------------------------------------
 * SCALAR NODES - 1.1.3.15 snAAA.snAuthorization(2).*
 * ------------------------------------------------------------------------
 */
void init_snAuthorizationExec(void);  /* 3 */
Netsnmp_Node_Handler do_snAuthorizationExec;

/* ------------------------------------------------------------------------
 * SCALAR NODES - 1.1.3.15 snAAA.snAccounting(3).*
 * ------------------------------------------------------------------------
 */
void init_snAccountingExec(void);  /* 3 */
Netsnmp_Node_Handler do_snAccountingExec;

/* ------------------------------------------------------------------------
 * TABLE NAME - 1.1.3.24.1.1.3 snPortMacSecurityIntfContentTable
 * ------------------------------------------------------------------------
 */
void init_snPortMacSecurityIntfContentTable(void);
FindVarMethod var_snPortMacSecurityIntfContentTable;
WriteMethod write_snPortMacSecurityIntfContentSecurity;
WriteMethod write_snPortMacSecurityIntfContentViolationType;
WriteMethod write_snPortMacSecurityIntfContentShutdownTime;
WriteMethod write_snPortMacSecurityIntfContentAgeOutTime;
WriteMethod write_snPortMacSecurityIntfContentMaxLockedMacAllowed;

/* ------------------------------------------------------------------------
 * FUNCTION NAME - init_snSwitch
 * ------------------------------------------------------------------------
 * PURPOSE  :   This is the entry point into this file for initialisation.
 *
 * INPUT    :   None.
 *
 * OUTPUT   :   None.
 *
 * RETURN   :   None.
 *
 * NOTES    :   None.
 * ------------------------------------------------------------------------
 */
void init_snSwitch(void);
#endif  /* FOUNDRY_SN_SWITCH_GROUP_H */
