/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.scalar.conf,v 1.5 2002/07/18 14:18:52 dts12 Exp $
 */
#ifndef TRACEROUTEOBJECTS_H
#define TRACEROUTEOBJECTS_H

#if (SYS_CPNT_TRACEROUTE == TRUE)

/* function declarations */
void                    init_traceRouteObjects(void);
Netsnmp_Node_Handler    do_traceRouteMaxConcurrentRequests;


/* function declarations */
void            init_traceRouteCtlTable(void);
FindVarMethod   var_traceRouteCtlTable;
WriteMethod     write_traceRouteCtlTargetAddressType;
WriteMethod     write_traceRouteCtlTargetAddress;
WriteMethod     write_traceRouteCtlByPassRouteTable;
WriteMethod     write_traceRouteCtlDataSize;
WriteMethod     write_traceRouteCtlTimeOut;
WriteMethod     write_traceRouteCtlProbesPerHop;
WriteMethod     write_traceRouteCtlPort;
WriteMethod     write_traceRouteCtlMaxTtl;
WriteMethod     write_traceRouteCtlDSField;
WriteMethod     write_traceRouteCtlSourceAddressType;
WriteMethod     write_traceRouteCtlSourceAddress;
WriteMethod     write_traceRouteCtlIfIndex;
WriteMethod     write_traceRouteCtlMiscOptions;
WriteMethod     write_traceRouteCtlMaxFailures;
WriteMethod     write_traceRouteCtlDontFragment;
WriteMethod     write_traceRouteCtlInitialTtl;
WriteMethod     write_traceRouteCtlFrequency;
WriteMethod     write_traceRouteCtlStorageType;
WriteMethod     write_traceRouteCtlAdminStatus;
WriteMethod     write_traceRouteCtlDescr;
WriteMethod     write_traceRouteCtlMaxRows;
WriteMethod     write_traceRouteCtlTrapGeneration;
WriteMethod     write_traceRouteCtlCreateHopsEntries;
WriteMethod     write_traceRouteCtlType;
WriteMethod     write_traceRouteCtlRowStatus;


/* function declarations */
void            init_traceRouteResultsTable(void);
FindVarMethod   var_traceRouteResultsTable;


/* function declarations */
void            init_traceRouteProbeHistoryTable(void);
FindVarMethod   var_traceRouteProbeHistoryTable;


/* function declarations */
void            init_traceRouteHopsTable(void);
FindVarMethod   var_traceRouteHopsTable;


/* traceRouteCtlTable */
#define TRACEROUTECTLOWNERINDEX           1
#define TRACEROUTECTLTESTNAME             2
#define TRACEROUTECTLTARGETADDRESSTYPE    3
#define TRACEROUTECTLTARGETADDRESS        4
#define TRACEROUTECTLBYPASSROUTETABLE     5
#define TRACEROUTECTLDATASIZE             6
#define TRACEROUTECTLTIMEOUT              7
#define TRACEROUTECTLPROBESPERHOP         8
#define TRACEROUTECTLPORT                 9
#define TRACEROUTECTLMAXTTL               10
#define TRACEROUTECTLDSFIELD              11
#define TRACEROUTECTLSOURCEADDRESSTYPE    12
#define TRACEROUTECTLSOURCEADDRESS        13
#define TRACEROUTECTLIFINDEX              14
#define TRACEROUTECTLMISCOPTIONS          15
#define TRACEROUTECTLMAXFAILURES          16
#define TRACEROUTECTLDONTFRAGMENT         17
#define TRACEROUTECTLINITIALTTL           18
#define TRACEROUTECTLFREQUENCY            19
#define TRACEROUTECTLSTORAGETYPE          20
#define TRACEROUTECTLADMINSTATUS          21
#define TRACEROUTECTLDESCR                22
#define TRACEROUTECTLMAXROWS              23
#define TRACEROUTECTLTRAPGENERATION       24
#define TRACEROUTECTLCREATEHOPSENTRIES    25
#define TRACEROUTECTLTYPE                 26
#define TRACEROUTECTLROWSTATUS            27


/* traceRouteResultsTable */
#define TRACEROUTERESULTSOPERSTATUS       1
#define TRACEROUTERESULTSCURHOPCOUNT      2
#define TRACEROUTERESULTSCURPROBECOUNT    3
#define TRACEROUTERESULTSIPTGTADDRTYPE    4
#define TRACEROUTERESULTSIPTGTADDR        5
#define TRACEROUTERESULTSTESTATTEMPTS     6
#define TRACEROUTERESULTSTESTSUCCESSES    7
#define TRACEROUTERESULTSLASTGOODPATH     8


/* traceRouteProbeHistoryTable */
#define TRACEROUTEPROBEHISTORYINDEX       1
#define TRACEROUTEPROBEHISTORYHOPINDEX    2
#define TRACEROUTEPROBEHISTORYPROBEINDEX  3
#define TRACEROUTEPROBEHISTORYHADDRTYPE   4
#define TRACEROUTEPROBEHISTORYHADDR       5
#define TRACEROUTEPROBEHISTORYRESPONSE    6
#define TRACEROUTEPROBEHISTORYSTATUS      7
#define TRACEROUTEPROBEHISTORYLASTRC      8
#define TRACEROUTEPROBEHISTORYTIME        9


/* traceRouteHopsTable */
#define TRACEROUTEHOPSHOPINDEX            1
#define TRACEROUTEHOPSIPTGTADDRESSTYPE    2
#define TRACEROUTEHOPSIPTGTADDRESS        3
#define TRACEROUTEHOPSMINRTT              4
#define TRACEROUTEHOPSMAXRTT              5
#define TRACEROUTEHOPSAVERAGERTT          6
#define TRACEROUTEHOPSRTTSUMOFSQUARES     7
#define TRACEROUTEHOPSSENTPROBES          8
#define TRACEROUTEHOPSPROBERESPONSES      9
#define TRACEROUTEHOPSLASTGOODPROBE       10

#endif  /* end of  #if (SYS_CPNT_TRACEROUTE == TRUE)*/


/* River@May 7, 2008, add nslookup mib */
#if(SYS_CPNT_NSLOOKUP == TRUE)

/* lookupObjects */
void            init_lookupObjects(void);
Netsnmp_Node_Handler do_lookupMaxConcurrentRequests;
Netsnmp_Node_Handler do_lookupPurgeTime;


/* lookupCtlTable */
void            init_lookupCtlTable(void);
FindVarMethod   var_lookupCtlTable;
FindVarMethod   var_lookupCtlTable;
WriteMethod     write_lookupCtlTargetAddressType;
WriteMethod     write_lookupCtlTargetAddress;
WriteMethod     write_lookupCtlRowStatus;



/* lookupResultsTable */
void            init_lookupResultsTable(void);
FindVarMethod   var_lookupResultsTable;
FindVarMethod   var_lookupResultsTable;



/* lookupCtlTable */
#define LOOKUPCTLOWNERINDEX		    1
#define LOOKUPCTLOPERATIONNAME		2
#define LOOKUPCTLTARGETADDRESSTYPE	3
#define LOOKUPCTLTARGETADDRESS		4
#define LOOKUPCTLOPERSTATUS		    5
#define LOOKUPCTLTIME		        6
#define LOOKUPCTLRC		            7   
#define LOOKUPCTLROWSTATUS		    8



/* lookupResultsTable */
#define LOOKUPRESULTSINDEX		    1
#define LOOKUPRESULTSADDRESSTYPE	2
#define LOOKUPRESULTSADDRESS		3


#endif /* end of (AMS_SYS_CPNT_NSLOOKUP == TRUE)*/

#if (SYS_CPNT_PING== TRUE)

/* function declarations */
void                    init_pingObjects(void);
Netsnmp_Node_Handler    do_pingMaxConcurrentRequests;


/* function declarations */
void            init_pingCtlTable(void);
FindVarMethod   var_pingCtlTable;
WriteMethod     write_pingCtlTargetAddressType;
WriteMethod     write_pingCtlTargetAddress;
WriteMethod     write_pingCtlDataSize;
WriteMethod     write_pingCtlTimeOut;
WriteMethod     write_pingCtlProbeCount;
WriteMethod     write_pingCtlAdminStatus;
WriteMethod     write_pingCtlDataFill;
WriteMethod     write_pingCtlFrequency;
WriteMethod     write_pingCtlMaxRows;
WriteMethod     write_pingCtlStorageType;
WriteMethod     write_pingCtlTrapGeneration;
WriteMethod     write_pingCtlTrapProbeFailureFilter;
WriteMethod     write_pingCtlTrapTestFailureFilter;
WriteMethod     write_pingCtlType;
WriteMethod     write_pingCtlDescr;
WriteMethod     write_pingCtlSourceAddressType;
WriteMethod     write_pingCtlSourceAddress;
WriteMethod     write_pingCtlIfIndex;
WriteMethod     write_pingCtlByPassRouteTable;
WriteMethod     write_pingCtlDSField;
WriteMethod     write_pingCtlRowStatus;


/* function declarations */
void            init_pingResultsTable(void);
FindVarMethod   var_pingResultsTable;


/* function declarations */
void            init_pingProbeHistoryTable(void);
FindVarMethod   var_pingProbeHistoryTable;


/* function declarations */
void            init_pingHopsTable(void);
FindVarMethod   var_pingHopsTable;


/* pingCtlTable */
#define PINGCTLOWNERINDEX                               1
#define PINGCTLTESTNAME                                   2
#define PINGCTLTARGETADDRESSTYPE               3
#define PINGCTLTARGETADDRESS                        4
#define PINGCTLDATASIZE                                     5
#define PINGCTLTIMEOUT                                      6
#define PINGCTLPROBECOUNT                              7
#define PINGCTLADMINSTATUS                             8
#define PINGCTLDATAFILL                                     9
#define PINGCTLFREQUENCY                                10
#define PINGCTLMAXROWS                                   11
#define PINGCTLSTORAGETYPE                            12
#define PINGCTLTRAPGENERATION                       13
#define PINGCTLTRAPPROBEFAILUREFILTER        14
#define PINGCTLTRAPTESTFAILUREFILTER           15
#define PINGCTLTYPE                                            16
#define PINGCTLDESCR                                          17
#define PINGCTLSOURCEADDRESSTYPE               18
#define PINGCTLSOURCEADDRESS                        19
#define PINGCTLIFINDEX                                         20
#define PINGCTLBYPASSROUTETABLE                  21
#define PINGCTLDSFIELD                                        22
#define PINGCTLROWSTATUS                                 23


/* pingResultsTable */
#define PINGRESULTSOPERSTATUS       1
#define PINGRESULTSIPTARGETADDRESSTYPE      2
#define PINGRESULTSIPTARGETADDRESS    3
#define PINGRESULTSMINRTT    4
#define PINGRESULTSMAXRTT        5
#define PINGRESULTSAVERAGERTT     6
#define PINGRESULTSPROBERESPONSES    7
#define PINGRESULTSSENTPROBES     8
#define PINGRESULTSRTTSUMOFSQUARES     9
#define PINGRESULTSLASTGOODPROBE     10


/* pingProbeHistoryTable */
#define PINGPROBEHISTORYINDEX       1
#define PINGPROBEHISTORYRESPONSE    2
#define PINGPROBEHISTORYSTATUS      3
#define PINGPROBEHISTORYLASTRC      4
#define PINGPROBEHISTORYTIME        5
#endif  /* end of  #if (SYS_CPNT_PING == TRUE)*/

#endif  /* end of #ifndef TRACEROUTEOBJECTS_H */

