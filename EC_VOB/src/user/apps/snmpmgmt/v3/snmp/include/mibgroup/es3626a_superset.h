/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.scalar.conf,v 1.5 2002/07/18 14:18:52 dts12 Exp $
 */
#ifndef PRIVATEMIB_H
#define PRIVATEMIB_H
#include "sys_adpt.h"
#include "sys_cpnt.h"
#include "sys_dflt.h"
#include "snmp_mgr.h"
/* function declarations */

void init_PrivateMib(void);

/* switchMgt Scalar*/
void init_switchMgt(void);
Netsnmp_Node_Handler do_switchManagementVlan;
Netsnmp_Node_Handler get_swProdName;
Netsnmp_Node_Handler get_swProdUrl;
Netsnmp_Node_Handler get_swProdDescription;
Netsnmp_Node_Handler get_swProdVersion;
Netsnmp_Node_Handler get_swChassisServiceTag;
Netsnmp_Node_Handler get_switchOperState;
Netsnmp_Node_Handler do_amtrMacAddrRisingThreshold;
Netsnmp_Node_Handler do_amtrMacAddrFallingThreshold;
Netsnmp_Node_Handler get_switchNumber;
Netsnmp_Node_Handler get_swProdManufacturer;
Netsnmp_Node_Handler get_swIdentifier;
Netsnmp_Node_Handler do_switchJumboFrameStatus;
Netsnmp_Node_Handler do_amtrMacAddrAgingStatus;
Netsnmp_Node_Handler get_switchLoopbackTestFailurePorts;
Netsnmp_Node_Handler do_switchRenumberUnitID;
Netsnmp_Node_Handler do_switchConfigAutosaveEnableStatus;
Netsnmp_Node_Handler get_switchConfigAutosaveBusyStatus;
Netsnmp_Node_Handler do_switchPDPowerSourceCheck;

/*switchInfoTable*/
void init_switchInfoTable(void);
FindVarMethod var_switchInfoTable;

/*switchIndivPowerTable*/
void            init_switchIndivPowerTable(void);
FindVarMethod   var_switchIndivPowerTable;

/* switchFanTable */
void            init_switchFanTable(void);
FindVarMethod   var_switchFanTable;
WriteMethod     write_switchFanAdminSpeed;

/* switchThermalTempTable */
void            init_switchThermalTempTable(void);
FindVarMethod   var_switchThermalTempTable;

/* switchThermalActionTable */
void            init_switchThermalActionTable(void);
FindVarMethod   var_switchThermalActionTable;
WriteMethod     write_switchThermalActionRisingThreshold;
WriteMethod     write_switchThermalActionFallingThreshold;
WriteMethod     write_switchThermalActionAction;
WriteMethod     write_switchThermalActionStatus;

/* switchModuleInfoTable */
void            init_switchModuleInfoTable(void);
FindVarMethod   var_switchModuleInfoTable;

#if (SYS_CPNT_SWCTRL_MTU_CONFIG_MODE == SYS_CPNT_SWCTRL_MTU_PER_SYSTEM)
Netsnmp_Node_Handler do_switchSystemJumboMtu;
#endif /* #if (SYS_CPNT_SWCTRL_MTU_CONFIG_MODE == SYS_CPNT_SWCTRL_MTU_PER_SYSTEM) */

/* switchAlarmInputTable */
void init_switchAlarmInputTable(void);
FindVarMethod var_switchAlarmInputTable;
WriteMethod write_switchAlarmInputName;

/* switchAlarmOutputTable */
void init_switchAlarmOutputTable(void);
FindVarMethod var_switchAlarmOutputTable;

#if (SYS_CPNT_CRAFT_PORT == TRUE) && (SYS_CPNT_CRAFT_PORT_MODE == SYS_CPNT_CRAFT_PORT_MODE_FRONT_PORT_CRAFT_PORT)
Netsnmp_Node_Handler get_switchCraftLinkStatus;
#endif

/*portTable*/
void init_portTable(void);
FindVarMethod var_portTable;
WriteMethod write_portName;
WriteMethod write_portSpeedDpxCfg;
WriteMethod write_portFlowCtrlCfg;
WriteMethod write_portCapabilities;
WriteMethod write_portAutonegotiation;
WriteMethod write_portComboForcedMode;
#if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION == TRUE)
#if (SYS_DFLT_TRAFFIC_SEG_METHOD == SYS_DFLT_TRAFFIC_SEG_METHOD_PORT_PRIVATE_MODE)
WriteMethod write_portPrivateMode;
#endif /* #if (SYS_DFLT_TRAFFIC_SEG_METHOD == SYS_DFLT_TRAFFIC_SEG_METHOD_PORT_PRIVATE_MODE) */
#endif /* #if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION == TRUE) */
#if (SYS_CPNT_SWCTRL_MDIX_CONFIG)
WriteMethod write_portMdixMode;
#endif /* #if (SYS_CPNT_SWCTRL_MDIX_CONFIG) */
#if (SYS_CPNT_SWCTRL_MTU_CONFIG_MODE == SYS_CPNT_SWCTRL_MTU_PER_PORT)
WriteMethod write_portMtu;
#endif /* #if (SYS_CPNT_SWCTRL_MTU_CONFIG_MODE == SYS_CPNT_SWCTRL_MTU_PER_PORT) */
#if (SYS_CPNT_AMTR == TRUE)
WriteMethod write_portMacAddrLearningStatus;
#endif /* #if (SYS_CPNT_AMTR == TRUE) */
#if (SYS_CPNT_SWCTRL_SWITCH_MODE_CONFIGURABLE == TRUE)
WriteMethod write_portSwitchingMode;
#endif

/* cable diagnostics */
#if (SYS_CPNT_SWCTRL_CABLE_DIAG == TRUE)
void init_cableDiagCtlAction(void);
Netsnmp_Node_Handler do_cableDiagCtlAction;

void init_cableDiagResultTable(void);
FindVarMethod var_cableDiagResultTable;
#endif    /* #if (SYS_CPNT_SWCTRL_CABLE_DIAG == TRUE) */

#if (SYS_CPNT_INTERNAL_LOOPBACK_TEST == TRUE)
void init_loopInternalCtlAction(void);
    Netsnmp_Node_Handler do_loopInternalCtlAction;
void init_loopInternalResultTable(void);
    FindVarMethod var_loopInternalResultTable;
#endif /* end of #if (SYS_CPNT_INTERNAL_LOOPBACK_TEST == TRUE) */

/********************************************
 *****************portUtilTable**************
 ********************************************
 */
void init_portUtilTable(void);
FindVarMethod var_portUtilTable;

/* portHist SYS_CPNT_NMTR_HISTORY */
void init_portHistControlTable(void);
WriteMethod write_portHistControlName;
WriteMethod write_portHistControlDataSource;
WriteMethod write_portHistControlInterval;
WriteMethod write_portHistControlBucketsRequested;
WriteMethod write_portHistControlStatus;
FindVarMethod var_portHistControlTable;
void init_portHistCurrentTable(void);
FindVarMethod var_portHistCurrentTable;
void init_portHistPreviousTable(void);
FindVarMethod var_portHistPreviousTable;

/* portMediaInfoTable */
void init_portMediaInfoTable(void);
FindVarMethod var_portMediaInfoTable;

/* portOpticalMonitoringInfoTable*/
void init_portOpticalMonitoringInfoTable(void);
FindVarMethod var_portOpticalMonitoringInfoTable;

/* portTransceiverThresholdInfoTable */
void init_portTransceiverThresholdInfoTable(void);
FindVarMethod var_portTransceiverThresholdInfoTable;

/* portFecTable */
void init_portFecTable(void);
WriteMethod write_portFecMode;
FindVarMethod var_portFecTable;

WriteMethod write_portTransceiverThresholdInfoTemperatureLowAlarm;
WriteMethod write_portTransceiverThresholdInfoTemperatureLowWarn;
WriteMethod write_portTransceiverThresholdInfoTemperatureHighWarn;
WriteMethod write_portTransceiverThresholdInfoTemperatureHighAlarm;
WriteMethod write_portTransceiverThresholdInfoVccLowAlarm;
WriteMethod write_portTransceiverThresholdInfoVccLowWarn;
WriteMethod write_portTransceiverThresholdInfoVccHighWarn;
WriteMethod write_portTransceiverThresholdInfoVccHighAlarm;
WriteMethod write_portTransceiverThresholdInfoTxBiasCurrentLowAlarm;
WriteMethod write_portTransceiverThresholdInfoTxBiasCurrentLowWarn;
WriteMethod write_portTransceiverThresholdInfoTxBiasCurrentHighWarn;
WriteMethod write_portTransceiverThresholdInfoTxBiasCurrentHighAlarm;
WriteMethod write_portTransceiverThresholdInfoTxPowerLowAlarm;
WriteMethod write_portTransceiverThresholdInfoTxPowerLowWarn;
WriteMethod write_portTransceiverThresholdInfoTxPowerHighWarn;
WriteMethod write_portTransceiverThresholdInfoTxPowerHighAlarm;
WriteMethod write_portTransceiverThresholdInfoRxPowerLowAlarm;
WriteMethod write_portTransceiverThresholdInfoRxPowerLowWarn;
WriteMethod write_portTransceiverThresholdInfoRxPowerHighWarn;
WriteMethod write_portTransceiverThresholdInfoRxPowerHighAlarm;
WriteMethod write_portTransceiverThresholdAutoMode;

/* portPDTable */
void init_portPDTable(void);
FindVarMethod var_portPDTable;

/* trunkMgt*/
void init_trunkMgt(void);
Netsnmp_Node_Handler get_trunkValidNumber;
Netsnmp_Node_Handler get_trunkMaxId;
Netsnmp_Node_Handler do_trunkBalanceMode;

/*trunkTable*/
void init_trunkTable(void);
FindVarMethod var_trunkTable;
    WriteMethod write_trunkPorts;
    WriteMethod write_trunkStatus;
    WriteMethod write_trunkGroup;

/*lacpPortTable*/
void init_lacpPortTable(void);
FindVarMethod var_lacpPortTable;
    WriteMethod write_lacpPortStatus;

/* staMgt*/
void init_staMgt(void);
Netsnmp_Node_Handler do_staSystemStatus;
Netsnmp_Node_Handler do_mstRevision;
Netsnmp_Node_Handler do_staProtocolType;
Netsnmp_Node_Handler do_staTxHoldCount;
Netsnmp_Node_Handler do_staSystemBPDUFlooding;
#if(SYS_CPNT_XSTP_TC_PROP_GROUP == TRUE)
void init_staTcPropGroupTable(void);
FindVarMethod var_staTcPropGroupTable;
WriteMethod write_staTcPropGroupPorts;
#endif /*#if(SYS_CPNT_XSTP_TC_PROP_GROUP == TRUE)*/

/*xstMgt*/
void init_xstMgt(void);
Netsnmp_Node_Handler do_mstMaxHops;
Netsnmp_Node_Handler do_mstName;
Netsnmp_Node_Handler do_staPathCostMethod;

/*staPortTable*/
void init_staPortTable(void);
FindVarMethod var_staPortTable;
    WriteMethod write_staPortFastForward;
    WriteMethod write_staPortProtocolMigration;
    WriteMethod write_staPortAdminEdgePort;
    WriteMethod write_staPortAdminPointToPoint;
    WriteMethod write_staPortSystemStatus;
    WriteMethod write_staPortLongAdminPathCost;
    WriteMethod write_staPortBpduFlooding;
    WriteMethod write_staPortBpduGuard;
    WriteMethod write_staPortAdminEdgePortWithAuto;
    WriteMethod write_staPortBpduFilter;
    WriteMethod write_staPortRootGuardStatus;
    WriteMethod write_staPortBpduGuardAutoRecovery;
    WriteMethod write_staPortBpduGuardAutoRecoveryInterval;
    WriteMethod write_staPortTcPropStop;

/*xstInstanceCfgTable*/
void init_xstInstanceCfgTable(void);
FindVarMethod var_xstInstanceCfgTable;
    WriteMethod write_xstInstanceCfgPriority;

/*  xstInstancePortTable*/
void init_xstInstancePortTable(void);
FindVarMethod var_xstInstancePortTable;
    WriteMethod write_xstInstancePortPriority;
    WriteMethod write_xstInstancePortPathCost;
    WriteMethod     write_xstInstancePortAdminPathCost;

/* mstInstanceEditTable*/
void            init_mstInstanceEditTable(void);
FindVarMethod   var_mstInstanceEditTable;
WriteMethod     write_mstInstanceEditVlansMap;
WriteMethod     write_mstInstanceEditVlansMap2k;
WriteMethod     write_mstInstanceEditVlansMap3k;
WriteMethod     write_mstInstanceEditVlansMap4k;

/* mstInstanceOperTable*/
void            init_mstInstanceOperTable(void);
FindVarMethod   var_mstInstanceOperTable;

/*tftpMgt */
void init_tftpMgt(void);
Netsnmp_Node_Handler do_tftpFileType;
Netsnmp_Node_Handler get_tftpStatus;
Netsnmp_Node_Handler do_tftpAction;
Netsnmp_Node_Handler do_tftpServer;
Netsnmp_Node_Handler do_tftpSrcFile;
Netsnmp_Node_Handler do_tftpDestFile;

/*  restartMgt*/

void init_restartMgt(void);
Netsnmp_Node_Handler do_restartConfigFile;
Netsnmp_Node_Handler do_restartControl;
Netsnmp_Node_Handler do_restartOpCodeFile;

/* mirrorMgt*/
void init_mirrorTable(void);
FindVarMethod var_mirrorTable;
    WriteMethod write_mirrorType;
    WriteMethod write_mirrorStatus;

#if (SYS_CPNT_VLAN_MIRROR == TRUE)
/* vlanMirrorTable */
void init_vlanMirrorTable(void);
FindVarMethod var_vlanMirrorTable;
WriteMethod write_vlanMirrorStatus;
#endif /* end of #if (SYS_CPNT_VLAN_MIRROR == TRUE) */

#if (SYS_CPNT_MAC_BASED_MIRROR == TRUE)
void init_macMirrorTable(void);
FindVarMethod var_macMirrorTable;
WriteMethod write_macMirrorStatus;
#endif  /* #if (SYS_CPNT_MAC_BASED_MIRROR == TRUE) */

#if (SYS_CPNT_RSPAN == TRUE)
/* vlanStaticExtTable */
void init_vlanStaticExtTable(void);
FindVarMethod var_vlanStaticExtTable;
WriteMethod write_vlanStaticExtRspanStatus;

/* rspanTable */
void init_rspanTable(void);
FindVarMethod var_rspanTable;
WriteMethod write_rspanSrcTxPorts;
WriteMethod write_rspanSrcRxPorts;
WriteMethod write_rspanDstPort;
WriteMethod write_rspanDstPortTag;
WriteMethod write_rspanSwitchRole;
WriteMethod write_rspanRemotePorts;
WriteMethod write_rspanRemoteVlanId;
WriteMethod write_rspanStatus;
#endif /* end of #if (SYS_CPNT_RSPAN == TRUE) */

#if (SYS_CPNT_ACL_MIRROR == TRUE)
void init_aclMirrorTable(void);
FindVarMethod var_aclMirrorTable;
WriteMethod write_aclMirrorStatus;
#endif /*#if (SYS_CPNT_ACL_MIRROR == TRUE)*/

/* igmpsnoopMgt*/
void init_igmpSnoopMgt(void);
Netsnmp_Node_Handler do_igmpSnoopStatus;
Netsnmp_Node_Handler do_igmpSnoopQuerier;
Netsnmp_Node_Handler do_igmpSnoopVersion;
Netsnmp_Node_Handler do_igmpSnoopQueryCount;
Netsnmp_Node_Handler do_igmpSnoopQueryMaxResponseTime;
Netsnmp_Node_Handler do_igmpSnoopRouterPortExpireTime;
Netsnmp_Node_Handler do_igmpSnoopQueryInterval;
Netsnmp_Node_Handler get_igmpSnoopSystemRouterCurrentPorts;
Netsnmp_Node_Handler do_igmpSnoopSystemRouterStaticPorts;
#if (SYS_CPNT_IGMPSNP_FORWARD_PRIORITY == TRUE)
Netsnmp_Node_Handler do_igmpSnoopForwardingPriority;
#endif
/* igmpsnoopGlobalMgt*/
void init_igmpSnoopGlobalMgt(void);
Netsnmp_Node_Handler do_igmpSnoopProxyReporting;
Netsnmp_Node_Handler do_igmpSnoopRouterAlertOptionCheck;
Netsnmp_Node_Handler do_igmpSnoopTcnFlood;
Netsnmp_Node_Handler do_igmpSnoopTcnQuerySolicit;
Netsnmp_Node_Handler do_igmpSnoopUnregisteredDataFlood;
Netsnmp_Node_Handler do_igmpSnoopUnsolicitedReportInterval;
Netsnmp_Node_Handler do_igmpSnoopVersionExclusive;
Netsnmp_Node_Handler do_igmpSnoopMrouterForwardMode;

/*igmpSnoopRouterCurrentTable*/

void init_igmpSnoopRouterCurrentTable(void);
FindVarMethod var_igmpSnoopRouterCurrentTable;

/*igmpSnoopRouterStaticTable*/
void init_igmpSnoopRouterStaticTable(void);
FindVarMethod var_igmpSnoopRouterStaticTable;
    WriteMethod write_igmpSnoopRouterStaticPorts;
    WriteMethod write_igmpSnoopRouterStaticStatus;

/*igmpSnoopMulticastCurrentTable*/
void init_igmpSnoopMulticastCurrentTable(void);
FindVarMethod var_igmpSnoopMulticastCurrentTable;

/*igmpSnoopMulticastStaticTable*/
void init_igmpSnoopMulticastStaticTable(void);
FindVarMethod var_igmpSnoopMulticastStaticTable;
    WriteMethod write_igmpSnoopMulticastStaticPorts;
    WriteMethod write_igmpSnoopMulticastStaticStatus;

/* igmpSnoopCurrentVlanTable */
void init_igmpSnoopCurrentVlanTable(void);
FindVarMethod var_igmpSnoopCurrentVlanTable;
WriteMethod write_igmpSnoopCurrentVlanStatus;
WriteMethod write_igmpSnoopCurrentVlanGeneralQuerySuppression;
WriteMethod write_igmpSnoopCurrentVlanLastMemQueryCount;
WriteMethod write_igmpSnoopCurrentVlanLastMemQureyIntvl;
WriteMethod write_igmpSnoopCurrentVlanProxyAddress;
WriteMethod write_igmpSnoopCurrentVlanProxyQueryIntvl;
WriteMethod write_igmpSnoopCurrentVlanProxyQureyRespIntvl;
WriteMethod write_igmpSnoopCurrentVlanProxyReporting;
WriteMethod write_igmpSnoopCurrentVlanVersion;
WriteMethod write_igmpSnoopCurrentVlanVersionExclusive;
WriteMethod write_igmpSnoopCurrentVlanReportSupression;

void init_igmpSnoopReportSuppression(void);
Netsnmp_Node_Handler do_igmpSnoopReportSuppression;

/*igmpSnoopMulticastGroupTable*/
void init_igmpSnoopMulticastGroupTable(void);
FindVarMethod var_igmpSnoopMulticastGroupTable;

void init_igmpSnoopPortTable(void);
FindVarMethod var_igmpSnoopPortTable;

#if (SYS_CPNT_IGMPAUTH == TRUE)
WriteMethod write_igmpSnoopAuthentication;
#endif


void init_igmpSnoopClearDynamicGroups(void);
Netsnmp_Node_Handler do_igmpSnoopClearDynamicGroups;

void init_igmpSnoopVlanTable(void);
FindVarMethod var_igmpSnoopVlanTable;
WriteMethod write_igmpSnoopVlanClearStatistics;

/*netConfigTable*/
#if(SYS_CPNT_ROUTING==TRUE)
    void init_iPAddrTable(void);
    FindVarMethod var_iPAddrTable;
    WriteMethod write_iPAddrPrimaryInterface;
    WriteMethod write_iPAddrStatus;
#else
    void init_netConfigTable(void);
    FindVarMethod var_netConfigTable;
    WriteMethod write_netConfigPrimaryInterface;
    WriteMethod write_netConfigUnnumbered;
    WriteMethod write_netConfigStatus;
#endif

/*ipMgt*/
void init_ipMgt(void);
#if (SYS_CPNT_HTTPS == TRUE)/*fuzhimin,20090512*/
Netsnmp_Node_Handler do_ipHttpsPort;
#endif
//Netsnmp_Node_Handler do_dhcpRelayRestart;
Netsnmp_Node_Handler do_ipIcmpRedirectStatus;
#if (SYS_CPNT_HTTP == TRUE)/*fuzhimin,20090512*/
Netsnmp_Node_Handler do_ipHttpState;
#endif
Netsnmp_Node_Handler do_dhcpServerServiceStatus;
#if (SYS_CPNT_HTTPS == TRUE)/*fuzhimin,20090512*/
Netsnmp_Node_Handler do_ipHttpsState;
#endif
Netsnmp_Node_Handler do_ipDhcpRestart;
Netsnmp_Node_Handler do_netDefaultGateway;
#if (SYS_CPNT_HTTP == TRUE)/*fuzhimin,20090512*/
Netsnmp_Node_Handler do_ipHttpPort;
#endif

/* dhcpcInterfaceTable*/
void init_dhcpcInterfaceTable(void);
FindVarMethod var_dhcpcInterfaceTable;
    WriteMethod write_dhcpcIfClientIdMode;
    WriteMethod write_dhcpcIfClientId;
    WriteMethod write_dhcpcIfVendorClassIdMode;
    WriteMethod write_dhcpcIfVendorClassId;

#if (SYS_CPNT_DHCP_RELAY==TRUE)
/*dhcpRelayMgt*/
void            init_dhcpRelay(void);
Netsnmp_Node_Handler do_dhcpRelayRestart;

/*dhcpRelayServerAddrTable*/
void            init_dhcpRelayServerAddrTable(void);
FindVarMethod   var_dhcpRelayServerAddrTable;
WriteMethod     write_dhcpRelayServerAddrServerIp;

/*dhcpRelayServerInetAddrTable*/
void           init_dhcpRelayServerInetAddrTable(void);
FindVarMethod   var_dhcpRelayServerInetAddrTable;
WriteMethod     write_dhcpRelayServerInetAddrType;
WriteMethod     write_dhcpRelayServerInetAddr;


#endif  /* #if (SYS_CPNT_DHCP_RELAY==TRUE) */

/*dhcpServerMgt*/
void            init_dhcpServerMgt(void);
Netsnmp_Node_Handler do_dhcpServerServiceStatus;
#if 0 /* shumin.wang added for inet address, 2008-12-30 */
/*dhcpPoolTable*/
void            init_dhcpPoolTable(void);
FindVarMethod   var_dhcpPoolTable;
WriteMethod     write_dhcpPoolPoolType;
WriteMethod     write_dhcpPoolPoolAddress;
WriteMethod     write_dhcpPoolSubnetMask;
WriteMethod     write_dhcpPoolHardwareType;
WriteMethod     write_dhcpPoolMacAddress;
WriteMethod     write_dhcpPoolstatus;

/*dhcpPoolOptionTable*/
void            init_dhcpPoolOptionTable(void);
FindVarMethod   var_dhcpPoolOptionTable;
WriteMethod     write_dhcpPoolOptionNextServer;
WriteMethod     write_dhcpPoolOptionNetbiosNodeType;
WriteMethod     write_dhcpPoolOptionDomainName;
WriteMethod     write_dhcpPoolOptionBootFile;
WriteMethod     write_dhcpPoolOptionLeaseTime;
WriteMethod     write_dhcpPoolOptionCidMode;
WriteMethod     write_dhcpPoolOptionCidBuffer;

/*dhcpPoolOptionDnsSerTable*/
void            init_dhcpPoolOptionDnsSerTable(void);
FindVarMethod   var_dhcpPoolOptionDnsSerTable;
WriteMethod     write_dhcpPoolOptionDnsSerIpAddress;

/*dhcpPoolOptDefaultRouterTable*/
void            init_dhcpPoolOptDefaultRouterTable(void);
FindVarMethod   var_dhcpPoolOptDefaultRouterTable;
WriteMethod     write_dhcpPoolOptDefaultRouterIpAddress;

/*dhcpPoolOptNetbiosServerTable*/
void            init_dhcpPoolOptNetbiosServerTable(void);
FindVarMethod   var_dhcpPoolOptNetbiosServerTable;
WriteMethod     write_dhcpPoolOptNetbiosServerIpAddress;

/*dhcpServerExcludedIpAddrTable*/
void            init_dhcpServerExcludedIpAddrTable(void);
FindVarMethod   var_dhcpServerExcludedIpAddrTable;
WriteMethod     write_dhcpServerExcludedIpAddrStatus;

/*dhcpServerLeaseBindingTable*/
void            init_dhcpServerLeaseBindingTable(void);
FindVarMethod   var_dhcpServerLeaseBindingTable;
WriteMethod     write_dhcpServerLeaseBindingStatus;
#else
/*dhcpPoolTable*/
void            init_dhcpPoolInetTable(void);
FindVarMethod   var_dhcpPoolInetTable;
WriteMethod     write_dhcpPoolInetPoolType;
WriteMethod     write_dhcpPoolInetAddressType;
WriteMethod     write_dhcpPoolInetAddress;
WriteMethod     write_dhcpPoolInetSubnetMaskType;
WriteMethod     write_dhcpPoolInetSubnetMask;
WriteMethod     write_dhcpPoolInetHardwareType;
WriteMethod     write_dhcpPoolInetMacAddress;
WriteMethod     write_dhcpPoolInetstatus;

/*dhcpPoolOptionTable*/
void            init_dhcpPoolInetOptionTable(void);
FindVarMethod   var_dhcpPoolInetOptionTable;
WriteMethod     write_dhcpPoolInetOptionNextServerType;
WriteMethod     write_dhcpPoolInetOptionNextServer;
WriteMethod     write_dhcpPoolInetOptionNetbiosNodeType;
WriteMethod     write_dhcpPoolInetOptionDomainName;
WriteMethod     write_dhcpPoolInetOptionBootFile;
WriteMethod     write_dhcpPoolInetOptionLeaseTime;
WriteMethod     write_dhcpPoolInetOptionCidMode;
WriteMethod     write_dhcpPoolInetOptionCidBuffer;

/*dhcpPoolOptionDnsSerTable*/
void            init_dhcpPoolInetOptionDnsSerTable(void);
FindVarMethod   var_dhcpPoolInetOptionDnsSerTable;
WriteMethod     write_dhcpPoolOptionDnsSerIpAddressType;
WriteMethod     write_dhcpPoolInetOptionDnsSerIpAddress;

/*dhcpPoolOptDefaultRouterTable*/
void            init_dhcpPoolOptInetDefaultRouterTable(void);
FindVarMethod   var_dhcpPoolOptInetDefaultRouterTable;
WriteMethod     write_dhcpPoolOptInetDefaultRouterIpAddressType;
WriteMethod     write_dhcpPoolOptInetDefaultRouterIpAddress;

/*dhcpPoolOptNetbiosServerTable*/
void            init_dhcpPoolOptInetNetbiosServerTable(void);
FindVarMethod   var_dhcpPoolOptInetNetbiosServerTable;
WriteMethod     write_dhcpPoolOptInetNetbiosServerIpAddressType;
WriteMethod     write_dhcpPoolOptInetNetbiosServerIpAddress;

/*dhcpServerExcludedIpAddrTable*/
void            init_dhcpServerExcludedInetAddrTable(void);
FindVarMethod   var_dhcpServerExcludedInetAddrTable;
WriteMethod     write_dhcpServerExcludedInetAddrStatus;

/*dhcpServerLeaseBindingTable*/
void            init_dhcpServerInetLeaseBindingTable(void);
FindVarMethod   var_dhcpServerInetLeaseBindingTable;
WriteMethod     write_dhcpServerInetLeaseBindingStatus;
#endif

/* pingMgt */
void init_pingMgt(void);
Netsnmp_Node_Handler do_pingIpAddress;
Netsnmp_Node_Handler do_pingPacketSize;
Netsnmp_Node_Handler get_pingCompleted;
Netsnmp_Node_Handler do_pingAction;
Netsnmp_Node_Handler do_pingProbeCount;
Netsnmp_Node_Handler get_pingSentPackets;
Netsnmp_Node_Handler get_pingReceivedPackets;
Netsnmp_Node_Handler get_pingLossRate;
Netsnmp_Node_Handler get_pingResultSentPackets;
Netsnmp_Node_Handler get_pingResultReceivedPackets;
Netsnmp_Node_Handler get_pingResultLossRate;

/* pingHistoryTable */
void init_pingHistoryTable(void);
FindVarMethod var_pingHistoryTable;
/* pingProbeHistoryTable */
//void init_pingProbeHistoryTablee(void);
//FindVarMethod var_pingProbeHistoryTable;

/*dhcpRelayOption82*/

void init_dhcpRelayOption82();
Netsnmp_Node_Handler do_dhcpOption82Status;
Netsnmp_Node_Handler do_dhcpOption82Policy;
Netsnmp_Node_Handler do_dhcpOption82RemoteIDMode;
Netsnmp_Node_Handler do_dhcpOption82RemoteIDString;
Netsnmp_Node_Handler do_dhcpOption82EncodeFormat;
FindVarMethod        var_dhcpOption82RelayServerAddrTable;
WriteMethod          write_dhcpOption82RelayServerAddrServerIp;

/*bcastStormTable*/
void init_bcastStormTable(void);
FindVarMethod var_bcastStormTable;
WriteMethod write_bcastStormStatus;
WriteMethod write_bcastStormSampleType;
WriteMethod write_bcastStormPktRate;
WriteMethod write_bcastStormOctetRate;
WriteMethod write_bcastStormPercent;
WriteMethod write_bcastStormOctetRateInKilo;
WriteMethod write_bcastStormBitRateInKilo;

/*mcastStormTable*/
void init_mcastStormTable(void);
FindVarMethod var_mcastStormTable;
WriteMethod write_mcastStormStatus;
WriteMethod write_mcastStormSampleType;
WriteMethod write_mcastStormPktRate;
WriteMethod write_mcastStormOctetRate;
WriteMethod write_mcastStormPercent;

/*ucastStormTable*/
void init_unknownUcastStormTable(void);
FindVarMethod var_unknownUcastStormTable;
WriteMethod write_unknownUcastStormStatus;
WriteMethod write_unknownUcastStormSampleType;
WriteMethod write_unknownUcastStormPktRate;
WriteMethod write_unknownUcastStormOctetRate;
WriteMethod write_unknownUcastStormPercent;

/*rateBasedStormTable*/
void init_rateBasedStormTable(void);
FindVarMethod var_rateBasedStormTable;
WriteMethod write_rateBasedStormRate;
WriteMethod write_rateBasedStormMode;

#if (SYS_CPNT_ATC_STORM == TRUE)
void init_atcMgt(void);

#if (SYS_CPNT_ATC_BSTORM == TRUE)
Netsnmp_Node_Handler do_atcBcastStormTcApplyTime;
Netsnmp_Node_Handler do_atcBcastStormTcReleaseTime;

/* function declarations */
void init_atcBcastStormTable(void);
FindVarMethod var_atcBcastStormTable;
WriteMethod write_atcBcastStormEnable;
WriteMethod write_atcBcastStormControlRelease;
WriteMethod write_atcBcastStormAutoRelease;
WriteMethod write_atcBcastStormSampleType;
WriteMethod write_atcBcastStormAlarmFireThreshold;
WriteMethod write_atcBcastStormAlarmClearThreshold;
WriteMethod write_atcBcastStormTcAction;
WriteMethod write_atcBcastStormAlarmFireTrapStatus;
WriteMethod write_atcBcastStormAlarmClearTrapStatus;
WriteMethod write_atcBcastStormTcApplyTrapStatus;
WriteMethod write_atcBcastStormTcReleaseTrapStatus;
#endif

#if (SYS_CPNT_ATC_MSTORM == TRUE)
Netsnmp_Node_Handler do_atcMcastStormTcApplyTime;
Netsnmp_Node_Handler do_atcMcastStormTcReleaseTime;

/* function declarations */
void init_atcMcastStormTable(void);
FindVarMethod var_atcMcastStormTable;
WriteMethod write_atcMcastStormEnable;
WriteMethod write_atcMcastStormControlRelease;
WriteMethod write_atcMcastStormAutoRelease;
WriteMethod write_atcMcastStormSampleType;
WriteMethod write_atcMcastStormAlarmFireThreshold;
WriteMethod write_atcMcastStormAlarmClearThreshold;
WriteMethod write_atcMcastStormTcAction;
WriteMethod write_atcMcastStormAlarmFireTrapStatus;
WriteMethod write_atcMcastStormAlarmClearTrapStatus;
WriteMethod write_atcMcastStormTcApplyTrapStatus;
WriteMethod write_atcMcastStormTcReleaseTrapStatus;
#endif
#endif

/*vlanTable*/
void init_vlanTable(void);
FindVarMethod var_vlanTable;
    WriteMethod write_vlanAddressMethod;

/*vlanPortTable*/
void init_vlanPortTable(void);
FindVarMethod var_vlanPortTable;
    WriteMethod write_vlanPortMode;
    WriteMethod write_vlanPortPrivateVlanType;

#if (SYS_CPNT_MAC_VLAN == TRUE)
void init_macVlanTable(void);
FindVarMethod var_macVlanTable;
WriteMethod write_macVlanId;

#if (SYS_CPNT_MAC_VLAN_WITH_PRIORITY == TRUE)
WriteMethod write_macVlanPriority;
#endif

WriteMethod write_macVlanStatus;
void init_macVlanClearAction(void);
Netsnmp_Node_Handler do_macVlanClearAction;
#endif

/* vlanStaticTable */
void init_vlanStaticTable(void);
FindVarMethod var_vlanStaticTable;
WriteMethod write_vlanStaticInterfaceType;

#if (SYS_CPNT_ADD == TRUE)
void init_voiceVlanMgt(void);
Netsnmp_Node_Handler do_voiceVlanEnabledId;
Netsnmp_Node_Handler do_voiceVlanAgingTime;
void init_voiceVlanOuiTable(void);
FindVarMethod var_voiceVlanOuiTable;
WriteMethod write_voiceVlanOuiMask;
WriteMethod write_voiceVlanOuiDescription;
WriteMethod write_voiceVlanOuiStatus;
void init_voiceVlanPortTable(void);
FindVarMethod var_voiceVlanPortTable;
WriteMethod write_voiceVlanPortMode;
WriteMethod write_voiceVlanPortSecurity;
WriteMethod write_voiceVlanPortPriority;
WriteMethod write_voiceVlanPortRuleOui;
WriteMethod write_voiceVlanPortRuleLldp;
#endif
/* priorityMgt*/
void init_priorityMgt(void);
#if 1
Netsnmp_Node_Handler do_prioCopyIpPrec;
Netsnmp_Node_Handler do_prioCopyIpDscp;
Netsnmp_Node_Handler do_prioIpPrecDscpStatus;
Netsnmp_Node_Handler do_prioIpPortEnableStatus;
Netsnmp_Node_Handler do_prioCopyIpPort;
#endif
Netsnmp_Node_Handler do_prioQueueMode;
#if 1
Netsnmp_Node_Handler do_prioIpPrecRestoreDefault;
Netsnmp_Node_Handler do_prioIpDscpRestoreDefault;

/*prioIpPrecTable*/
void init_prioIpPrecTable(void);
FindVarMethod var_prioIpPrecTable;
    WriteMethod write_prioIpPrecCos;

/*prioIpDscpTable*/
void init_prioIpDscpTable(void);
FindVarMethod var_prioIpDscpTable;
WriteMethod write_prioIpDscpCos;
WriteMethod write_prioIpDscpStatus;


/*prioIpPortTable*/
void            init_prioIpPortTable(void);
FindVarMethod   var_prioIpPortTable;
WriteMethod     write_prioIpPortCos;
WriteMethod     write_prioIpPortStatus;
#endif
/*prioPortTable*/
void            init_prioPortTable(void);
FindVarMethod   var_prioPortTable;
WriteMethod write_prioPortQueueMode;


/*prioWrrPortTable*/
void            init_prioWrrPortTable(void);
FindVarMethod   var_prioWrrPortTable;
WriteMethod     write_prioWrrPortWeight;
WriteMethod     write_prioWrrPortStrictStatus;

/*prioWrrTable*/
void init_prioWrrTable(void);
FindVarMethod var_prioWrrTable;
WriteMethod write_prioWrrWeight;
WriteMethod write_prioWrrStrictStatus;

/*2008-06-04, Jinfeng.Chen: prioSchedModePortTable */
void init_prioSchedModePortTable(void);
FindVarMethod   var_prioSchedModePortTable;
WriteMethod     write_prioSchedModePort;

/* use standard MIB
 */
#if 0
/* trapDestTable*/
void init_trapDestTable(void);
FindVarMethod var_trapDestTable;
    WriteMethod write_trapDestCommunity;
    WriteMethod write_trapDestStatus;
    WriteMethod write_trapDestVersion;
    WriteMethod write_trapDestUdpPort;
    WriteMethod write_trapDestType;
#endif /* #if 0 */

/* rateLimitMgt */
void            init_rateLimitMgt(void);
Netsnmp_Node_Handler do_rateLimitStatus;

/*rateLimitPortTable*/
void            init_rateLimitPortTable(void);
FindVarMethod   var_rateLimitPortTable;
WriteMethod     write_rlPortInputLimit;
WriteMethod     write_rlPortOutputLimit;
WriteMethod     write_rlPortInputStatus;
WriteMethod     write_rlPortOutputStatus;
WriteMethod     write_rlPortInputLimitInKilo;
WriteMethod     write_rlPortOutputLimitInKilo;

/* markerTable */
void            init_markerTable(void);
FindVarMethod   var_markerTable;
WriteMethod     write_markerActionBitList;
WriteMethod     write_markerDscp;
WriteMethod     write_markerPrecedence;
WriteMethod     write_markerPriority;
WriteMethod     write_markerStatus;

#if (SYS_CPNT_COS == TRUE)
void            init_prioAclToCosMappingTable(void);
FindVarMethod   var_prioAclToCosMappingTable;
WriteMethod     write_prioAclToCosMappingCosValue;
WriteMethod     write_prioAclToCosMappingStatus;
FindVarMethod   var_prioIfClassificationModeTable;
WriteMethod     write_prioIfClassificationModeStatus;
FindVarMethod   var_prioCosToDscpTable;
WriteMethod     write_prioCosToDscpDscpValue;
WriteMethod     write_prioCosToDscpPhbValue;
WriteMethod     write_prioCosToDscpColorValue;
FindVarMethod   var_prioPrecToDscpTable;
WriteMethod     write_prioPrecToDscpDscpValue;
WriteMethod     write_prioPrecToDscpPhbValue;
WriteMethod     write_prioPrecToDscpColorValue;
FindVarMethod   var_prioDscpToDscpTable;
WriteMethod     write_prioDscpToDscpDscpValue;
WriteMethod     write_prioDscpToDscpPhbValue;
WriteMethod     write_prioDscpToDscpColorValue;
FindVarMethod   var_prioDstPortToDscpTable;
WriteMethod     write_prioDstPortToDscpDscpValue;
WriteMethod     write_prioDstPortToDscpPhbValue;
WriteMethod     write_prioDstPortToDscpColorValue;
FindVarMethod   var_prioDscpToCosTable;
WriteMethod     write_prioDscpToCosCFICosValue;
FindVarMethod   var_prioPrioToDropPrecTable;
WriteMethod     write_prioPrioToDropPrecPrecValue;
FindVarMethod   var_prioDscpToQueueTable;
WriteMethod     write_prioDscpToQueueQueueValue;
FindVarMethod   var_prioDefaultPrioTable;
WriteMethod     write_prioDefaultPrioValue;

void            init_prioGlobalCosToDscpTable(void);
FindVarMethod   var_prioGlobalCosToDscpTable;
WriteMethod     write_prioGlobalCosToDscpDscpValue;
WriteMethod     write_prioGlobalCosToDscpPhbValue;
WriteMethod     write_prioGlobalCosToDscpColorValue;

void            init_prioGlobalDscpToDscpTable(void);
FindVarMethod   var_prioGlobalDscpToDscpTable;
WriteMethod     write_prioGlobalDscpToDscpDscpValue;
WriteMethod     write_prioGlobalDscpToDscpPhbValue;
WriteMethod     write_prioGlobalDscpToDscpColorValue;

void            init_prioGlobalDscpToQueueTable(void);
FindVarMethod   var_prioGlobalDscpToQueueTable;
WriteMethod     write_prioGlobalDscpToQueueQueueValue;
#endif /* SYS_CPNT_COS */

#if (SYS_CPNT_QOS_V2 != TRUE)
/* diffServMgt */
void            init_diffServMgt(void);
Netsnmp_Node_Handler get_diffServClassMapNextFree;
Netsnmp_Node_Handler get_diffServClassMapElementNextFree;

/* diffServClfrExtTable */
void            init_diffServClfrExtTable(void);
FindVarMethod   var_diffServClfrExtTable;
WriteMethod     write_diffServClfrExtName;
WriteMethod     write_diffServClfrExtDesc;

/* diffServClassMapTable */
void            init_diffServClassMapTable(void);
FindVarMethod   var_diffServClassMapTable;
WriteMethod     write_diffServClassMapName;
WriteMethod     write_diffServClassMapDesc;
WriteMethod     write_diffServClassMapType;
WriteMethod     write_diffServCalssMapStatus;

/* diffServClassMapElementTable */
void            init_diffServClassMapElementTable(void);
FindVarMethod   var_diffServClassMapElementTable;
FindVarMethod   var_diffServClassMapElementTable;
WriteMethod     write_diffServClassMapElementSpecific;
WriteMethod     write_diffServClassMapElementStatus;

/* diffServClassMapElementTable */
void            init_diffServMultiFieldClfrExtTable(void);
FindVarMethod   var_diffServMultiFieldClfrExtTable;
FindVarMethod   var_diffServMultiFieldClfrExtTable;
WriteMethod     write_diffServMultiFieldClfrExtType;
WriteMethod     write_diffServMultiFieldClfrExtVid;
WriteMethod     write_diffServMultiFieldClfrExtIpPrecedence;
WriteMethod     write_diffServMultiFieldClfrExtClassType;
WriteMethod     write_diffServMultiFieldClfrExtEtherType;

/* diffServToSMarkActTable */
void            init_diffServToSMarkActTable(void);
FindVarMethod   var_diffServToSMarkActTable;
FindVarMethod   var_diffServToSMarkActTable;

/* diffServDot1pMarkActTable */
void            init_diffServDot1pMarkActTable(void);
FindVarMethod   var_diffServDot1pMarkActTable;
FindVarMethod   var_diffServDot1pMarkActTable;
#endif

#if (SYS_CPNT_QOS_V2 == TRUE)
    /*diffServMgt*/

void            init_diffServMgt(void);
Netsnmp_Node_Handler do_diffServPolicyMapAttachCtlAction;
Netsnmp_Node_Handler do_diffServClassMapAttachCtlElementIndex;
Netsnmp_Node_Handler do_diffServAclAttachCtlAction;
Netsnmp_Node_Handler do_diffServAclAttachCtlAceIndex;
Netsnmp_Node_Handler do_diffServClassMapAttachCtlAction;
Netsnmp_Node_Handler do_diffServAclAttachCtlIndex;
Netsnmp_Node_Handler do_diffServAclAttachCtlAceType;
Netsnmp_Node_Handler do_diffServPolicyMapAttachCtlIndex;
Netsnmp_Node_Handler do_diffServClassMapAttachCtlElementIndexType;
Netsnmp_Node_Handler do_diffServClassMapAttachCtlIndex;
Netsnmp_Node_Handler do_diffServPolicyMapAttachCtlElementIndex;

void            init_diffServPortTable(void);
FindVarMethod   var_diffServPortTable;
WriteMethod     write_diffServPortPolicyMapIndex;
WriteMethod     write_diffServPortIngressIpAclIndex;
WriteMethod     write_diffServPortIngressMacAclIndex;
#if (SYS_CPNT_ACL_IPV6 == TRUE)
WriteMethod     write_diffServPortIngressIpv6AclIndex;
#endif

void            init_diffServPolicyMapTable(void);
FindVarMethod   var_diffServPolicyMapTable;
WriteMethod     write_diffServPolicyMapName;
WriteMethod     write_diffServPolicyMapDescription;
WriteMethod     write_diffServPolicyMapStatus;

void            init_diffServPolicyMapElementTable(void);
FindVarMethod   var_diffServPolicyMapElementTable;
WriteMethod     write_diffServPolicyMapElementClassMapIndex;
WriteMethod     write_diffServPolicyMapElementMeterIndex;
WriteMethod     write_diffServPolicyMapElementActionIndex;
WriteMethod     write_diffServPolicyMapElementStatus;

void            init_diffServClassMapTable(void);
FindVarMethod   var_diffServClassMapTable;
WriteMethod     write_diffServClassMapName_2;
WriteMethod     write_diffServClassMapDescription;
WriteMethod     write_diffServClassMapMatchType;
WriteMethod     write_diffServClassMapStatus;

void            init_diffServAclTable(void);
FindVarMethod   var_diffServAclTable;
WriteMethod     write_diffServAclName;
WriteMethod     write_diffServAclType;
WriteMethod     write_diffServAclStatus;

void            init_diffServIpAceTable(void);
FindVarMethod   var_diffServIpAceTable;
WriteMethod     write_diffServIpAceType;
WriteMethod     write_diffServIpAceAccess;
WriteMethod     write_diffServIpAceSourceIpAddr;
WriteMethod     write_diffServIpAceSourceIpAddrBitmask;
WriteMethod     write_diffServIpAceDestIpAddr;
WriteMethod     write_diffServIpAceDestIpAddrBitmask;
WriteMethod     write_diffServIpAceProtocol;
WriteMethod     write_diffServIpAcePrec;
WriteMethod     write_diffServIpAceTos;
WriteMethod     write_diffServIpAceDscp;
WriteMethod     write_diffServIpAceSourcePortOp;
WriteMethod     write_diffServIpAceMinSourcePort;
WriteMethod     write_diffServIpAceMaxSourcePort;
WriteMethod     write_diffServIpAceSourcePortBitmask;
WriteMethod     write_diffServIpAceDestPortOp;
WriteMethod     write_diffServIpAceMinDestPort;
WriteMethod     write_diffServIpAceMaxDestPort;
WriteMethod     write_diffServIpAceDestPortBitmask;
WriteMethod     write_diffServIpAceControlCode;
WriteMethod     write_diffServIpAceControlCodeBitmask;
WriteMethod     write_diffServIpAceStatus;
#if (SYS_CPNT_ACL_IP_EXT_ICMP == TRUE)
WriteMethod     write_diffServIpAceIcmpType;
#endif

#if (SYS_CPNT_ACL_IPV6 == TRUE)
void            init_diffServIpv6AceTable(void);
FindVarMethod   var_diffServIpv6AceTable;
WriteMethod     write_diffServIpv6AceType;
WriteMethod     write_diffServIpv6AceAccess;
WriteMethod     write_diffServIpv6AceSourceIpAddr;
WriteMethod     write_diffServIpv6AceSourceIpAddrPrefixLen;
WriteMethod     write_diffServIpv6AceDestIpAddr;
WriteMethod     write_diffServIpv6AceDestIpAddrPrefixLen;
#if (SYS_CPNT_ACL_IPV6_EXT_NEXT_HEADER == TRUE)
WriteMethod     write_diffServIpv6AceNextHeader;
#endif
WriteMethod     write_diffServIpv6AceDscp;
#if (SYS_CPNT_ACL_IPV6_EXT_FLOW_LABEL == TRUE)
WriteMethod     write_diffServIpv6AceFlowLabel;
#endif
WriteMethod     write_diffServIpv6AceStatus;
#endif /*#if (SYS_CPNT_ACL_IPV6 == TRUE)*/

void            init_diffServMacAceTable(void);
FindVarMethod   var_diffServMacAceTable;
WriteMethod     write_diffServMacAceAccess;
WriteMethod     write_diffServMacAcePktformat;
WriteMethod     write_diffServMacAceSourceMacAddr;
WriteMethod     write_diffServMacAceSourceMacAddrBitmask;
WriteMethod     write_diffServMacAceDestMacAddr;
WriteMethod     write_diffServMacAceDestMacAddrBitmask;
WriteMethod     write_diffServMacAceVidOp;
WriteMethod     write_diffServMacAceMinVid;
WriteMethod     write_diffServMacAceVidBitmask;
WriteMethod     write_diffServMacAceMaxVid;
WriteMethod     write_diffServMacAceEtherTypeOp;
WriteMethod     write_diffServMacAceEtherTypeBitmask;
WriteMethod     write_diffServMacAceMinEtherType;
WriteMethod     write_diffServMacAceMaxEtherType;
WriteMethod     write_diffServMacAceStatus;
WriteMethod     write_diffServMacAceCosOp;
WriteMethod     write_diffServMacAceCosBitmask;
WriteMethod     write_diffServMacAceMinCos;
WriteMethod     write_diffServMacAceMaxCos;
WriteMethod     write_diffServMacAceSourceIpAddr;
WriteMethod     write_diffServMacAceSourceIpAddrBitmask;
WriteMethod     write_diffServMacAceDestinationIpAddr;
WriteMethod     write_diffServMacAceDestinationIpAddrBitmask;
WriteMethod     write_diffServMacAceSourceIpv6Addr;
WriteMethod     write_diffServMacAceSourceIpv6PrefixLen;
WriteMethod     write_diffServMacAceDestIpv6Addr;
WriteMethod     write_diffServMacAceDestIpIpv6PrefixLen;
WriteMethod     write_diffServMacAceIpProtocol;
WriteMethod     write_diffServMacAceSourcePortOp;
WriteMethod     write_diffServMacAceSourcePort;
WriteMethod     write_diffServMacAceSourcePortBitMask;
WriteMethod     write_diffServMacAceDestPortOp;
WriteMethod     write_diffServMacAceDestPort;
WriteMethod     write_diffServMacAceDestPortBitmask;

void            init_diffServActionTable(void);
FindVarMethod   var_diffServActionTable;
WriteMethod     write_diffServActionList;
WriteMethod     write_diffServActionPktNewPri;
WriteMethod     write_diffServActionPktPhb;
WriteMethod     write_diffServActionGreenPktTransmit;
WriteMethod     write_diffServActionGreenPktNewDscp;
WriteMethod     write_diffServActionYellowPktNewDscp;
WriteMethod     write_diffServActionYellowPktDrop;
WriteMethod     write_diffServActionRedPktNewDscp;
WriteMethod     write_diffServActionRedPktDrop;
WriteMethod     write_diffServActionStatus;
WriteMethod     write_diffServActionPktNewIpPrec;
WriteMethod     write_diffServActionPktNewDscp;

void            init_diffServMeterTable(void);
FindVarMethod   var_diffServMeterTable;
WriteMethod     write_diffServMeterModel;
WriteMethod     write_diffServMeterRate;
WriteMethod     write_diffServMeterBurstSize;

/*zhangwei add*/
WriteMethod     write_diffServMeterPeakRate;
WriteMethod     write_diffServMeterPeakBurstSize;
/*zhangwei add end*/

WriteMethod     write_diffServMeterStatus;

#if (SYS_CPNT_ACL_COUNTER == TRUE)
void            init_diffServAclHwCounterTable(void);
FindVarMethod   var_diffServAclHwCounterTable;
#endif /* #if (SYS_CPNT_ACL_COUNTER == TRUE) */

void            init_diffServPolicyMapPortTable(void);
FindVarMethod   var_diffServPolicyMapPortTable;
WriteMethod     write_diffServPolicyMapPortPolicyMapIndex;
WriteMethod     write_diffServPolicyMapPortStatus;

void            init_diffServAccessGroupTable(void);
FindVarMethod   var_diffServAccessGroupTable;
WriteMethod     write_diffServAccessGroupAclIndex;
#if (SYS_CPNT_TIME_BASED_ACL == TRUE)
WriteMethod     write_diffServAccessGroupTimeRangeName;
#endif  /* (SYS_CPNT_TIME_BASED_ACL == TRUE) */
#if (SYS_CPNT_ACL_COUNTER == TRUE)
WriteMethod     write_diffServAccessGroupCounterStatus;
#endif /* (SYS_CPNT_ACL_COUNTER == TRUE) */
WriteMethod     write_diffServAccessGroupStatus;

#if (SYS_CPNT_DAI == TRUE)
void init_diffServArpAceTable(void);
FindVarMethod var_diffServArpAceTable;
WriteMethod write_diffServArpAceAction;
WriteMethod write_diffServArpAcePktType;
WriteMethod write_diffServArpAceSourceIpAddr;
WriteMethod write_diffServArpAceSourceIpAddrBitmask;
WriteMethod write_diffServArpAceDestIpAddr;
WriteMethod write_diffServArpAceDestIpAddrBitmask;
WriteMethod write_diffServArpAceSourceMacAddr;
WriteMethod write_diffServArpAceSourceMacAddrBitmask;
WriteMethod write_diffServArpAceDestMacAddr;
WriteMethod write_diffServArpAceDestMacAddrBitmask;
WriteMethod write_diffServArpAceLogStatus;
WriteMethod write_diffServArpAceStatus;

void init_diffServArpTable(void);
FindVarMethod var_diffServArpTable;
#endif  /*#if (SYS_CPNT_DAI == TRUE)*/

void init_diffServTcamMgt(void);
Netsnmp_Node_Handler get_diffServTcamTotalPolicyControlEntries;
Netsnmp_Node_Handler get_diffServTcamFreePolicyControlEntries;
Netsnmp_Node_Handler get_diffServTcamUtilization;
Netsnmp_Node_Handler get_diffServTcamEntriesUsedBySystem;
Netsnmp_Node_Handler get_diffServTcamEntriesUsedByUser;

void init_diffServTcamTable(void);
FindVarMethod   var_diffServTcamTable;

#if (SYS_CPNT_QOS_V2_CPU_PORT == TRUE)
Netsnmp_Node_Handler    do_diffServPolicyMapControlPlanePolicyMapIndex;
Netsnmp_Node_Handler    do_diffServPolicyMapControlPlaneStatus;
#if (SYS_CPNT_QOS_V2_COUNTER == TRUE)
void init_diffServControlPlaneHwCounterTable(void);
FindVarMethod var_diffServControlPlaneHwCounterTable;
WriteMethod   write_diffServControlPlaneHwCounterClassMapClearAction;
#endif
#endif /*#if (SYS_CPNT_QOS_V2_CPU_PORT == TRUE)*/
#endif/*#if (SYS_CPNT_QOS_V2 == TRUE)*/


#if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION==TRUE)
    /*privateVlanMgt*/
    void            init_privateVlanMgt(void);
#if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE != SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE_MULTIPLE_SESSION)
    Netsnmp_Node_Handler do_privateVlanUplinkPorts;
    Netsnmp_Node_Handler do_privateVlanDownlinkPorts;
#endif/* #if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE != SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE_MULTIPLE_SESSION) */
    Netsnmp_Node_Handler do_privateVlanStatus;

#if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE == SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE_MULTIPLE_SESSION)
/* privateVlanSessionTable */
void init_privateVlanSessionTable(void);
FindVarMethod var_privateVlanSessionTable;
WriteMethod write_privateVlanSessionUplinkPorts;
WriteMethod write_privateVlanSessionDownlinkPorts;
WriteMethod write_privateVlanSessionStatus;

/* privateVlanUplinkToUplink */
void init_privateVlanUplinkToUplink(void);
Netsnmp_Node_Handler do_privateVlanUplinkToUplink;
#endif /* end of #if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE == SYS_CPNT_PORT_TRAFFIC_SEGMENTATION_MODE_MULTIPLE_SESSION) */

#if (SYS_DFLT_TRAFFIC_SEG_METHOD == SYS_DFLT_TRAFFIC_SEG_METHOD_PORT_PRIVATE_MODE)
    void init_privateVlanEdgePortTable(void);
    FindVarMethod var_privateVlanEdgePortTable;
    WriteMethod   write_pvePortStatus;
#endif    /* #if (SYS_DFLT_TRAFFIC_SEG_METHOD == SYS_DFLT_TRAFFIC_SEG_METHOD_PORT_PRIVATE_MODE) */

#endif/*#if (SYS_CPNT_PORT_TRAFFIC_SEGMENTATION==TRUE)*/

/*portSecPortTable*/
void init_portSecPortTable(void);
FindVarMethod var_portSecPortTable;
    WriteMethod write_portSecPortStatus;
    WriteMethod write_portSecAction;
    WriteMethod write_portSecMaxMacCount;
    WriteMethod write_portSecLearningStatus;

/*portSecMacAsPermanentMgt*/
void init_portSecMacAsPermanentMgt(void);
Netsnmp_Node_Handler do_portSecMacAsPermanentPortIndex;
Netsnmp_Node_Handler do_portSecMacAsPermanentAction;


/* pfuRuleTable*/
/* function declarations */
void init_pfuRuleTable(void);
FindVarMethod var_pfuRuleTable;
    WriteMethod write_pfuRuleAction;
    WriteMethod write_pfuRuleProtocol;
    WriteMethod write_pfuRuleSrcIpAddr;
    WriteMethod write_pfuRuleSrcIpBitmask;
    WriteMethod write_pfuRuleSrcPortRange1;
    WriteMethod write_pfuRuleSrcPortRange2;
    WriteMethod write_pfuRuleDstIpAddr;
    WriteMethod write_pfuRuleDstIpBitmask;
    WriteMethod write_pfuRuleDstPortRange1;
    WriteMethod write_pfuRuleDstPortRange2;
    WriteMethod write_pfuRuleTcpCode;
    WriteMethod write_pfuRuleTcpCodeBitmask;
    WriteMethod write_pfuRuleFragments;
    WriteMethod write_pfuRuleLog;
    WriteMethod write_pfuRuleRowStatus;

/* packetFilterUnitMgt*/
/* function declarations */
void init_packetFilterUnitMgt(void);
Netsnmp_Node_Handler do_pfuInsert;
Netsnmp_Node_Handler get_pfuNextAvailable;

#if (SYS_CPNT_RADIUS == TRUE)
void init_radiusMgt(void);
Netsnmp_Node_Handler do_radiusServerGlobalAuthPort;

#if (SYS_CPNT_RADIUS_ACCOUNTING == TRUE)
Netsnmp_Node_Handler do_radiusServerGlobalAcctPort;
#endif /* #if (SYS_CPNT_RADIUS_ACCOUNTING == TRUE) */

Netsnmp_Node_Handler do_radiusServerGlobalKey;
Netsnmp_Node_Handler do_radiusServerGlobalRetransmit;
Netsnmp_Node_Handler do_radiusServerGlobalTimeout;

void init_radiusServerTable(void);
FindVarMethod var_radiusServerTable;
WriteMethod write_radiusServerAddress;
WriteMethod write_radiusServerAuthPortNumber;

#if (SYS_CPNT_RADIUS_ACCOUNTING == TRUE)
WriteMethod write_radiusServerAcctPortNumber;
#endif /* #if (SYS_CPNT_RADIUS_ACCOUNTING == TRUE) */

WriteMethod write_radiusServerKey;
WriteMethod write_radiusServerRetransmit;
WriteMethod write_radiusServerTimeout;
WriteMethod write_radiusServerStatus;
#endif /* #if (SYS_CPNT_RADIUS == TRUE) */

#if (SYS_CPNT_TACACS == TRUE)
void init_tacacsMgt(void);
Netsnmp_Node_Handler do_tacacsPlusServerGlobalPortNumber;
Netsnmp_Node_Handler do_tacacsPlusServerGlobalKey;
Netsnmp_Node_Handler do_tacacsPlusServerGlobalRetransmit;
Netsnmp_Node_Handler do_tacacsPlusServerGlobalTimeout;

void init_tacacsPlusServerTable(void);
FindVarMethod var_tacacsPlusServerTable;
WriteMethod write_tacacsPlusServerAddress;
WriteMethod write_tacacsPlusServerPortNumber;
WriteMethod write_tacacsPlusServerKey;
WriteMethod write_tacacsPlusServerStatus;
WriteMethod write_tacacsPlusServerRetransmit;
WriteMethod write_tacacsPlusServerTimeout;
#endif /* #if (SYS_CPNT_TACACS == TRUE) */

/* sshMgt */
void            init_sshMgt(void);
Netsnmp_Node_Handler get_sshDsaHostKey5;
Netsnmp_Node_Handler get_sshDsaHostKey6;
Netsnmp_Node_Handler get_sshDsaHostKey7;
Netsnmp_Node_Handler get_sshDsaHostKey8;
Netsnmp_Node_Handler get_sshHostKeyGenStatus;
Netsnmp_Node_Handler do_sshHostKeySaveAction;
Netsnmp_Node_Handler do_sshTimeout;
Netsnmp_Node_Handler get_sshHostKeySaveStatus;
Netsnmp_Node_Handler do_sshServerStatus;
Netsnmp_Node_Handler do_sshKeySize;
Netsnmp_Node_Handler do_sshHostKeyDelAction;
Netsnmp_Node_Handler get_sshServerMajorVersion;
Netsnmp_Node_Handler get_sshServerMinorVersion;
Netsnmp_Node_Handler get_sshRsaHostKey1;
Netsnmp_Node_Handler get_sshRsaHostKey2;
Netsnmp_Node_Handler get_sshRsaHostKey3;
Netsnmp_Node_Handler get_sshRsaHostKey4;
Netsnmp_Node_Handler get_sshRsaHostKey5;
Netsnmp_Node_Handler get_sshDsaHostKey1;
Netsnmp_Node_Handler get_sshRsaHostKey6;
Netsnmp_Node_Handler do_sshHostKeyGenAction;
Netsnmp_Node_Handler get_sshDsaHostKey2;
Netsnmp_Node_Handler get_sshRsaHostKey7;
Netsnmp_Node_Handler get_sshRsaHostKey8;
Netsnmp_Node_Handler get_sshDsaHostKey3;
Netsnmp_Node_Handler do_sshAuthRetries;
Netsnmp_Node_Handler get_sshDsaHostKey4;
Netsnmp_Node_Handler get_sshRsaHostKeySHA1FingerPrint;
Netsnmp_Node_Handler get_sshRsaHostKeyMD5FingerPrint;
Netsnmp_Node_Handler get_sshDsaHostKeySHA1FingerPrint;
Netsnmp_Node_Handler get_sshDsaHostKeyMD5FingerPrint;
/* sshConnInfoTable */

void            init_sshConnInfoTable(void);
FindVarMethod   var_sshConnInfoTable;
WriteMethod     write_sshDisconnect;

/* sshUserTable */
void            init_sshUserTable(void);
FindVarMethod   var_sshUserTable;
WriteMethod     write_sshUserKeyDelAction;



/*ipFilterMgt*/
/* switchMgt Scalar*/
void            init_ipFilterMgt(void);
/*init_ipFilterSnmpTable*/
void            init_ipFilterSnmpTable(void);
FindVarMethod   var_ipFilterSnmpTable;
WriteMethod     write_ipFilterSnmpEndAddress;
WriteMethod     write_ipFilterSnmpStatus;

/*ipFilterTelnetTable*/
void            init_ipFilterTelnetTable(void);
FindVarMethod   var_ipFilterTelnetTable;
WriteMethod     write_ipFilterTelnetEndAddress;
WriteMethod     write_ipFilterTelnetStatus;

/*ipFilterHTTPTable*/
void            init_ipFilterHTTPTable(void);
FindVarMethod   var_ipFilterHTTPTable;
WriteMethod     write_ipFilterHTTPEndAddress;
WriteMethod     write_ipFilterHTTPStatus;

/* ipFilterSnmpInetTable */
void init_ipFilterSnmpInetTable(void);
FindVarMethod var_ipFilterSnmpInetTable;
WriteMethod write_ipFilterSnmpInetAddressEnd;
WriteMethod write_ipFilterSnmpInetStatus;

/* ipFilterHttpInetTable */
void init_ipFilterHttpInetTable(void);
FindVarMethod var_ipFilterHttpInetTable;
WriteMethod write_ipFilterHttpInetAddressEnd;
WriteMethod write_ipFilterHttpInetStatus;

/* ipFilterTelnetInetTable */
void init_ipFilterTelnetInetTable(void);
FindVarMethod var_ipFilterTelnetInetTable;
WriteMethod write_ipFilterTelnetInetAddressEnd;
WriteMethod write_ipFilterTelnetInetStatus;

/* ipFilterAllClientCtl */
void init_ipFilterAllClientCtl(void);
Netsnmp_Node_Handler do_ipFilterAllClientCtlInetAddressType;
Netsnmp_Node_Handler do_ipFilterAllClientCtlInetAddressStart;
Netsnmp_Node_Handler do_ipFilterAllClientCtlInetAddressEnd;
Netsnmp_Node_Handler do_ipFilterAllClientCtlAction;

/* mgmtVlanMgt */
void            init_mgmtVlanMgt(void);
Netsnmp_Node_Handler do_mgmtVlanDefaultGateway;
Netsnmp_Node_Handler do_mgmtVlanVid;

/*ipFilterHttpsTable*/
void            init_ipFilterHttpsTable(void);
FindVarMethod   var_ipFilterHttpsTable;
WriteMethod     write_ipFilterHttpsEndAddress;
WriteMethod     write_ipFilterHttpsStatus;

/*ipFilterSshTable*/
void            init_ipFilterSshTable(void);
FindVarMethod   var_ipFilterSshTable;
WriteMethod     write_ipFilterSshEndAddress;
WriteMethod     write_ipFilterSshStatus;

#if (SYS_CPNT_DOT1X == TRUE)
/*dot1xAuthConfigExtTable */
void            init_dot1xAuthConfigExtTable(void);
FindVarMethod   var_dot1xAuthConfigExtTable;
WriteMethod     write_dot1xAuthConfigExtOperMode;
WriteMethod     write_dot1xAuthConfigExtMultiHostMaxCnt;
WriteMethod     write_dot1xAuthConfigExtPortIntrusionAction;
#endif /*#if (SYS_CPNT_DOT1X == TRUE)*/

#if (SYS_CPNT_DOT1X_EAPOL_PASS_THROUGH == TRUE)
void init_dot1xEapolPassThrough(void);
Netsnmp_Node_Handler do_dot1xEapolPassThrough;
#endif /* #if (SYS_CPNT_DOT1X_EAPOL_PASS_THROUGH == TRUE) */

/*arpMgt*/
void            init_arpMgt(void);
Netsnmp_Node_Handler do_arpCacheTimeout;
Netsnmp_Node_Handler get_arpStatRcvRequestPackets;
Netsnmp_Node_Handler get_arpStatSendReplyPackets;
Netsnmp_Node_Handler get_arpStatRcvReplyPackets;
Netsnmp_Node_Handler get_arpStatSendRequestPackets;
Netsnmp_Node_Handler do_arpCacheDeleteAll;
Netsnmp_Node_Handler do_arpCacheTimeoutInMinutes;

/*arpProxyArpTable*/
void            init_arpProxyArpTable(void);
FindVarMethod   var_arpProxyArpTable;
WriteMethod     write_arpProxyArpStatus;

/*ripMgt*/
void            init_ripMgt(void);
Netsnmp_Node_Handler do_ripUpdateTime;
Netsnmp_Node_Handler do_ripRouterVersion;
Netsnmp_Node_Handler do_ripStatisticsReset;
Netsnmp_Node_Handler get_ripTimeoutTime;
Netsnmp_Node_Handler get_ripGarbageCollectionTime;
Netsnmp_Node_Handler do_ripRoutingProcessStatus;

/*ripInstabilityPreventingTable*/
void            init_ripInstabilityPreventingTable(void);
FindVarMethod   var_ripInstabilityPreventingTable;
WriteMethod     write_ripSplitHorizonStatus;

/*ripNetworkAddrTable*/
void            init_ripNetworkAddrTable(void);
FindVarMethod   var_ripNetworkAddrTable;
WriteMethod     write_ripNetworkAddrStatus;

/*ospfMgt*/
void            init_ospfMgt(void);
Netsnmp_Node_Handler do_ospfRfc1583CompatibleState;
Netsnmp_Node_Handler do_ospfSpfHoldTime;
Netsnmp_Node_Handler get_ospfRouterIdType;
Netsnmp_Node_Handler do_ospfSpfDelayTime;
Netsnmp_Node_Handler do_ospfAutoCost;
Netsnmp_Node_Handler do_ospfOriginateDefaultRoute;
Netsnmp_Node_Handler do_ospfAdvertiseDefaultRoute;
Netsnmp_Node_Handler do_ospfExternalMetricType;
Netsnmp_Node_Handler get_ospfAreaNumber;
Netsnmp_Node_Handler do_ospfDefaultExternalMetric;

/*ospfNssaTable*/
void            init_ospfNssaTable(void);
FindVarMethod   var_ospfNssaTable;
WriteMethod     write_ospfNssaRedistributeStatus;
WriteMethod     write_ospfNssaOriginateDefaultInfoStatus;
WriteMethod     write_ospfNssaStatus;

/*ospfRedistributeTable*/
void            init_ospfRedistributeTable(void);
FindVarMethod   var_ospfRedistributeTable;
WriteMethod     write_ospfRedistributeMetricType;
WriteMethod     write_ospfRedistributeMetric;
WriteMethod     write_ospfRedistributeStatus;

/*ospfSummaryAddressTable*/
void            init_ospfSummaryAddressTable(void);
FindVarMethod   var_ospfSummaryAddressTable;
WriteMethod     write_ospfSummaryStatus;

/*ospfNetworkAreaAddressTable*/
void            init_ospfNetworkAreaAddressTable(void);
FindVarMethod   var_ospfNetworkAreaAddressTable;
WriteMethod     write_ospfNetworkAreaStatus;

/*dvmrpMgt*/
void            init_dvmrpMgt(void);
Netsnmp_Node_Handler get_dvmrpNumRoutes;
Netsnmp_Node_Handler get_dvmrpVersionString;
Netsnmp_Node_Handler get_dvmrpReachableRoutes;

/*dvmrpInterfaceTable*/
void            init_dvmrpInterfaceTable(void);
FindVarMethod   var_dvmrpInterfaceTable;
FindVarMethod   var_dvmrpInterfaceTable;
WriteMethod     write_dvmrpInterfaceLocalAddress;
WriteMethod     write_dvmrpInterfaceMetric;
WriteMethod     write_dvmrpInterfaceStatus;
WriteMethod     write_dvmrpInterfaceKey;
WriteMethod     write_dvmrpInterfaceKeyVersion;

/*dvmrpNeighborTable*/
void            init_dvmrpNeighborTable(void);
FindVarMethod   var_dvmrpNeighborTable;

/*dvmrpRouteTable*/
void            init_dvmrpRouteTable(void);
FindVarMethod   var_dvmrpRouteTable;

/*dvmrpRouteTable*/
void            init_dvmrpRouteNextHopTable(void);
FindVarMethod   var_dvmrpRouteNextHopTable;

/*dvmrpRouteNextHopTable*/
void            init_dvmrpRouteNextHopTable(void);
FindVarMethod   var_dvmrpRouteNextHopTable;

/*dvmrpPruneTable*/
void            init_dvmrpPruneTable(void);
FindVarMethod   var_dvmrpPruneTable;

/*ipCidrRouteExtTable*/
void            init_ipCidrRouteExtTable(void);
FindVarMethod   var_ipCidrRouteExtTable;

#if (SYS_CPNT_ROUTING == TRUE)
void            init_routeMultipath(void);
Netsnmp_Node_Handler do_routeMultipath;
#endif /* SYS_CPNT_ROUTING */

#if (SYS_CPNT_AAA == TRUE)
#if(SYS_CPNT_ACCOUNTING == TRUE )
/********************************************
 **************aaaMgt************************
 ********************************************
 */
void            init_aaaMgt(void);
Netsnmp_Node_Handler do_aaaUpdate;

void            init_aaaMethodTable(void);
FindVarMethod   var_aaaMethodTable;
WriteMethod     write_aaaMethodName;
WriteMethod     write_aaaMethodGroupName;
WriteMethod     write_aaaMethodMode;
WriteMethod     write_aaaMethodStatus;
WriteMethod     write_aaaMethodClientType;
#if (SYS_CPNT_ACCOUNTING_COMMAND == TRUE)
WriteMethod     write_aaaMethodCommandPrivilegesLevel;
#endif /* end of #if (SYS_CPNT_ACCOUNTING_COMMAND == TRUE) */

#if(SYS_CPNT_RADIUS_ACCOUNTING == TRUE )
void            init_aaaRadiusGroupTable(void);
FindVarMethod   var_aaaRadiusGroupTable;
WriteMethod     write_aaaRadiusGroupServerBitMap;
WriteMethod     write_aaaRadiusGroupName;
WriteMethod     write_aaaRadiusGroupStatus;
#endif /* end of #if(SYS_CPNT_RADIUS_ACCOUNTING == TRUE )*/

#if(SYS_CPNT_TACACS_PLUS_ACCOUNTING == TRUE )
void            init_aaaTacacsPlusGroupTable(void);
FindVarMethod   var_aaaTacacsPlusGroupTable;
WriteMethod     write_aaaTacacsPlusGroupServerBitMap;
WriteMethod     write_aaaTacacsPlusGroupName;
WriteMethod     write_aaaTacacsPlusGroupStatus;
#endif /* end of #if(SYS_CPNT_TACACS_PLUS_ACCOUNTING == TRUE )*/

#if(SYS_CPNT_RADIUS_ACCOUNTING == TRUE )
void            init_aaaAccountTable(void);
FindVarMethod   var_aaaAccountTable;
WriteMethod     write_aaaAccountMethodName;
WriteMethod     write_aaaAccountStatus;
#endif /* end of #if(SYS_CPNT_RADIUS_ACCOUNTING == TRUE )*/

#if (SYS_CPNT_ACCOUNTING_COMMAND == TRUE)
void            init_aaaCommandPrivilegesTable(void);
FindVarMethod   var_aaaCommandPrivilegesTable;
WriteMethod     write_aaaCommandPrivilegesMethodName;
#endif /* end of #if (SYS_CPNT_ACCOUNTING_COMMAND == TRUE) */

void            init_aaaAccExecTable(void);
FindVarMethod   var_aaaAccExecTable;
WriteMethod     write_aaaAccExecMethodName;
#endif /* end of #if(SYS_CPNT_ACCOUNTING == TRUE ) */
#endif /* end of #if (SYS_CPNT_AAA == TRUE) */

#if(SYS_CPNT_NETACCESS == TRUE)
void init_networkAccessMgt(void);
#if(SYS_CPNT_NETACCESS_AGING_MODE == SYS_CPNT_NETACCESS_AGING_MODE_CONFIGURABLE)
Netsnmp_Node_Handler do_networkAccessAging;
#endif
/* networkAccessPortConfigTable */
void            init_networkAccessPortTable(void);
FindVarMethod   var_networkAccessPortTable;
WriteMethod     write_networkAccessPortDynamicVlan;
WriteMethod     write_networkAccessPortMaxMacCount;
WriteMethod     write_networkAccessPortMode;
#if (SYS_CPNT_NETACCESS_MAC_FILTER_TABLE == TRUE)
    WriteMethod     write_networkAccessPortMacFilter;
#endif
WriteMethod     write_networkAccessPortGuestVlan;
WriteMethod     write_networkAccessPortLinkDetectionStatus;
WriteMethod     write_networkAccessPortLinkDetectionMode;
WriteMethod     write_networkAccessPortLinkDetectionAciton;
WriteMethod     write_networkAccessPortLinkDynamicQos;

/*networkAccessClearMacAddressMgt*/
void init_networkAccessClearMacAddressMgt(void);
Netsnmp_Node_Handler do_networkAccessClearMacAddressAttribute;
Netsnmp_Node_Handler do_networkAccessClearMacAddressMacAddress;
Netsnmp_Node_Handler do_networkAccessClearMacAddressPort;
Netsnmp_Node_Handler do_networkAccessClearMacAddressClearAction;

/* networkAccessMacAddressTable */
void            init_networkAccessMacAddressTable(void);
FindVarMethod   var_networkAccessMacAddressTable;

#if(SYS_CPNT_NETACCESS_MAC_FILTER_TABLE== TRUE)
/* networkAccessMacFilterWithMaskTable */
void init_networkAccessMacFilterWithMaskTable(void);
FindVarMethod var_networkAccessMacFilterWithMaskTable;
WriteMethod write_networkAccessMacFilterWithMaskStatus;
#endif

/*macAuthMgt*/
void init_macAuthMgt(void);
Netsnmp_Node_Handler do_macAuthReAuthTime;

/* macAuthPortTable */
void            init_macAuthPortTable(void);
FindVarMethod   var_macAuthPortTable;
WriteMethod     write_macAuthPortMaxMacCount;
WriteMethod     write_macAuthPortIntrusionAction;

#endif /* end of #if(SYS_CPNT_NETACCESS == TRUE) */

#if(SYS_CPNT_WEBAUTH == TRUE)
/********************************************
 **************webAuthMgt********************
 ********************************************
 */
void init_webAuthMgt(void);
Netsnmp_Node_Handler do_webAuthSystemAuthControl;
Netsnmp_Node_Handler do_webAuthLoginPageUrl;
Netsnmp_Node_Handler do_webAuthLoginFailPageUrl;
Netsnmp_Node_Handler do_webAuthLoginSuccessPageUrl;
Netsnmp_Node_Handler do_webAuthSessionTimeout;
Netsnmp_Node_Handler do_webAuthQuietPeriod;
Netsnmp_Node_Handler do_webAuthLoginAttempts;

/*webAuthReauthenticateMgt*/
void init_webAuthReauthenticateMgt(void);
Netsnmp_Node_Handler do_webAuthReauthenticatePort;
Netsnmp_Node_Handler do_webAuthReauthenticateInetAddressType;
Netsnmp_Node_Handler do_webAuthReauthenticateInetAddress;
Netsnmp_Node_Handler do_webAuthReauthenticateAction;

/*webAuthPortConfigTable*/
void init_webAuthPortConfigTable(void);
FindVarMethod   var_webAuthPortConfigTable;
WriteMethod     write_webAuthPortConfigStatus;

/*webAuthPortinfoTable*/
void init_webAuthPortInfoTable(void);
FindVarMethod   var_webAuthPortInfoTable;

#endif /* end of #if(SYS_CPNT_WEBAUTH == TRUE) */

#if (SYS_CPNT_DOS == TRUE)
/********************************************
 ******************dosMgt********************
 ********************************************
 */
void init_dosMgt(void);
Netsnmp_Node_Handler do_dosEchoChargenStatus;
Netsnmp_Node_Handler do_dosEchoChargenRateLimitInKilo;
Netsnmp_Node_Handler do_dosLandStatus;
Netsnmp_Node_Handler do_dosSmurfStatus;
Netsnmp_Node_Handler do_dosTcpFloodingStatus;
Netsnmp_Node_Handler do_dosTcpFloodingRateLimitInKilo;
Netsnmp_Node_Handler do_dosTcpNullScanStatus;
Netsnmp_Node_Handler do_dosTcpSynFinScanStatus;
Netsnmp_Node_Handler do_dosTcpXmasScanStatus;
Netsnmp_Node_Handler do_dosUdpFloodingStatus;
Netsnmp_Node_Handler do_dosUdpFloodingRateLimitInKilo;
Netsnmp_Node_Handler do_dosWinNukeStatus;
Netsnmp_Node_Handler do_dosWinNukeRateLimitInKilo;
Netsnmp_Node_Handler do_dosTcpScanStatus;
Netsnmp_Node_Handler do_dosTcpUdpPortZeroStatus;
#endif /* (SYS_CPNT_DOS == TRUE) */

#if (SYS_CPNT_APP_FILTER == TRUE)
/********************************************
 ***************appFilterMgt*****************
 ********************************************
 */
void init_appFilterPortTable(void);
FindVarMethod var_appFilterPortTable;
WriteMethod   write_appFilterPktStatus;

#endif /* #if (SYS_CPNT_APP_FILTER == TRUE) */

/*sysLogMgt*/
void init_sysLogMgt(void);
Netsnmp_Node_Handler do_sysLogHistoryFlashLevel;
Netsnmp_Node_Handler do_sysLogLoggingCount;
Netsnmp_Node_Handler do_remoteLogStatus;
Netsnmp_Node_Handler do_sysLogHistoryRamLevel;
Netsnmp_Node_Handler do_sysLogStatus;
Netsnmp_Node_Handler do_sysLogLoggingInterval;
Netsnmp_Node_Handler do_remoteLogFacilityType;
Netsnmp_Node_Handler do_remoteLogLevel;


/* remoteLogMgt */
void init_remoteLogMgt(void);
Netsnmp_Node_Handler do_remoteLogStatus;
Netsnmp_Node_Handler do_remoteLogFacilityType;
Netsnmp_Node_Handler do_remoteLogLevel;

/* remoteLogServerInetTable */
void init_remoteLogServerInetTable(void);
FindVarMethod var_remoteLogServerInetTable;
WriteMethod write_remoteLogServerStatus;
WriteMethod write_remoteLogServerUdpPort;
#if (SYS_CPNT_REMOTELOG_FACILITY_LEVEL_FOR_EVERY_SERVER == TRUE)
WriteMethod write_remoteLogServerFacilityType;
WriteMethod write_remoteLogServerHostLevel;
#endif
#if 0 /* use new mib */
/* remoteLogServerTable */
void            init_remoteLogServerTable(void);
FindVarMethod   var_remoteLogServerTable;
WriteMethod     write_remoteLogServerStatus;
#endif

/* smtpMgt */
void            init_smtpMgt(void);
Netsnmp_Node_Handler do_smtpStatus;
Netsnmp_Node_Handler do_smtpSeverityLevel;
Netsnmp_Node_Handler do_smtpSourceEMail;

/* smtpServerIpTable */
void            init_smtpServerIpTable(void);
FindVarMethod   var_smtpServerIpTable;
WriteMethod     write_smtpServerIpStatus;

/* smtpDestEMailTable */
void            init_smtpDestEMailTable(void);
FindVarMethod   var_smtpDestEMailTable;
WriteMethod     write_smtpDestEMailStatus;

/* consoleMgt */
void            init_consoleMgt(void);
Netsnmp_Node_Handler do_consoleStopBits;
Netsnmp_Node_Handler do_consoleParity;
Netsnmp_Node_Handler do_consolePasswordThreshold;
Netsnmp_Node_Handler do_consoleBaudRate;
Netsnmp_Node_Handler do_consoleAdminBaudRate;
Netsnmp_Node_Handler get_consoleOperBaudRate;
Netsnmp_Node_Handler do_consoleDataBits;
Netsnmp_Node_Handler do_consoleExecTimeout;
Netsnmp_Node_Handler do_consoleSilentTime;
Netsnmp_Node_Handler do_consoleLoginResponseTimeout;

/* telnetMgt */
void            init_telnetMgt(void);
Netsnmp_Node_Handler do_telnetStatus;
Netsnmp_Node_Handler do_telnetPortNumber;

/* vtyMgt */
void init_vtyMgt(void);
Netsnmp_Node_Handler do_vtyExecTimeout;
Netsnmp_Node_Handler do_vtyPasswordThreshold;
Netsnmp_Node_Handler do_vtyLoginResponseTimeout;
Netsnmp_Node_Handler do_vtyMaxSession;
Netsnmp_Node_Handler do_vtySilentTime;

/* sntpServerTable */
void            init_sntpServerTable(void);
FindVarMethod   var_sntpServerTable;
WriteMethod write_sntpServerInetAddressType;
WriteMethod write_sntpServerInetAddress;
WriteMethod write_sntpServerStatus;

/* ntpMgt */
void            init_ntpMgt(void);
Netsnmp_Node_Handler do_ntpStatus;
Netsnmp_Node_Handler do_ntpServiceMode;
Netsnmp_Node_Handler get_ntpPollInterval;
Netsnmp_Node_Handler do_ntpAuthenticateStatus;

/* ntpServerTable */
void            init_ntpServerTable(void);
FindVarMethod var_ntpServerTable;
WriteMethod write_ntpServerVersion;
WriteMethod write_ntpServerKeyId;
WriteMethod write_ntpServerStatus;

/* ntpAuthKeyTable */
void           init_ntpAuthKeyTable(void);
FindVarMethod var_ntpAuthKeyTable;
WriteMethod write_ntpAuthKeyWord;
WriteMethod write_ntpAuthKeyStatus;

/* sysTimeMgt */
void            init_sysTimeMgt(void);
Netsnmp_Node_Handler do_sntpStatus;
Netsnmp_Node_Handler do_sntpServiceMode;
Netsnmp_Node_Handler do_sntpPollInterval;
Netsnmp_Node_Handler do_sysCurrentTime;
Netsnmp_Node_Handler do_sysTimeZoneName;
Netsnmp_Node_Handler do_sysTimeZone;

/* fileCopyMgt */
void            init_fileCopyMgt(void);
Netsnmp_Node_Handler do_fileCopySrcFileName;
Netsnmp_Node_Handler get_fileCopyStatus;
Netsnmp_Node_Handler do_fileCopySrcOperType;
Netsnmp_Node_Handler do_fileCopyDestFileName;
Netsnmp_Node_Handler do_fileCopyTftpServer;
Netsnmp_Node_Handler do_fileCopyUnitId;
Netsnmp_Node_Handler do_fileCopyAction;
Netsnmp_Node_Handler do_fileCopyFileType;
Netsnmp_Node_Handler do_fileCopyDestOperType;
Netsnmp_Node_Handler do_fileCopyPublickeyType;
Netsnmp_Node_Handler do_fileCopyUsername;
Netsnmp_Node_Handler do_fileCopyServerInetAddressType;
Netsnmp_Node_Handler do_fileCopyServerInetAddress;

#if (SYS_CPNT_XFER_FTP == TRUE || SYS_CPNT_SFTP == TRUE)
Netsnmp_Node_Handler do_fileCopyServerUserName;
Netsnmp_Node_Handler do_fileCopyServerPassword;
#endif /* #if (SYS_CPNT_XFER_FTP == TRUE || SYS_CPNT_SFTP == TRUE) */

/* fileInfoTable */
void            init_fileInfoTable(void);
FindVarMethod   var_fileInfoTable;
WriteMethod     write_fileInfoIsStartUp;
WriteMethod     write_fileInfoDelete;

/* fileAutoDownloadResultTable */
void            init_fileAutoDownloadResultTable(void);
FindVarMethod   var_fileAutoDownloadResultTable;

/*fileAutoUpgradeMgt*/
#if(SYS_CPNT_XFER_AUTO_UPGRADE==TRUE)
void init_fileAutoUpgradeMgt(void);
Netsnmp_Node_Handler do_fileAutoUpgradeOpCodeStatus;
Netsnmp_Node_Handler do_fileAutoUpgradeOpCodePath;
Netsnmp_Node_Handler get_fileAutoUpgradeOpCodeFileName;
Netsnmp_Node_Handler do_fileAutoUpgradeOpCodeReloadStatus;
#endif

/* dnsMgt */
void            init_dnsMgt(void);
Netsnmp_Node_Handler do_dnsDomainName;
Netsnmp_Node_Handler do_dnsDomainLookup;

/* dnsHostTable */
void            init_dnsHostTable(void);
FindVarMethod   var_dnsHostTable;
WriteMethod write_dnsHostName;
WriteMethod write_dnsHostStatus;

/* dnsAliasTable */
void            init_dnsAliasTable(void);
FindVarMethod   var_dnsAliasTable;

/* dnsDomainListTable */
void            init_dnsDomainListTable(void);
FindVarMethod   var_dnsDomainListTable;
WriteMethod write_dnsDomainListName;
WriteMethod     write_dnsDomainListStatus;
FindVarMethod   var_dnsAliasTable;

/* dnsHostAddrTable */
void init_dnsHostAddrTable(void);
FindVarMethod var_dnsHostAddrTable;
WriteMethod write_dnsHostAddrStatus;

/* dnsCacheTable */
void            init_dnsCacheTable(void);
FindVarMethod   var_dnsCacheTable;

/* dnsAliasByIdTable */
#if 0
void            init_dnsAliasByIdTable(void);
FindVarMethod   var_dnsAliasByIdTable;
#endif

void init_dnsNameServerInetTable(void);
FindVarMethod var_dnsNameServerInetTable;
WriteMethod write_dnsNameServerInetStatus;

/* hsrpMgt */
void            init_hsrpMgt(void);
Netsnmp_Node_Handler do_cHsrpConfigTimeout;

/* cHsrpGrpTable */
void            init_cHsrpGrpTable(void);
FindVarMethod   var_cHsrpGrpTable;
WriteMethod     write_cHsrpGrpAuth;
WriteMethod     write_cHsrpGrpPriority;
WriteMethod     write_cHsrpGrpPreempt;
WriteMethod     write_cHsrpGrpPreemptDelay;
WriteMethod     write_cHsrpGrpConfiguredHelloTime;
WriteMethod     write_cHsrpGrpConfiguredHoldTime;
WriteMethod     write_cHsrpGrpVirtualIpAddr;
WriteMethod     write_cHsrpGrpEntryRowStatus;

/* cHsrpExtIfTrackedTable */
void            init_cHsrpExtIfTrackedTable(void);
FindVarMethod   var_cHsrpExtIfTrackedTable;
WriteMethod     write_cHsrpExtIfTrackedPriority;
WriteMethod     write_cHsrpExtIfTrackedRowStatus;

/* cHsrpExtSecAddrTable */
void            init_cHsrpExtSecAddrTable(void);
FindVarMethod   var_cHsrpExtSecAddrTable;
WriteMethod     write_cHsrpExtSecAddrRowStatus;

#if (SYS_CPNT_SYSMGMT_RESMIB == TRUE)
void init_sysResourceMgt(void);
Netsnmp_Node_Handler get_cpuCurrentUti;
Netsnmp_Node_Handler get_cpuStatMaxUti;
Netsnmp_Node_Handler get_cpuStatAvgUti;
Netsnmp_Node_Handler get_cpuPeakTime;
Netsnmp_Node_Handler get_cpuPeakDuration;
Netsnmp_Node_Handler do_cpuUtiRisingThreshold;
Netsnmp_Node_Handler do_cpuUtiFallingThreshold;
Netsnmp_Node_Handler get_memoryTotal;
Netsnmp_Node_Handler get_memoryAllocated;
Netsnmp_Node_Handler get_memoryFreed;
Netsnmp_Node_Handler get_memoryFreedInPercent;
Netsnmp_Node_Handler do_memoryUtiRisingThreshold;
Netsnmp_Node_Handler do_memoryUtiFallingThreshold;
#if (SYS_CPNT_SYSMGMT_MONITORING_PROCESS_CPU_PER_TASK == TRUE)
void init_taskCpuTable(void);
FindVarMethod var_taskCpuTable;
#endif

#if (SYS_CPNT_SYSMGMT_CPU_GUARD == TRUE)
void init_cpuGuard(void);
Netsnmp_Node_Handler do_cpuGuardStatus;
Netsnmp_Node_Handler do_cpuGuardHighWatermark;
Netsnmp_Node_Handler do_cpuGuardLowWatermark;
Netsnmp_Node_Handler do_cpuGuardMaxThreshold;
Netsnmp_Node_Handler do_cpuGuardMinThreshold;
Netsnmp_Node_Handler do_cpuGuardTrapStatus;
Netsnmp_Node_Handler get_cpuGuardCurrentThreshold;
#endif
#endif /* #if (SYS_CPNT_SYSMGMT_RESMIB == TRUE) */

/* alertLedMgt */
void                 init_alertLedMgt(void);
Netsnmp_Node_Handler do_alertLedAcknoledge;
Netsnmp_Node_Handler get_alertLedOperStatus;
Netsnmp_Node_Handler do_alertLedAdminStatus;

/* egressPacketBlockMgt */
void init_egressPacketBlockUnknownUcastTable(void);
FindVarMethod var_egressPacketBlockUnknownUcastTable;
WriteMethod write_egressPacketBlockUnknownUcastStatus;

void init_egressPacketBlockUnknownMcastTable(void);
FindVarMethod var_egressPacketBlockUnknownMcastTable;
WriteMethod write_egressPacketBlockUnknownMcastStatus;

void init_egressPacketBlockBcastTable(void);
FindVarMethod var_egressPacketBlockBcastTable;
WriteMethod write_egressPacketBlockBcastStatus;

/* dhcpSnoopMgt */
#if (SYS_CPNT_DHCPSNP == TRUE)
void init_dhcpSnoopEnable(void);
Netsnmp_Node_Handler do_dhcpSnoopEnable;

void init_dhcpSnoopVerifyMacAddressEnable(void);
Netsnmp_Node_Handler do_dhcpSnoopVerifyMacAddressEnable;

#if (SYS_CPNT_DHCPSNP_INFORMATION_OPTION == TRUE)
void init_dhcpSnoopGlobal(void);
Netsnmp_Node_Handler do_dhcpSnoopInformationOptionEnable;
Netsnmp_Node_Handler do_dhcpSnoopInformationOptionPolicy;
#endif
#if (SYS_CPNT_CFGDB == TRUE)
Netsnmp_Node_Handler do_dhcpSnoopBindingsTableCtlAction;
#endif

#if (SYS_CPNT_DHCPSNP_SYSTEM_RATELIMIT == TRUE)
void init_dhcpSnoopLimitRate(void);
Netsnmp_Node_Handler do_dhcpSnoopLimitRate;
#endif

void init_dhcpSnoopVlanConfigTable(void);
FindVarMethod var_dhcpSnoopVlanConfigTable;
WriteMethod write_dhcpSnoopVlanEnable;

void init_dhcpSnoopPortConfigTable(void);
FindVarMethod var_dhcpSnoopPortConfigTable;
WriteMethod write_dhcpSnoopPortTrustEnable;

void init_dhcpSnoopBindingsTable(void);
FindVarMethod var_dhcpSnoopBindingsTable;
WriteMethod write_dhcpSnoopBindingsAddrType;
WriteMethod write_dhcpSnoopBindingsIpAddress;
WriteMethod write_dhcpSnoopBindingsPortIfIndex;
WriteMethod write_dhcpSnoopBindingsLeaseTime;
WriteMethod write_dhcpSnoopBindingsStatus;

void init_dhcpSnoopTotalForwardedPkts(void);
Netsnmp_Node_Handler get_dhcpSnoopTotalForwardedPkts;

void init_dhcpSnoopUntrustedPortDroppedPkts(void);
Netsnmp_Node_Handler get_dhcpSnoopUntrustedPortDroppedPkts;

#if (SYS_CPNT_IP_SOURCE_GUARD == TRUE)
void init_ipSrcGuardConfigTable(void);
FindVarMethod var_ipSrcGuardConfigTable;
WriteMethod write_ipSrcGuardMode;
WriteMethod write_ipSrcGuardAclMaxBinding;
#if (SYS_CPNT_IPSG_MAC_MODE == TRUE)
WriteMethod write_ipSrcGuardTableMode;
WriteMethod write_ipSrcGuardMacMaxBinding;
#endif

/* Deprecated */
#if 0
void init_ipSrcGuardAddrTable(void);
FindVarMethod var_ipSrcGuardAddrTable;
WriteMethod write_ipSrcGuardBindingsAddrType;
WriteMethod write_ipSrcGuardBindingsIpAddress;
WriteMethod write_ipSrcGuardBindingsPortIfIndex;
WriteMethod write_ipSrcGuardBindingsStatus;
#endif

#if (SYS_CPNT_IPSG_BINDING_FILTER_SOURCE == TRUE)
void init_ipSrcGuardBindingFilterSource(void);
Netsnmp_Node_Handler do_ipSrcGuardBindingFilterSource;
#endif /* #if (SYS_CPNT_IPSG_BINDING_FILTER_SOURCE == TRUE) */

void init_ipSrcGuardAclTable(void);
FindVarMethod var_ipSrcGuardAclTable;
WriteMethod write_ipSrcGuardAclBindingVlanIndex;
WriteMethod write_ipSrcGuardAclBindingPortIfIndex;
WriteMethod write_ipSrcGuardAclBindingStatus;
#if (SYS_CPNT_IPSG_MAC_MODE == TRUE)
void init_ipSrcGuardMacTable(void);
FindVarMethod var_ipSrcGuardMacTable;
WriteMethod write_ipSrcGuardMacBindingStartVlan;
WriteMethod write_ipSrcGuardMacBindingEndVlan;
WriteMethod write_ipSrcGuardMacBindingPortList;
WriteMethod write_ipSrcGuardMacBindingStatus;
#endif /* SYS_CPNT_IPSG_MAC_MODE */
#endif /* #if (SYS_CPNT_IP_SOURCE_GUARD == TRUE) */
#endif /* #if (SYS_CPNT_DHCPSNP == TRUE) */

/* clusterMgt */
#if (SYS_CPNT_CLUSTER==TRUE)

void init_clusterMgt(void);
Netsnmp_Node_Handler do_clusterEnable;
Netsnmp_Node_Handler do_clusterCommanderEnable;
Netsnmp_Node_Handler do_clusterIpPool;
Netsnmp_Node_Handler do_clusterClearCandidateTable;
Netsnmp_Node_Handler get_clusterRole;
Netsnmp_Node_Handler get_clusterMemberCount;
Netsnmp_Node_Handler get_clusterCandidateCount;
Netsnmp_Node_Handler do_clusterMemberAddCtlMacAddr;
Netsnmp_Node_Handler do_clusterMemberAddCtlId;
Netsnmp_Node_Handler do_clusterMemberAddCtlAction;
Netsnmp_Node_Handler do_clusterMemberRemoveCtlId;
Netsnmp_Node_Handler do_clusterMemberRemoveCtlAction;

void init_clusterCandidateTable(void);
FindVarMethod var_clusterCandidateTable;

void init_clusterMemberTable(void);
FindVarMethod var_clusterMemberTable;

#endif /*end of #if (SYS_CPNT_CLUSTER==TRUE)*/

#if (SYS_CPNT_MLDSNP == TRUE)
    void init_mldSnoopStatus(void);
        Netsnmp_Node_Handler do_mldSnoopStatus;
    void init_mldSnoopQuerier(void);
        Netsnmp_Node_Handler do_mldSnoopQuerier;
    void init_mldSnoopRobustness(void);
        Netsnmp_Node_Handler do_mldSnoopRobustness;
    void init_mldSnoopQueryInterval(void);
        Netsnmp_Node_Handler do_mldSnoopQueryInterval;
    void init_mldSnoopQueryMaxResponseTime(void);
        Netsnmp_Node_Handler do_mldSnoopQueryMaxResponseTime;
    void init_mldSnoopRouterPortExpireTime(void);
        Netsnmp_Node_Handler do_mldSnoopRouterPortExpireTime;
    void init_mldSnoopVersion(void);
        Netsnmp_Node_Handler do_mldSnoopVersion;
    void init_mldSnoopUnknownMcastMode(void);
        Netsnmp_Node_Handler do_mldSnoopUnknownMcastMode;
    void init_mldSnoopRouterCurrentTable(void);
        FindVarMethod var_mldSnoopRouterCurrentTable;
    void init_mldSnoopRouterStaticTable(void);
        FindVarMethod var_mldSnoopRouterStaticTable;
        WriteMethod write_mldSnoopRouterStaticPorts;
        //WriteMethod write_mldSnoopRouterStaticStatus;
    void init_mldSnoopMulticastCurrentTable(void);
        FindVarMethod var_mldSnoopMulticastCurrentTable;
    void init_mldSnoopMulticastStaticTable(void);
        FindVarMethod var_mldSnoopMulticastStaticTable;
        WriteMethod write_mldSnoopMulticastStaticPorts;
        //WriteMethod write_mldSnoopMulticastStaticStatus;
    void init_mldSnoopCurrentVlanTable(void);
        FindVarMethod var_mldSnoopCurrentVlanTable;
        WriteMethod write_mldSnoopCurrentVlanImmediateLeave;
        WriteMethod write_mldSnoopCurrentVlanImmediateLeaveByHostIp;

#if(SYS_CPNT_MLDSNP_PROXY == TRUE)
void init_mldSnoopProxyReporting(void);
Netsnmp_Node_Handler do_mldSnoopProxyReporting;

void init_mldSnoopUnsolicitedReportInterval(void);
Netsnmp_Node_Handler do_mldSnoopUnsolicitedReportInterval;
#endif
#if(SYS_CPNT_MLDSNP_QUERY_DROP == TRUE || SYS_CPNT_IPV6_MULTICAST_DATA_DROP == TRUE)
void init_mldSnoopPortTable(void);
FindVarMethod var_mldSnoopPortTable;
WriteMethod write_mldSnoopQueryDrop;
WriteMethod write_mldSnoopMulticastDataDrop;
#endif

void init_mldSnoopClearDynamicGroups(void);
Netsnmp_Node_Handler do_mldSnoopClearDynamicGroups;

void init_mldSnoopPortTable(void);
FindVarMethod var_mldSnoopPortTable;
WriteMethod write_mldSnoopQueryDrop;
WriteMethod write_mldSnoopMulticastDataDrop;
WriteMethod write_mldSnoopPortClearStatistics;
void init_mldSnoopVlanTable(void);
FindVarMethod var_mldSnoopVlanTable;
WriteMethod write_mldSnoopVlanClearStatistics;

#endif /* end of #if (SYS_CPNT_MLDSNP == TRUE) */

    void init_enablePassword(void);
        Netsnmp_Node_Handler do_enablePassword;
    void init_authMethod(void);
        Netsnmp_Node_Handler do_authMethod;
    void init_userauthTable(void);
        FindVarMethod var_userAuthTable;
        WriteMethod write_userAuthPassword;
        WriteMethod write_userAuthPrivilege;
        WriteMethod write_userAuthStatus;

#if (SYS_CPNT_UDP_HELPER == TRUE)
/* UDP helper */
void init_udpHelperStatus(void);
Netsnmp_Node_Handler do_udpHelperStatus;

void init_udpHelperForwardProtocolTable(void);
FindVarMethod var_udpHelperForwardProtocolTable;
WriteMethod write_udpHelperForwardProtocolStatus;

void init_udpHelperInetAddrTable(void);
FindVarMethod var_udpHelperInetAddrTable;
WriteMethod write_udpHelperInetAddrStatus;
#endif /* #if (SYS_CPNT_UDP_HELPER == TRUE) */

#if (SYS_CPNT_DAI == TRUE)
void init_daiGlobal(void);
Netsnmp_Node_Handler do_daiGlobalStatus;
Netsnmp_Node_Handler do_daiGlobalSrcMacValidation;
Netsnmp_Node_Handler do_daiGlobalDestMacValidation;
Netsnmp_Node_Handler do_daiGlobalIpAddrValidation;
Netsnmp_Node_Handler do_daiGlobalLogNumber;
Netsnmp_Node_Handler do_daiGlobalLogInterval;
Netsnmp_Node_Handler get_daiGlobalAdditionalValidStatus;

void init_daiVlanTable(void);
FindVarMethod var_daiVlanTable;
WriteMethod write_daiVlanStatus;
WriteMethod write_daiVlanArpAclName;
WriteMethod write_daiVlanArpAclStatus;

void init_daiPortTable(void);
FindVarMethod var_daiPortTable;
WriteMethod write_daiPortTrustStatus;
WriteMethod write_daiPortRateLimit;

void init_daiLogTable(void);
FindVarMethod var_daiLogTable;

void init_daiStatistics(void);
Netsnmp_Node_Handler get_daiTotalReceivedPkts;
Netsnmp_Node_Handler get_daiTotalDroppedPkts;
Netsnmp_Node_Handler get_daiTotalProcessedPkts;
Netsnmp_Node_Handler get_daiTotalSrcMacDroppedPkts;
Netsnmp_Node_Handler get_daiTotalDestMacDroppedPkts;
Netsnmp_Node_Handler get_daiTotalIpAddrDroppedPkts;
Netsnmp_Node_Handler get_daiTotalArpAclDroppedPkts;
Netsnmp_Node_Handler get_daiTotalDhcpSnoopingDroppedPkts;
#endif  /*#if (SYS_CPNT_DAI == TRUE)*/

/* ospfMgt
 */
void init_ospfMultiProcessRouteTable(void);
FindVarMethod var_ospfMultiProcessRouteTable;

/* ipv6TunnelMgt */
void init_ipv6TunnelTable(void);
FindVarMethod var_ipv6TunnelTable;
WriteMethod write_ipv6TunnelNdRaSuppress;
WriteMethod write_ipv6TunnelMode;
WriteMethod write_ipv6TunnelTtl;
WriteMethod write_ipv6TunnelDestination;
WriteMethod write_ipv6TunnelSourceVlanIfindex;
WriteMethod write_ipv6TunnelRowStatus;

#if (SYS_CPNT_DHCP_INFORM == TRUE)
void init_dhcpInformTable(void);
FindVarMethod var_dhcpInformTable;
WriteMethod write_dhcpInformStatus;
#endif

#if (SYS_CPNT_EFM_OAM == TRUE)
/********************************************
 ********** oamPortClearStatTable **********
 ********************************************
 */
void init_oamPortClearStatTable(void);
FindVarMethod var_oamPortClearStatTable;
WriteMethod write_oamClearStatistics;

#define OAMPORTCLEARSTATINDEX       1
#define OAMPORTCLEARSTAT       2

/********************************************
 ******** oamPortClearEventLogTable *********
 ********************************************
 */
void init_oamPortClearEventLogTable(void);
FindVarMethod var_oamPortClearEventLogTable;
WriteMethod write_oamPortClearEventLogAction;

#define OAMPORTCLEAREVENTLOGINDEX       1
#define OAMPORTCLEAREVENTLOGACTION      2

#if (SYS_CPNT_EFM_OAM_REMOTE_LB_ACTIVELY == TRUE)

/********************************************
 ************* oamLoopbackTable *************
 ********************************************
 */
void init_oamLoopbackTable(void);
FindVarMethod var_oamLoopbackTable;
WriteMethod write_oamLoopbackTestPacketNumber;
WriteMethod write_oamLoopbackTestPacketSize;
WriteMethod write_oamLoopbackTestAction;

#define OAMLOOPBACKTESTIFINDEX          1
#define OAMLOOPBACKTESTPACKETNUMBER     2
#define OAMLOOPBACKTESTPACKETSIZE       3
#define OAMLOOPBACKTESTACTION           4
#define OAMLOOPBACKTESTRESULTTX         5
#define OAMLOOPBACKTESTRESULTRX         6
#define OAMLOOPBACKTESTRESULTLOSSRATE   7
#endif /* end of #if (SYS_CPNT_EFM_OAM_REMOTE_LB_ACTIVELY == TRUE) */
#endif /* end of #if (SYS_CPNT_EFM_OAM == TRUE) */

/********************************************
 *****************switchInfoTable************
 ********************************************
 */
#define SWUNITINDEX             1
#define SWHARDWAREVER           2
#define SWMICROCODEVER          3
#define SWLOADERVER             4
#define SWBOOTROMVER            5
#define SWOPCODEVER             6
#define SWPORTNUMBER            7
#define SWPOWERSTATUS           8
#define SWROLEINSYSTEM          9
#define SWSERIALNUMBER          10
#define SWEXPANSIONSLOT1        11
#define SWEXPANSIONSLOT2        12
#define SWSERVICETAG            13
#define SWMODELNUMBER           14
#define SWEPLDVER                   15
#define SWEXPECTEDMODULEOPCODEVER               16

/********************************************
 ***************switchIndivPowerTable********
 ********************************************
 */
#define SWINDIVPOWERUNITINDEX           1
#define SWINDIVPOWERINDEX               2
#define SWINDIVPOWERSTATUS              3

/********************************************
 ***************switchFanTable***************
 ********************************************
 */
#define SWITCHUNITINDEX         1
#define SWITCHFANINDEX          2
#define SWITCHFANSTATUS         3
#define SWITCHFANADMINSPEED             4
#define SWITCHFANFAILURECOUNT           5
#define SWITCHFANOPERSPEED              6



/********************************************
 ***********switchThermalTempTable***********
 ********************************************
 */
#define SWITCHTHERMALTEMPUNITINDEX              1
#define SWITCHTHERMALTEMPTHERMALINDEX           2
#define SWITCHTHERMALTEMPVALUE                  3

/********************************************
 ***********switchThermalActionTable***********
 ********************************************
 */
#define SWITCHTHERMALACTIONUNITINDEX            1
#define SWITCHTHERMALACTIONTHERMALINDEX         2
#define SWITCHTHERMALACTIONINDEX                3
#define SWITCHTHERMALACTIONRISINGTHRESHOLD              4
#define SWITCHTHERMALACTIONFALLINGTHRESHOLD             5
#define SWITCHTHERMALACTIONACTION               6
#define SWITCHTHERMALACTIONSTATUS               7

/********************************************
 ***********switchModuleInfoTable***********
 ********************************************
 */
#define SWMODULEUNITINDEX               1
#define SWMODULEMODULEINDEX             2
#define SWMODULEHARDWAREVER             3
#define SWMODULEMICROCODEVER    4
#define SWMODULELOADERVER               5
#define SWMODULEBOOTROMVER              6
#define SWMODULEOPCODEVER               7
#define SWMODULEPORTNUMBER              8
#define SWMODULESERIALNUMBER    9
#define SWMODULETYPE                10
#define SWMODULEMODELNUMBER             11
#define SWMODULEEPLDVER             12
#define SWMODULEDESCR               13
#define SWMODULEXENPAKTYPE              14

/********************************************
 ***********switchAlarmInputTable************
 ********************************************
 */
#define SWALARMUNITINDEX       1
#define SWALARMINPUTTYPE       2
#define SWALARMINPUTSTATUS     3
#define SWALARMINPUTNAME       4

/********************************************
 ***********switchAlarmOutputTable************
 ********************************************
 */
#define SWALARMOUTPUTUNITINDEX      1
#define SWALARMMAJORSTATUS          2
#define SWALARMMINORSTATUS          3

/********************************************
 ******************portTable*****************
 ********************************************
 */
#define PORTNAME                2
#define PORTTYPE                3
#define PORTSPEEDDPXCFG         4
#define PORTFLOWCTRLCFG         5
#define PORTCAPABILITIES        6
#define PORTAUTONEGOTIATION     7
#define PORTSPEEDDPXSTATUS      8
#define PORTFLOWCTRLSTATUS      9
#define PORTTRUNKINDEX          10
#define PORTETHERNETTYPE        11
#define PORTCOMBOFORCEDMODE     12
#define PORTPRIVATEMODE         13
#define PORTMDIXMODE            14
#define PORTMTU                 16
#define PORTMACADDRLEARNING     17
#define PORTMACADDRLEARNINGCOUNT 18

/********************************************
 **************cableDiagResultTable**********
 ********************************************
 */
#define CABLEDIAGRESULTIFINDEX       1
#define CABLEDIAGRESULTSTATUSPAIRA       2
#define CABLEDIAGRESULTSTATUSPAIRB       3
#define CABLEDIAGRESULTSTATUSPAIRC       4
#define CABLEDIAGRESULTSTATUSPAIRD       5
#define CABLEDIAGRESULTDISTANCEPAIRA       6
#define CABLEDIAGRESULTDISTANCEPAIRB       7
#define CABLEDIAGRESULTDISTANCEPAIRC       8
#define CABLEDIAGRESULTDISTANCEPAIRD       9
#define CABLEDIAGRESULTDISTANCEACCURACY       10
#define CABLEDIAGRESULTTIME       11

/********************************************
 ***********loopInternalResultTable**********
 ********************************************
 */
#define LOOPINTERNALRESULTIFINDEX       1
#define LOOPINTERNALRESULTSTATUS       2
#define LOOPINTERNALRESULTTIME       3

/********************************************
 *****************portUtilTable**************
 ********************************************
 */
#define PORTUTILIFINDEX         1
#define PORTINOCTETRATE         2
#define PORTINPACKETRATE        3
#define PORTINUTIL              4
#define PORTOUTOCTETRATE        5
#define PORTOUTPACKETRATE       6
#define PORTOUTUTIL             7

/********************************************
 ************portMediaInfoTable**************
 ********************************************
 */
#define PORTMEDIAINFOIFINDEX             1
#define PORTMEDIAINFOCONNECTORTYPE       2
#define PORTMEDIAINFOFIBERTYPE           3
#define PORTMEDIAINFOETHCOMPLIANCECODES  4
#define PORTMEDIAINFOBAUDRATE            5
#define PORTMEDIAINFOVENDOROUI           6
#define PORTMEDIAINFOVENDORNAME          7
#define PORTMEDIAINFOPARTNUMBER          8
#define PORTMEDIAINFOREVISION            9
#define PORTMEDIAINFOSERIALNUMBER       10
#define PORTMEDIAINFODATECODE           11

/********************************************
 ************portOpticalMonitoringInfoTable**
 ********************************************
 */
#define PORTOPTICALMONITORINGINFOIFINDEX        1
#define PORTOPTICALMONITORINGINFOTEMPERATURE    2
#define PORTOPTICALMONITORINGINFOVCC            3
#define PORTOPTICALMONITORINGINFOTXBIASCURRENT  4
#define PORTOPTICALMONITORINGINFOTXPOWER        5
#define PORTOPTICALMONITORINGINFORXPOWER        6

/********************************************
 *********portTransceiverThresholdInfoTable**
 ********************************************
 */
#define PORTTRANSCEIVERTHRESHOLDINFOIFINDEX       1
#define PORTTRANSCEIVERTHRESHOLDINFOTEMPERATURELOWALARM       2
#define PORTTRANSCEIVERTHRESHOLDINFOTEMPERATURELOWWARN       3
#define PORTTRANSCEIVERTHRESHOLDINFOTEMPERATUREHIGHWARN       4
#define PORTTRANSCEIVERTHRESHOLDINFOTEMPERATUREHIGHALARM       5
#define PORTTRANSCEIVERTHRESHOLDINFOVCCLOWALARM       6
#define PORTTRANSCEIVERTHRESHOLDINFOVCCLOWWARN       7
#define PORTTRANSCEIVERTHRESHOLDINFOVCCHIGHWARN       8
#define PORTTRANSCEIVERTHRESHOLDINFOVCCHIGHALARM       9
#define PORTTRANSCEIVERTHRESHOLDINFOTXBIASCURRENTLOWALARM       10
#define PORTTRANSCEIVERTHRESHOLDINFOTXBIASCURRENTLOWWARN       11
#define PORTTRANSCEIVERTHRESHOLDINFOTXBIASCURRENTHIGHWARN       12
#define PORTTRANSCEIVERTHRESHOLDINFOTXBIASCURRENTHIGHALARM       13
#define PORTTRANSCEIVERTHRESHOLDINFOTXPOWERLOWALARM       14
#define PORTTRANSCEIVERTHRESHOLDINFOTXPOWERLOWWARN       15
#define PORTTRANSCEIVERTHRESHOLDINFOTXPOWERHIGHWARN       16
#define PORTTRANSCEIVERTHRESHOLDINFOTXPOWERHIGHALARM       17
#define PORTTRANSCEIVERTHRESHOLDINFORXPOWERLOWALARM       18
#define PORTTRANSCEIVERTHRESHOLDINFORXPOWERLOWWARN       19
#define PORTTRANSCEIVERTHRESHOLDINFORXPOWERHIGHWARN       20
#define PORTTRANSCEIVERTHRESHOLDINFORXPOWERHIGHALARM       21
#define PORTTRANSCEIVERTHRESHOLDAUTOMODE                   22

/**************************************
 ************portFecTable**************
 **************************************
 */
#define PORTFECIFINDEX          1
#define PORTFECMODE             2
#define PORTFECSTATUS           3

/********************************************
 ******************trunkTable****************
 ********************************************
 */
#define TRUNKINDEX              1
#define TRUNKPORTS              2
#define TRUNKCREATION           3
#define TRUNKSTATUS             4
#define TRUNKGROUP              5

/********************************************
 ******************lacpPortTable*************
 ********************************************
 */
#define LACPPORTINDEX           1
#define LACPPORTSTATUS          2


/********************************************
 ****************staPortTable****************
 ********************************************
 */
#define STAPORTINDEX                            1
#define STAPORTFASTFORWARD                      2
#define STAPORTPROTOCOLMIGRATION                3
#define STAPORTADMINEDGEPORT                    4
#define STAPORTOPEREDGEPORT                     5
#define STAPORTADMINPOINTTOPOINT                6
#define STAPORTOPERPOINTTOPOINT                 7
#define STAPORTSYSTEMSTATUS                     9
#define STAPORTLONGADMINPATHCOST                10
#define STAPORTLONGOPERPATHCOST                 11
#define STAPORTBPDUGUARD                        15
#define STAPORTADMINEDGEPORTWITHAUTO            16
#define STAPORTBPDUFILTER                       17
#define STAPORTROOTGUARDSTATUS                  18
#define STAPORTBPDUGUARDAUTORECOVERY            19
#define STAPORTBPDUGUARDAUTORECOVERYINTERVAL    20

/********************************************
 **************xstInstanceCfgTable***********
 ********************************************
 */
#define XSTINSTANCECFGINDEX                     1
#define XSTINSTANCECFGPRIORITY                  2
#define XSTINSTANCECFGTIMESINCETOPOLOGYCHANGE   3
#define XSTINSTANCECFGTOPCHANGES                4
#define XSTINSTANCECFGDESIGNATEDROOT            5
#define XSTINSTANCECFGROOTCOST                  6
#define XSTINSTANCECFGROOTPORT                  7
#define XSTINSTANCECFGMAXAGE                    8
#define XSTINSTANCECFGHELLOTIME                 9
#define XSTINSTANCECFGHOLDTIME                  10
#define XSTINSTANCECFGFORWARDDELAY              11
#define XSTINSTANCECFGBRIDGEMAXAGE              12
#define XSTINSTANCECFGBRIDGEHELLOTIME           13
#define XSTINSTANCECFGBRIDGEFORWARDDELAY        14
#define XSTINSTANCECFGTXHOLDCOUNT               15
#define XSTINSTANCECFGPATHCOSTMETHOD            16

/********************************************
 ***********xstInstancePortTable*************
 ********************************************
 */
#define XSTINSTANCEPORTINSTANCE              1
#define XSTINSTANCEPORTPORT                  2
#define XSTINSTANCEPORTPRIORITY              3
#define XSTINSTANCEPORTSTATE                 4
#define XSTINSTANCEPORTENABLE                5
#define XSTINSTANCEPORTPATHCOST              6
#define XSTINSTANCEPORTDESIGNATEDROOT        7
#define XSTINSTANCEPORTDESIGNATEDCOST        8
#define XSTINSTANCEPORTDESIGNATEDBRIDGE      9
#define XSTINSTANCEPORTDESIGNATEDPORT        10
#define XSTINSTANCEPORTFORWARDTRANSITIONS    11
#define XSTINSTANCEPORTPORTROLE              12
#define XSTINSTANCEPORTADMINPATHCOST            13

#define XSTINSTANCEPORTOPERPATHCOST             14

/********************************************
 ************mstInstanceEditTable************
 ********************************************
 */
#define MSTINSTANCEEDITINDEX                    1
#define MSTINSTANCEEDITVLANSMAP                 2
#define MSTINSTANCEEDITVLANSMAP2K               3
#define MSTINSTANCEEDITVLANSMAP3K               4
#define MSTINSTANCEEDITVLANSMAP4K               5
#define MSTINSTANCEEDITREMAININGHOPS            6

/********************************************
 ************mstInstanceOperTable************
 ********************************************
 */
#define MSTINSTANCEOPERINDEX            1
#define MSTINSTANCEOPERVLANSMAP         2
#define MSTINSTANCEOPERVLANSMAP2K       3
#define MSTINSTANCEOPERVLANSMAP3K       4
#define MSTINSTANCEOPERVLANSMAP4K       5

/********************************************
 *******staLoopbackDetectionPortTable********
 ********************************************
 */
#define STALOOPBACKDETECTIONPORTIFINDEX       1
#define STALOOPBACKDETECTIONPORTSTATUS       2
#define STALOOPBACKDETECTIONPORTTRAPSTATUS       3
#define STALOOPBACKDETECTIONPORTRELEASEMODE       4
#define STALOOPBACKDETECTIONPORTRELEASE       5

/********************************************
 ***********mirrorTable**********************
 ********************************************
 */
#define MIRRORDESTINATIONPORT   1
#define MIRRORSOURCEPORT        2
#define MIRRORTYPE              3
#define MIRRORSTATUS            4

/********************************************
 **********macMirrorTable********************
 ********************************************
 */
#define MACMIRRORDESTINATIONPORT       1
#define MACMIRRORSOURCEMACADDR       2
#define MACMIRRORSTATUS       3

/********************************************
 ******igmpSnoopRouterCurrentTable***********
 ********************************************
 */
#define IGMPSNOOPROUTERCURRENTVLANINDEX         1
#define IGMPSNOOPROUTERCURRENTPORTS             2
#define IGMPSNOOPROUTERCURRENTSTATUS            3

/********************************************
 ******igmpSnoopRouterStaticTable************
 ********************************************
 */
#define IGMPSNOOPROUTERSTATICVLANINDEX          1
#define IGMPSNOOPROUTERSTATICPORTS              2
#define IGMPSNOOPROUTERSTATICSTATUS             3

/********************************************
 ******igmpSnoopMulticastCurrentTable********
 ********************************************
 */
#define IGMPSNOOPMULTICASTCURRENTVLANINDEX      1
#define IGMPSNOOPMULTICASTCURRENTIPADDRESS      2
#define IGMPSNOOPMULTICASTCURRENTPORTS          3
#define IGMPSNOOPMULTICASTCURRENTSTATUS         4

/********************************************
 ******igmpSnoopMulticastStaticTable*********
 ********************************************
 */
#define IGMPSNOOPMULTICASTSTATICVLANINDEX       1
#define IGMPSNOOPMULTICASTSTATICIPADDRESS       2
#define IGMPSNOOPMULTICASTSTATICPORTS           3
#define IGMPSNOOPMULTICASTSTATICSTATUS          4

/********************************************
 ******igmpSnoopMulticastGroupTable********
 ********************************************
 */
#define IGMPSNOOPMULTICASTGROUPVLANINDEX       1
#define IGMPSNOOPMULTICASTGROUPIPADDRESS       2
#define IGMPSNOOPMULTICASTGROUPSOURCEIPADDRESS 3
#define IGMPSNOOPMULTICASTGROUPPORTS           4
#define IGMPSNOOPMULTICASTGROUPSTATUS          5
#define IGMPSNOOPMULTICASTGROUPPORTCOUNT        6

/********************************************
 ******igmpSnoopPortTable********
 ********************************************
 */
#define IGMPSNOOPPORTINDEX                1
#define IGMPSNOOPQUERYGUARD               3
#define IGMPSNOOPMULTICASTDATAGUARD       4

/********************************************
 ******netConfigTable************************
 ********************************************
 */
#define NETCONFIGIFINDEX                1
#define NETCONFIGIPADDRESS              2
#define NETCONFIGSUBNETMASK             3
#define NETCONFIGPRIMARYINTERFACE       4
#define NETCONFIGUNNUMBERED             5
#define NETCONFIGSTATUS                 6

/********************************************
 ******ipaddrTable************************
 ********************************************
 */
#define IPADDRIPADDRESS 1
#define IPADDRSUBNETMASK 2
#define IPADDRIFINDEX 3
#define IPADDRPRIMARYINTERFACE 4
#define IPADDRUNNUMBERED 5
#define IPADDRSTATUS 6

/********************************************
 **************dhcpcInterfaceTable***********
 ********************************************
 */
#define DHCPCIFINDEX            1
#define DHCPCIFCLIENTIDMODE     2
#define DHCPCIFCLIENTID         3
#define DHCPCIFVENDORCLASSIDMODE   4
#define DHCPCIFVENDORCLASSID       5

/********************************************
 ************dhcpRelayServerAddrTable********
 ********************************************
 */
#define DHCPRELAYSERVERADDRIFINDEX              1
#define DHCPRELAYSERVERADDRINDEX                2
#define DHCPRELAYSERVERADDRSERVERIP             3

/********************************************
 ************dhcpRelayServerInetAddrTable********
 ********************************************
 */
#define DHCPRELAYSERVERINETADDRIFINDEX              1
#define DHCPRELAYSERVERINETADDRINDEX                2
#define DHCPRELAYSERVERINETADDRTYPE                 3
#define DHCPRELAYSERVERINETADDR                     4

/********************************************
 ************dhcpRelayIfTable****************
 ********************************************
 */
#define DHCPRELAYIFINDEX       1
#define DHCPRELAYIFSTATUS       2
#if 0 /* shumin.wang added for inet address, 2008-12-30 */
/********************************************
 **************dhcpPoolTable*****************
 ********************************************
 */
#define DHCPPOOLPOOLNAME                1
#define DHCPPOOLPOOLTYPE                2
#define DHCPPOOLPOOLADDRESS             3
#define DHCPPOOLSUBNETMASK              4
#define DHCPPOOLHARDWARETYPE    5
#define DHCPPOOLMACADDRESS              6
#define DHCPPOOLSTATUS              7


/********************************************
 ********dhcpPoolOptionTable*****************
 ********************************************
 */
#define DHCPPOOLOPTIONPOOLNAME              1
#define DHCPPOOLOPTIONNEXTSERVER                2
#define DHCPPOOLOPTIONNETBIOSNODETYPE   3
#define DHCPPOOLOPTIONDOMAINNAME                4
#define DHCPPOOLOPTIONBOOTFILE              5
#define DHCPPOOLOPTIONLEASETIME             6
#define DHCPPOOLOPTIONCIDMODE               7
#define DHCPPOOLOPTIONCIDBUFFER             8


/********************************************
 ************dhcpPoolOptionDnsSerTable*******
 ********************************************
 */
#define DHCPPOOLOPTIONDNSSERPOOLNAME            1
#define DHCPPOOLOPTIONDNSSERINDEX                   2
#define DHCPPOOLOPTIONDNSSERIPADDRESS           3

/********************************************
 ********dhcpPoolOptDefaultRouterTable*******
 ********************************************
 */
#define DHCPPOOLOPTDEFAULTROUTERPOOLNAME                1
#define DHCPPOOLOPTDEFAULTROUTERINDEX               2
#define DHCPPOOLOPTDEFAULTROUTERIPADDRESS               3

/********************************************
 ********dhcpPoolOptNetbiosServerTable*******
 ********************************************
 */
#define DHCPPOOLOPTNETBIOSSERVERPOOLNAME                1
#define DHCPPOOLOPTNETBIOSSERVERINDEX               2
#define DHCPPOOLOPTNETBIOSSERVERIPADDRESS               3

/********************************************
 ********dhcpServerExcludedIpAddrTable*******
 ********************************************
 */
#define DHCPSERVEREXCLUDEDIPADDRLOWIP           1
#define DHCPSERVEREXCLUDEDIPADDRHIIP            2
#define DHCPSERVEREXCLUDEDIPADDRSTATUS          3

/********************************************
 ********dhcpServerLeaseBindingTable*********
 ********************************************
 */
#define DHCPSERVERLEASEBINDINGIP                1
#define DHCPSERVERLEASEBINDINGMAC                   2
#define DHCPSERVERLEASEBINDINGLEASETIME         3
#define DHCPSERVERLEASEBINDINGSTARTTIME         4
#define DHCPSERVERLEASEBINDINGSTATUS            5
#else

/********************************************
 **************dhcpPoolInetTable*****************
 ********************************************
 */
/* shumin.wang modified for inet */
#define DHCPPOOLINETPOOLNAME                1
#define DHCPPOOLINETPOOLTYPE                2
#define DHCPPOOLINETADDRESSTYPE             3
#define DHCPPOOLINETADDRESS                 4
#define DHCPPOOLINETSUBNETMASKTYPE          5
#define DHCPPOOLINETSUBNETMASK              6
#define DHCPPOOLINETHARDWARETYPE            7
#define DHCPPOOLINETMACADDRESS              8
#define DHCPPOOLINETSTATUS                  9


/********************************************
 ********dhcpPoolInetOptionTable*****************
 ********************************************
 */
#define DHCPPOOLINETOPTIONPOOLNAME              1
#define DHCPPOOLINETOPTIONNEXTSERVERTYPE        2
#define DHCPPOOLINETOPTIONNEXTSERVER            3
#define DHCPPOOLINETOPTIONNETBIOSNODETYPE       4
#define DHCPPOOLINETOPTIONDOMAINNAME            5
#define DHCPPOOLINETOPTIONBOOTFILE              6
#define DHCPPOOLINETOPTIONLEASETIME             7
#define DHCPPOOLINETOPTIONCIDMODE               8
#define DHCPPOOLINETOPTIONCIDBUFFER             9


/********************************************
 ************dhcpPoolInetOptionDnsSerTable*******
 ********************************************
 */
#define DHCPPOOLINETOPTIONDNSSERPOOLNAME                1
#define DHCPPOOLINETOPTIONDNSSERINDEX                   2
#define DHCPPOOLINETOPTIONDNSSERIPADDRESSTYPE           3
#define DHCPPOOLINETOPTIONDNSSERIPADDRESS               4

/********************************************
 ********dhcpPoolOptInetDefaultRouterTable*******
 ********************************************
 */
#define DHCPPOOLOPTINETDEFAULTROUTERPOOLNAME                1
#define DHCPPOOLOPTINETDEFAULTROUTERINDEX                   2
#define DHCPPOOLOPTINETDEFAULTROUTERIPADDRESSTYPE           3
#define DHCPPOOLOPTINETDEFAULTROUTERIPADDRESS               4

/********************************************
 ********dhcpPoolOptInetNetbiosServerTable*******
 ********************************************
 */
#define DHCPPOOLOPTINETNETBIOSSERVERPOOLNAME                1
#define DHCPPOOLOPTINETNETBIOSSERVERINDEX                   2
#define DHCPPOOLOPTINETNETBIOSSERVERIPADDRESSTYPE           3
#define DHCPPOOLOPTINETNETBIOSSERVERIPADDRESS               4

/********************************************
 ********dhcpServerExcludedIpAddrTable*******
 ********************************************
 */
#define DHCPSERVEREXCLUDEDINETADDRLOWADDRTYPE       1
#define DHCPSERVEREXCLUDEDINETADDRLOWADDR           2
#define DHCPSERVEREXCLUDEDINETADDRHIGHADDRTYPE        3
#define DHCPSERVEREXCLUDEDINETADDRHIGHADDR            4
#define DHCPSERVEREXCLUDEDINETADDRSTATUS          3

/********************************************
 ********dhcpServerLeaseBindingTable*********
 ********************************************
 */
#define DHCPSERVERINETLEASEBINDINGADDRTYPE          1
#define DHCPSERVERINETLEASEBINDINGADDR          2
#define DHCPSERVERINETLEASEBINDINGMAC       3
#define DHCPSERVERINETLEASEBINDINGLEASETIME     4
#define DHCPSERVERINETLEASEBINDINGSTARTTIME     5
#define DHCPSERVERINETLEASEBINDINGSTATUS            6
#endif

/* pim
 */
#define PIMRPINETADDRTYPE       1
#define PIMRPINETADDR       2
#define PIMRPINETADDRGROUPADDR       3
#define PIMRPINETADDRGROUPADDRPREFIXLENGTH       4
#define PIMRPINETADDROVERRIDE       5
#define PIMRPINETADDRSTATUS       6

#define PIMINTERFACEIFINDEX       1
#define PIMINTERFACETRIGHELLOINTERVAL       2
#define PIMINTERFACEHELLOHOLDTIME       3
#define PIMINTERFACEJOINPRUNEHOLDTIME       4
#define PIMINTERFACELANPRUNEDELAY       5
#define PIMINTERFACEPROPAGATIONDELAY       6
#define PIMINTERFACEOVERRIDEINTERVAL       7
#define PIMINTERFACEDRPRIORITY       8
#define PIMINTERFACESTATEREFRESHORGINTERVAL       9
#define PIMINTERFACEGRAFTRETRYINTERVAL       10
#define PIMINTERFACEMAXGRAFTRETRIES       11

/********************************************
 ********dhcpOption82RelayServerAddrTable****
 ********************************************
 */
#define DHCPOPTION82RELAYSERVERADDRINDEX       1
#define DHCPOPTION82RELAYSERVERADDRSERVERIP    2

/********************************************
 **************bcastStormTable***************
 ********************************************
 */
#define BCASTSTORMIFINDEX       1
#define BCASTSTORMSTATUS       2
#define BCASTSTORMSAMPLETYPE       3
#define BCASTSTORMPKTRATE       4
#define BCASTSTORMOCTETRATE       5
#define BCASTSTORMPERCENT       6
#define BCASTSTORMBITRATEINKILO       7

/********************************************
 **************mcastStormTable***************
 ********************************************
 */
#define MCASTSTORMIFINDEX               1
#define MCASTSTORMSTATUS                2
#define MCASTSTORMSAMPLETYPE            3
#define MCASTSTORMPKTRATE               4
#define MCASTSTORMOCTETRATE             5
#define MCASTSTORMPERCENT               6

/********************************************
 **************vlanTable*********************
 ********************************************
 */
#define VLANINDEX               1
#define VLANADDRESSMETHOD       2

/********************************************
 *************vlanPortTable******************
 ********************************************
 */
#define VLANPORTINDEX            1
#define VLANPORTMODE             2
#define VLANPORTPRIVATEVLANTYPE  3

/********************************************
 ****************macVlanTable****************
 ********************************************
 */
#define MACVLANMACADDRESS       1
#define MACVLANID       2
#define MACVLANPRIORITY       3
#define MACVLANSTATUS       4

/********************************************
 ***************subnetVlanTable**************
 ********************************************
 */
#define SUBNETVLANIPADDRESS       1
#define SUBNETVLANMASK       2
#define SUBNETVLANID       3
#define SUBNETVLANPRIORITY       4
#define SUBNETVLANSTATUS       5

/********************************************
 ***************subnetVlanPortable***********
 ********************************************
 */
#define SUBNETVLANPORTIPADDRESS       1
#define SUBNETVLANPORTIPMASK       2
#define SUBNETVLANPORT       3
#define SUBNETVLANPORTSTATUS       4

/********************************************
 **********vlanDot1qTunnelPortTable**********
 ********************************************
 */
 #define VLANDOT1QTUNNELPORTINDEX       1
#define VLANDOT1QTUNNELPORTMODE       2
#define VLANDOT1QTUNNELPORTETHERTYPE       3

/********************************************
 ********vlanL2ProtocolTunnelPortTable*******
 ********************************************
 */
#define VLANL2PTPORTINDEX   1
#define VLANL2PTPORTSTA     2
#define VLANL2PTPORTLLDP    3
#define VLANL2PTPORTCDP     4
#define VLANL2PTPORTVTP     5
#define VLANL2PTPORTPVST    6

/********************************************
 *********privateVlanEdgePortTable***********
 ********************************************
 */
#define PVEPORTIFINDEX       1
#define PVEPORTSTATUS       2

/********************************************
 *************voiceVlanOuiTable**************
 ********************************************
 */
#define VOICEVLANOUIADDRESS       1
#define VOICEVLANOUIMASK       2
#define VOICEVLANOUIDESCRIPTION       3
#define VOICEVLANOUISTATUS       4

/********************************************
 *************voiceVlanPortTable*************
 ********************************************
 */
#define VOICEVLANPORTIFINDEX    1
#define VOICEVLANPORTMODE       2
#define VOICEVLANPORTSECURITY   3
#define VOICEVLANPORTPRIORITY   4
#define VOICEVLANPORTRULEOUI    5
#define VOICEVLANPORTRULELLDP   6
#define VOICEVLANPORTREMAINAGE  7

/********************************************
 **********vlanDot1qTunnelPortTable**********
 ********************************************
 */
 #define VLANDOT1QTUNNELPORTINDEX       1
#define VLANDOT1QTUNNELPORTMODE       2
#define VLANDOT1QTUNNELPORTETHERTYPE       3

/********************************************
 *************prioIpPrecTable****************
 ********************************************
 */
#define PRIOIPPRECPORT          1
#define PRIOIPPRECVALUE         2
#define PRIOIPPRECCOS           3

/********************************************
 *************prioIpDscpTable****************
 ********************************************
 */
#define PRIOIPDSCPPORT          1
#define PRIOIPDSCPVALUE         2
#define PRIOIPDSCPCOS           3
#define PRIOIPDSCPSTATUS    4

/********************************************
 *************prioIpPortTable****************
 ********************************************
 */
#define PRIOIPPORTPHYSPORT      1
#define PRIOIPPORTVALUE         2
#define PRIOIPPORTCOS           3
#define PRIOIPPORTSTATUS        4

/********************************************
 *************prioWrrTable*******************
 ********************************************
 */
#define PRIOWRRTRAFFICCLASS     1
#define PRIOWRRWEIGHT           2
#define PRIOWRRSTRICTSTATUS     3

/********************************************
 *************prioPortTable******************
 ********************************************
 */
#define PRIOPORTIFINDEX         1
#define PRIOPORTQUEUEMODE       2

/********************************************
 *************prioWrrPortTable***************
 ********************************************
 */

#define PRIOWRRPORTIFINDEX              1
#define PRIOWRRPORTTRAFFICCLASS         2
#define PRIOWRRPORTWEIGHT               3
#define PRIOWRRPORTSTRICTSTATUS         4


/******************************************** 2008-06-04, Jinfeng.Chen: for the scheduling mode per port.
 *************prioSchedModePortTable***************
 ********************************************
 */
#define PRIOSCHEDMODEPORTINDEX      1
#define PRIOSCHEDMODEPORT           2

#if 0
/********************************************
 *************trapDestTable******************
 ********************************************
 */
#define TRAPDESTADDRESS         1
#define TRAPDESTCOMMUNITY       2
#define TRAPDESTSTATUS          3
#define TRAPDESTVERSION         4
#define TRAPDESTUDPPORT         5
#endif

/********************************************
 *************rateLimitPortTable*************
 ********************************************
 */
#define RLPORTINDEX                     1
#define RLPORTINPUTLIMIT                2
#define RLPORTOUTPUTLIMIT               3
#define RLPORTINPUTSTATUS               6
#define RLPORTOUTPUTSTATUS              7
#define RLPORTINPUTLIMITINKILO         10
#define RLPORTOUTPUTLIMITINKILO        11

/********************************************
 *************markerTable********************
 ********************************************
 */
#define MARKERIFINDEX           1
#define MARKERACLNAME           2
#define MARKERACTIONBITLIST     3
#define MARKERDSCP              4
#define MARKERPRECEDENCE        5
#define MARKERPRIORITY          6
#define MARKERSTATUS            7

/********************************************
 *************prioAclToCosMappingTable*******
 ********************************************
 */
#define PRIOACLTOCOSMAPPINGIFINDEX              1
#define PRIOACLTOCOSMAPPINGACLNAME              2
#define PRIOACLTOCOSMAPPINGCOSVALUE             3
#define PRIOACLTOCOSMAPPINGSTATUS               4

/********************************************
 ************privateVlanSessionTable*********
 ********************************************
 */
#define PRIVATEVLANSESSIONID                1
#define PRIVATEVLANSESSIONUPLINKPORTS       2
#define PRIVATEVLANSESSIONDOWNLINKPORTS     3
#define PRIVATEVLANSESSIONSTATUS            4

/********************************************
 ********prioIfClassificationModeTable*******
 ********************************************
 */
#define PRIOIFCLASSIFICATIONMODEIF              1
#define PRIOIFCLASSIFICATIONMODESTATUS          2

/********************************************
 ********prioCosToDscpTable******************
 ********************************************
 */
#define PRIOCOSTODSCPIFVALUE                    1
#define PRIOCOSTODSCPCOSVALUE                   2
#define PRIOCOSTODSCPCFIVALUE                   3
#define PRIOCOSTODSCPDSCPVALUE                  4
#define PRIOCOSTODSCPPHBVALUE                   5
#define PRIOCOSTODSCPCOLORVALUE                 6

/********************************************
 ********prioPrecToDscpTable*****************
 ********************************************
 */
#define PRIOPRECTODSCPIFVALUE                   1
#define PRIOPRECTODSCPPRECVALUE                 2
#define PRIOPRECTODSCPDSCPVALUE                 3
#define PRIOPRECTODSCPPHBVALUE                  4
#define PRIOPRECTODSCPCOLORVALUE                5


/********************************************
 ********prioDscpToDscpTable*****************
 ********************************************
 */
#define PRIODSCPTODSCPIFVALUE                   1
#define PRIODSCPTODSCPINGRESSDSCPVALUE          2
#define PRIODSCPTODSCPDSCPVALUE                 3
#define PRIODSCPTODSCPPHBVALUE                  4
#define PRIODSCPTODSCPCOLORVALUE                5

/********************************************
 ********prioDstPortToDscpTable**************
 ********************************************
 */
#define PRIODSTPORTTODSCPIFVALUE                1
#define PRIODSTPORTTODSCPPROTOCOLVALUE          2
#define PRIODSTPORTTODSCPDSTPORTVALUE           3
#define PRIODSTPORTTODSCPDSCPVALUE              4
#define PRIODSTPORTTODSCPPHBVALUE               5
#define PRIODSTPORTTODSCPCOLORVALUE             6

/********************************************
 ********prioDscpToCosTable******************
 ********************************************
 */
 #define PRIODSCPTOCOSCFICOSVALUE               1

/********************************************
 ********prioPrioToDropPrecTable*************
 ********************************************
 */
#define  PRIOPRIOTODROPPRECPRECVALUE            1

/********************************************
 ********prioDscpToQueueTable*************
 ********************************************
 */
#define  PRIODSCPTOQUEUEQUEUEVALUE              1

/********************************************
 ********prioDefaultPriorityTable*************
 ********************************************
 */
#define  PRIODEFAULTPRIORITYVALUE               1

/********************************************
 *************diffServClfrExtTable***********
 ********************************************
 */
#define DIFFSERVCLFREXTNAME             1
#define DIFFSERVCLFREXTDESC             2

/********************************************
 *************diffServClassMapTable**********
 ********************************************
 */
#define DIFFSERVCLASSMAPID                  1
#define DIFFSERVCLASSMAPNAME            2
#define DIFFSERVCLASSMAPDESC            3
#define DIFFSERVCLASSMAPTYPE            4
#define DIFFSERVCALSSMAPSTATUS          5

/********************************************
 ******diffServClassMapElementTable**********
 ********************************************
 */
#define DIFFSERVCLASSMAPELEMENTID               1
#define DIFFSERVCLASSMAPELEMENTSPECIFIC         2
#define DIFFSERVCLASSMAPELEMENTSTATUS           3


/********************************************
 ****diffServMultiFieldClfrExtTable**********
 ********************************************
 */
#define DIFFSERVMULTIFIELDCLFREXTTYPE              1
#define DIFFSERVMULTIFIELDCLFREXTVID               2
#define DIFFSERVMULTIFIELDCLFREXTIPPRECEDENCE  3
#define DIFFSERVMULTIFIELDCLFREXTCLASSTYPE     4
#define DIFFSERVMULTIFIELDCLFREXTETHERTYPE     5

/********************************************
 ************diffServToSMarkActTable*********
 ********************************************
 */
#define DIFFSERVTOSMARKACTTOS           1

/********************************************
 ************diffServDot1pMarkActTable*******
 ********************************************
 */
#define DIFFSERVDOT1PMARKACTDOT1P               1

/********************************************
 ************diffServPortTable****************
 ********************************************
 */
#define DIFFSERVPORTIFINDEX             1
#define DIFFSERVPORTPOLICYMAPINDEX      2
#define DIFFSERVPORTINGRESSIPACLINDEX   3
#define DIFFSERVPORTINGRESSMACACLINDEX  4

#if (SYS_CPNT_ACL_IPV6 == TRUE)
#define DIFFSERVPORTINGRESSIPV6ACLINDEX 5
#endif

/********************************************
 *************diffServClassMapTable**********
 ********************************************
 */
#define DIFFSERVCLASSMAPINDEX 1
#define DIFFSERVCLASSMAPNAME_2  2
#define DIFFSERVCLASSMAPDESCRIPTION   3
#define DIFFSERVCLASSMAPMATCHTYPE 4
#define DIFFSERVCLASSMAPELEMENTINDEXTYPELIST   5
#define DIFFSERVCLASSMAPELEMENTINDEXLIST    6
#define DIFFSERVCLASSMAPSTATUS    7
/********************************************
 ********************************************
 ************diffServPolicyMapTable***********
 ********************************************
 */
#define DIFFSERVPOLICYMAPINDEX    1
#define DIFFSERVPOLICYMAPNAME 2
#define DIFFSERVPOLICYMAPDESCRIPTION  3
#define DIFFSERVPOLICYMAPELEMENTINDEXLIST 4
#define DIFFSERVPOLICYMAPSTATUS   5
 /********************************************
 ************diffServPolicyMapElementTable****
 ********************************************
 */
#define DIFFSERVPOLICYMAPELEMENTINDEX     1
#define DIFFSERVPOLICYMAPELEMENTCLASSMAPINDEX 2
#define DIFFSERVPOLICYMAPELEMENTMETERINDEX    3
#define DIFFSERVPOLICYMAPELEMENTACTIONINDEX   4
#define DIFFSERVPOLICYMAPELEMENTSTATUS    5

 /********************************************
 ************diffServAclTable****************
 ********************************************
 */
#define DIFFSERVACLINDEX  1
#define DIFFSERVACLNAME   2
#define DIFFSERVACLTYPE    3
#define DIFFSERVACLACEINDEXLIST   4
#define DIFFSERVACLSTATUS 5
 /********************************************
 ************diffServIpAceTable***************
 ********************************************
 */
#define DIFFSERVIPACEINDEX    1
#define DIFFSERVIPACETYPE 2
#define DIFFSERVIPACEACCESS   3
#define DIFFSERVIPACESOURCEIPADDR 4
#define DIFFSERVIPACESOURCEIPADDRBITMASK  5
#define DIFFSERVIPACEDESTIPADDR   6
#define DIFFSERVIPACEDESTIPADDRBITMASK    7
#define DIFFSERVIPACEPROTOCOL 8
#define DIFFSERVIPACEPREC 9
#define DIFFSERVIPACETOS    10
#define DIFFSERVIPACEDSCP 11
#define DIFFSERVIPACESOURCEPORTOP 12
#define DIFFSERVIPACEMINSOURCEPORT    13
#define DIFFSERVIPACEMAXSOURCEPORT    14
#define DIFFSERVIPACESOURCEPORTBITMASK    15
#define DIFFSERVIPACEDESTPORTOP   16
#define DIFFSERVIPACEMINDESTPORT  17
#define DIFFSERVIPACEMAXDESTPORT  18
#define DIFFSERVIPACEDESTPORTBITMASK  19
#define DIFFSERVIPACECONTROLCODE  20
#define DIFFSERVIPACECONTROLCODEBITMASK   21
#define DIFFSERVIPACESTATUS   22
#define DIFFSERVIPACEICMPTYPE     25
/********************************************
 ************diffServIpv6AceTable*************
 ********************************************
 */
#if (SYS_CPNT_ACL_IPV6 == TRUE)
#define DIFFSERVIPV6ACEINDEX                        1
#define DIFFSERVIPV6ACETYPE                             2
#define DIFFSERVIPV6ACEACCESS                       3
#define DIFFSERVIPV6ACESOURCEIPADDR             4
#define DIFFSERVIPV6ACESOURCEIPADDRPREFIXLEN        5
#define DIFFSERVIPV6ACEDESTIPADDR               6
#define DIFFSERVIPV6ACEDESTIPADDRPREFIXLEN      7
#if (SYS_CPNT_ACL_IPV6_EXT_NEXT_HEADER == TRUE)
#define DIFFSERVIPV6ACENEXTHEADER               8
#endif
#define DIFFSERVIPV6ACEDSCP                     9
#if (SYS_CPNT_ACL_IPV6_EXT_FLOW_LABEL == TRUE)
#define DIFFSERVIPV6ACEFLOWLABEL                    10
#endif
#define DIFFSERVIPV6ACESTATUS                   11
#endif /*#if (SYS_CPNT_ACL_IPV6 == TRUE)*/
/********************************************
 ************diffServMacAceTable***************
 ********************************************
 */
#define DIFFSERVMACACEINDEX                    1
#define DIFFSERVMACACEACCESS                   2
#define DIFFSERVMACACEPKTFORMAT                3
#define DIFFSERVMACACESOURCEMACADDR            4
#define DIFFSERVMACACESOURCEMACADDRBITMASK     5
#define DIFFSERVMACACEDESTMACADDR              6
#define DIFFSERVMACACEDESTMACADDRBITMASK       7
#define DIFFSERVMACACEVIDOP                    8
#define DIFFSERVMACACEMINVID                   9
#define DIFFSERVMACACEVIDBITMASK              10
#define DIFFSERVMACACEMAXVID                  11
#define DIFFSERVMACACEETHERTYPEOP             12
#define DIFFSERVMACACEETHERTYPEBITMASK        13
#define DIFFSERVMACACEMINETHERTYPE            14
#define DIFFSERVMACACEMAXETHERTYPE            15
#define DIFFSERVMACACESTATUS                  16
#define DIFFSERVMACACECOSOP                   17
#define DIFFSERVMACACECOSBITMASK              18
#define DIFFSERVMACACEMINCOS                  19
#define DIFFSERVMACACEMAXCOS                  20
#define DIFFSERVMACACESOURCEIPADDR            32
#define DIFFSERVMACACESOURCEIPADDRBITMASK     33
#define DIFFSERVMACACEDESTIPADDR              34
#define DIFFSERVMACACEDESTIPADDRBITMASK       35
#define DIFFSERVMACACESOURCEIPV6ADDR          36
#define DIFFSERVMACACESOURCEIPV6ADDRPREFIXLEN 37
#define DIFFSERVMACACEDESTIPV6ADDR            38
#define DIFFSERVMACACEDESTIPV6ADDRPREFIXLEN   39
#define DIFFSERVMACACEIPPROTOCOL              40
#define DIFFSERVMACACEL4SOURCEPORTOP          41
#define DIFFSERVMACACEL4SOURCEPORT            42
#define DIFFSERVMACACEL4SOURCEPORTBITMASK     43
#define DIFFSERVMACACEL4DESTPORTOP            44
#define DIFFSERVMACACEL4DESTPORT              45
#define DIFFSERVMACACEL4DESTPORTBITMASK       46

 /********************************************
 ************diffServMeterTable****************
 ********************************************
 */
#define DIFFSERVMETERINDEX      1
#define DIFFSERVMETERMODEL      2
#define DIFFSERVMETERRATE       3
#define DIFFSERVMETERBURSTSIZE      4
#define DIFFSERVMETERSTATUS     6
/*zhangwei add */
#define DIFFSERVMETERPEAKRATE       7
#define DIFFSERVMETERPEAKBURSTSIZE      8
/*zhangwei add end*/

/********************************************
 ************diffServArpAceTable*************
 ********************************************
 */
#define DIFFSERVARPACEINDEX       1
#define DIFFSERVARPACEACTION       2
#define DIFFSERVARPACEPKTTYPE       3
#define DIFFSERVARPACESOURCEIPADDR       4
#define DIFFSERVARPACESOURCEIPADDRBITMASK       5
#define DIFFSERVARPACEDESTIPADDR       6
#define DIFFSERVARPACEDESTIPADDRBITMASK       7
#define DIFFSERVARPACESOURCEMACADDR       8
#define DIFFSERVARPACESOURCEMACADDRBITMASK       9
#define DIFFSERVARPACEDESTMACADDR       10
#define DIFFSERVARPACEDESTMACADDRBITMASK       11
#define DIFFSERVARPACELOGSTATUS       12
#define DIFFSERVARPACESTATUS       13

/********************************************
 ************diffServArpTable****************
 ********************************************
 */
#define DIFFSERVARPACLNAME       1

/********************************************
 *********diffServAclCounterTable************
 ********************************************
 */
#define DIFFSERVACLHWCOUNTERIFINDEX            1
#define DIFFSERVACLHWCOUNTERDIRECTION          2
#define DIFFSERVACLHWCOUNTERACLINDEX           3
#define DIFFSERVACLHWCOUNTERACEINDEX           4
#define DIFFSERVACLHWCOUNTERACEHITCOUNT        5

/********************************************
 *******diffServPolicyMapPortTable***********
 ********************************************
 */
#define DIFFSERVPOLICYMAPPORTIFINDEX           1
#define DIFFSERVPOLICYMAPPORTDIRECTION         2
#define DIFFSERVPOLICYMAPPORTPOLICYMAPINDEX    3
#define DIFFSERVPOLICYMAPPORTSTATUS            4

/********************************************
 *******diffServAccessGroupTable***********
 ********************************************
 */
#define DIFFSERVACCESSGROUPIFINDEX           1
#define DIFFSERVACCESSGROUPDIRECTION         2
#define DIFFSERVACCESSGROUPTYPE              3
#define DIFFSERVACCESSGROUPACLINDEX          4
#define DIFFSERVACCESSGROUPTIMERANGENAME     5
#define DIFFSERVACCESSGROUPCOUNTERSTATUS     6
#define DIFFSERVACCESSGROUPSTATUS            7

 /********************************************
 *********diffServTcamTable************
 ********************************************
 */
#define DIFFSERVTCAMUNIT                       1
#define DIFFSERVTCAMDEVICE                     2
#define DIFFSERVTCAMPOOL                       3
#define DIFFSERVTCAMPOOLCAPABILITY             4
#define DIFFSERVTCAMTOTAL                      5
#define DIFFSERVTCAMFREE                       6
#define DIFFSERVTCAMUSED                       7

/********************************************
 *********diffServControlPlaneHwCounterTable*
 ********************************************
 */
#define DIFFSERVCONTROLPLANEHWCOUNTERCLASSMAPINDEX              1
#define DIFFSERVCONTROLPLANEHWCOUNTERCLASSMAPRECEIVEPACKETS     2
#define DIFFSERVCONTROLPLANEHWCOUNTERCLASSMAPDROPPACKETS        3
#define DIFFSERVCONTROLPLANEHWCOUNTERCLASSMAPCLEARACTION        4

/********************************************
 ********prioGlobalCosToDscpTable*************
 ********************************************
 */
#define PRIOGLOBALCOSTODSCPCOSVALUE            1
#define PRIOGLOBALCOSTODSCPCFIVALUE            2
#define PRIOGLOBALCOSTODSCPDSCPVALUE           3
#define PRIOGLOBALCOSTODSCPPHBVALUE            4
#define PRIOGLOBALCOSTODSCPCOLORVALUE          5

/********************************************
 ********prioGlobalPrecToDscpTable*************
 *********************************************
 */
#define PRIOGLOBALPRECTODSCPPRECVALUE          1
#define PRIOGLOBALPRECTODSCPDSCPVALUE          2
#define PRIOGLOBALPRECTODSCPPHBVALUE           3
#define PRIOGLOBALPRECTODSCPCOLORVALUE         4

/********************************************
 ********prioGlobalDscpToDscpTable*************
 ********************************************
 */
#define PRIOGLOBALDSCPTODSCPINGRESSDSCPVALUE   1
#define PRIOGLOBALDSCPTODSCPDSCPVALUE          2
#define PRIOGLOBALDSCPTODSCPPHBVALUE           3
#define PRIOGLOBALDSCPTODSCPCOLORVALUE         4

/********************************************
 ********prioGlobalDscpToQueueTable*************
 ********************************************
 */
#define  PRIOGLOBALDSCPTOQUEUEQUEUEVALUE     1

/************portSecPortTable****************
 ********************************************
 */
#define PORTSECPORTINDEX                1
#define PORTSECPORTSTATUS               2
#define PORTSECACTION                   3
#define PORTSECMAXMACCOUNT              4
#define PORTSECLEARNINGSTATUS           5

/********************************************
 ****************pfuRuleTable****************
 ********************************************
 */
#define PFURULEINDEX            1
#define PFURULEACTION           2
#define PFURULEPROTOCOL         3
#define PFURULESRCIPADDR        4
#define PFURULESRCIPBITMASK     5
#define PFURULESRCPORTRANGE1    6
#define PFURULESRCPORTRANGE2    7
#define PFURULEDSTIPADDR        8
#define PFURULEDSTIPBITMASK     9
#define PFURULEDSTPORTRANGE1    10
#define PFURULEDSTPORTRANGE2    11
#define PFURULETCPCODE          12
#define PFURULETCPCODEBITMASK   13
#define PFURULEFRAGMENTS        14
#define PFURULELOG              15
#define PFURULEROWSTATUS        16

/********************************************
 ************radiusServerTable*******
 ********************************************
 */
#define RADIUSSERVERINDEX       1
#define RADIUSSERVERADDRESS       2
#define RADIUSSERVERAUTHPORTNUMBER       3
#define RADIUSSERVERACCTPORTNUMBER       4
#define RADIUSSERVERKEY       5
#define RADIUSSERVERRETRANSMIT       6
#define RADIUSSERVERTIMEOUT       7
#define RADIUSSERVERSTATUS       8

/********************************************
 **************tacacsPlusServerTable*********
 ********************************************
 */
#define TACACSPLUSSERVERINDEX       1
#define TACACSPLUSSERVERADDRESS       2
#define TACACSPLUSSERVERPORTNUMBER       3
#define TACACSPLUSSERVERKEY       4
#define TACACSPLUSSERVERSTATUS       8
#define TACACSPLUSSERVERRETRANSMIT       9
#define TACACSPLUSSERVERTIMEOUT       10

/********************************************
 **************aaaMethodTable****************
 ********************************************
 */
#define AAAMETHODINDEX                  1
#define AAAMETHODNAME                   2
#define AAAMETHODGROUPNAME              3
#define AAAMETHODMODE                   4
#define AAAMETHODSTATUS                 5
#define AAAMETHODCLIENTTYPE             6
#define AAAMETHODCOMMANDPRIVILEGESLEVEL 7

/********************************************
 **************aaaRadiusGroupTable***********
 ********************************************
 */
#define AAARADIUSGROUPINDEX             1
#define AAARADIUSGROUPSERVERBITMAP      2
#define AAARADIUSGROUPNAME              3
#define AAARADIUSGROUPSTATUS            4

/********************************************
 **************aaaTacacsPlusGroupTable*******
 ********************************************
 */
#define AAATACACSPLUSGROUPINDEX         1
#define AAATACACSPLUSGROUPSERVERBITMAP  2
#define AAATACACSPLUSGROUPNAME          3
#define AAATACACSPLUSGROUPSTATUS        4

/********************************************
 **************aaaAccountTable***************
 ********************************************
 */
#define AAAACCOUNTIFINDEX               1
#define AAAACCOUNTMETHODNAME            2
#define AAAACCOUNTPROTOCOL              3
#define AAAACCOUNTSTATUS                4

/********************************************
 **********aaaCommandPrivilegesTable**********
 ********************************************
 */
#define AAACOMMANDPRIVILEGESLEVELINDEX            1
#define AAACOMMANDPRIVILEGESINTERFACEINDEX    2
#define AAACOMMANDPRIVILEGESMETHODNAME        3

/********************************************
 *************aaaAccExecTable****************
 ********************************************
 */
#define AAAACCEXECINDEX                    1
#define AAAACCEXECMETHODNAME           2

/********************************************
 *********networkAccessPortTable**********
 ********************************************
 */
#define NETWORKACCESSPORTINDEX                1
#define NETWORKACCESSPORTDYNAMICVLAN              2
#define NETWORKACCESSPORTMAXMACCOUNT              3
#define NETWORKACCESSPORTMODE                     4
#define NETWORKACCESSPORTMACFILTER                5
#define NETWORKACCESSPORTGUESTVLAN                6
#define NETWORKACCESSPORTLINKDETECTIONSTATUS      7
#define NETWORKACCESSPORTLINKDETECTIONMODE        8
#define NETWORKACCESSPORTLINKDETECTIONACITON      9
#define NETWORKACCESSPORTLINKDYNAMICQOS           10

/********************************************
 *********networkAccessMacAddressTable**********
 ********************************************
 */
#define NETWORKACCESSMACADDRESSADDRESS                          1
#define NETWORKACCESSMACADDRESSPORT                             2
#define NETWORKACCESSMACADDRESSRADIUSSERVERADDRESSTYPE          3
#define NETWORKACCESSMACADDRESSRADIUSSERVERADDRESS              4
#define NETWORKACCESSMACADDRESSTIME                             5
#define NETWORKACCESSMACADDRESSATTRIBUTE                        6

/********************************************
 *********networkAccessMacAddressTable**********
 ********************************************
 */
#define NETWORKACCESSMACFILTERWITHMASKID               1
#define NETWORKACCESSMACFILTERWITHMASKMACADDRESS       2
#define NETWORKACCESSMACFILTERWITHMASKMACADDRESSMASK   3
#define NETWORKACCESSMACFILTERWITHMASKSTATUS           4

/********************************************
 **************macAuthPortTable***************
 ********************************************
 */
#define MACAUTHPORTINDEX                             1
#define MACAUTHPORTMAXMACCOUNT                       2
#define MACAUTHPORTINTRUSIONACTION                   3

/********************************************
 **************igmpProxyTable****************
 ********************************************
 */
#define IGMPPROXYIFINDEX       1
#define IGMPPROXYUNSOLICITEDREPORTINTERVAL       2

/********************************************
 **************igmpStaticGroupTable**********
 ********************************************
 */
#define IGMPSTATICGROUPIFINDEX       1
#define IGMPSTATICGROUPADDRESS       2
#define IGMPSTATICGROUPSOURCEADDRESS       3
#define IGMPSTATICGROUPENTRYSTATUS       4

/********************************************
 **************sshConnInfoTable**************
 ********************************************
 */
#define SSHCONNID                 1
#define SSHCONNMAJORVERSION       2
#define SSHCONNMINORVERSION       3
#define SSHCONNENCRYPTIONTYPE     4
#define SSHCONNSTATUS             5
#define SSHCONNUSERNAME           6
#define SSHDISCONNECT             7
#define SSHCONNENCRYPTIONTYPESTR  8

/********************************************
 **************sshUserTable******************
 ********************************************
 */
#define SSHUSERNAME             1
#define SSHUSERRSAKEY1          2
#define SSHUSERRSAKEY2          3
#define SSHUSERRSAKEY3          4
#define SSHUSERRSAKEY4          5
#define SSHUSERRSAKEY5          6
#define SSHUSERRSAKEY6          7
#define SSHUSERRSAKEY7          8
#define SSHUSERRSAKEY8          9
#define SSHUSERDSAKEY1          10
#define SSHUSERDSAKEY2          11
#define SSHUSERDSAKEY3          12
#define SSHUSERDSAKEY4          13
#define SSHUSERDSAKEY5          14
#define SSHUSERDSAKEY6          15
#define SSHUSERDSAKEY7          16
#define SSHUSERDSAKEY8          17
#define SSHUSERKEYDELACTION     18


/********************************************
 ************ipFilterSnmpTable***************
 ********************************************
 */
#define IPFILTERSNMPSTARTADDRESS        1
#define IPFILTERSNMPENDADDRESS          2
#define IPFILTERSNMPSTATUS              3

/********************************************
 ************ipFilterHTTPTable***************
 ********************************************
 */
#define IPFILTERHTTPSTARTADDRESS        1
#define IPFILTERHTTPENDADDRESS          2
#define IPFILTERHTTPSTATUS              3

/********************************************
 **********ipFilterTelnetTable***************
 ********************************************
 */
#define IPFILTERTELNETSTARTADDRESS      1
#define IPFILTERTELNETENDADDRESS        2
#define IPFILTERTELNETSTATUS            3

/********************************************
 **********ipFilterHttpsTable***************
 ********************************************
 */
#define IPFILTERHTTPSSTARTADDRESS  1
#define IPFILTERHTTPSENDADDRESS    2
#define IPFILTERHTTPSSTATUS                3

/********************************************
 **********ipFilterSshTable***************
 ********************************************
 */
#define IPFILTERSSHSTARTADDRESS  1
#define IPFILTERSSHENDADDRESS    2
#define IPFILTERSSHSTATUS                3

/********************************************
 **********ipFilterSnmpInetTable*************
 ********************************************
 */
#define IPFILTERSNMPINETADDRESSTYPE       1
#define IPFILTERSNMPINETADDRESSSTART       2
#define IPFILTERSNMPINETADDRESSEND       3
#define IPFILTERSNMPINETSTATUS       4

/********************************************
 **********ipFilterHttpInetTable*************
 ********************************************
 */
#define IPFILTERHTTPINETADDRESSTYPE       1
#define IPFILTERHTTPINETADDRESSSTART       2
#define IPFILTERHTTPINETADDRESSEND       3
#define IPFILTERHTTPINETSTATUS       4

/********************************************
 *********ipFilterTelnetInetTable************
 ********************************************
 */
#define IPFILTERTELNETINETADDRESSTYPE       1
#define IPFILTERTELNETINETADDRESSSTART       2
#define IPFILTERTELNETINETADDRESSEND       3
#define IPFILTERTELNETINETSTATUS       4

/********************************************
 **********dot1xAuthConfigExtTable***********
 ********************************************
 */
#define DOT1XAUTHCONFIGEXTOPERMODE              1
#define DOT1XAUTHCONFIGEXTMULTIHOSTMAXCNT       2
#define DOT1XAUTHCONFIGEXTPORTINTRUSIONACTION     3

/********************************************
 *********webAuthPortConfigTable*************
 ********************************************
 */
#define WEBAUTHPORTCONFIGPORTINDEX               1
#define WEBAUTHPORTCONFIGSTATUS                  2
#define WEBAUTHPORTCONFIGAUTHENTICATEDHOSTCOUNT  3

/********************************************
 ***********webAuthPortInfoTable*************
 ********************************************
 */
#define WEBAUTHPORTINFOPORTINDEX                  1
#define WEBAUTHPORTINFOPORTAUTHSUCCESSINDEX       2
#define WEBAUTHPORTINFOINETADDRESSTYPE            3
#define WEBAUTHPORTINFOINETADDRESS                4
#define WEBAUTHPORTINFOREMAININGSESSIONTIME       5
#define WEBAUTHPORTINFOSTATUS                     6

/********************************************
 ***********appFilterPortTable***************
 ********************************************
 */
#define APPFILTERPORTIFINDEX                     1
#define APPFILTERPROTOCOLTYPE                    2
#define APPFILTERPKTSTATUS                       3

/********************************************
 **********arpProxyArpTable******************
 ********************************************
 */
#define ARPPROXYARPIFINDEX              1
#define ARPPROXYARPSTATUS               2

/********************************************
 ****ripInstabilityPreventingTable***********
 ********************************************
 */
#define RIPVLANINDEX                    1
#define RIPSPLITHORIZONSTATUS           2

/********************************************
 **********ripNetworkAddrTable***************
 ********************************************
 */
#define RIPNETWORKADDRADDRESS           1
#define RIPNETWORKADDRSTATUS            2

/********************************************
 ***************ospfNssaTable****************
 ********************************************
 */
#define OSPFNSSAAREAID          1
#define OSPFNSSAREDISTRIBUTESTATUS              2
#define OSPFNSSAORIGINATEDEFAULTINFOSTATUS              3
#define OSPFNSSASTATUS          4

/********************************************
 ********ospfRedistributeTable***************
 ********************************************
 */
#define OSPFREDISTRIBUTEPROTOCOL                1
#define OSPFREDISTRIBUTEMETRICTYPE              2
#define OSPFREDISTRIBUTEMETRIC          3
#define OSPFREDISTRIBUTESTATUS          4

/********************************************
 ********ospfSummaryAddressTable*************
 ********************************************
 */
#define OSPFSUMMARYADDRESS              1
#define OSPFSUMMARYMASK             2
#define OSPFSUMMARYSTATUS               3

/********************************************
 *******ospfNetworkAreaAddressTable**********
 ********************************************
 */
#define OSPFNETWORKAAREAADDRESS         1
#define OSPFNETWORKAREAMASK                 2
#define OSPFNETWORKAREAAREAID           3
#define OSPFNETWORKAREASTATUS           4

/********************************************
 ***************dvmrpInterfaceTable**********
 ********************************************
 */
#define DVMRPINTERFACEINDEX                 1
#define DVMRPINTERFACELOCALADDRESS      2
#define DVMRPINTERFACEMETRIC            3
#define DVMRPINTERFACESTATUS            4
#define DVMRPINTERFACERCVBADPKTS        5
#define DVMRPINTERFACERCVBADROUTES      6
#define DVMRPINTERFACESENTROUTES        7
#define DVMRPINTERFACEKEY                   8
#define DVMRPINTERFACEKEYVERSION        9
#define DVMRPINTERFACEGENERATIONID      10



/********************************************
 ****************dvmrpNeighborTable**********
 ********************************************
 */
#define DVMRPNEIGHBORIFINDEX            1
#define DVMRPNEIGHBORADDRESS            2
#define DVMRPNEIGHBORUPTIME                 3
#define DVMRPNEIGHBOREXPIRYTIME         4
#define DVMRPNEIGHBORGENERATIONID       5
#define DVMRPNEIGHBORMAJORVERSION       6
#define DVMRPNEIGHBORMINORVERSION       7
#define DVMRPNEIGHBORCAPABILITIES       8
#define DVMRPNEIGHBORRCVROUTES          9
#define DVMRPNEIGHBORRCVBADPKTS         10
#define DVMRPNEIGHBORRCVBADROUTES       11
#define DVMRPNEIGHBORSTATE              12

/********************************************
 **************dvmrpRouteTable***************
 ********************************************
 */
#define DVMRPROUTESOURCE                1
#define DVMRPROUTESOURCEMASK            2
#define DVMRPROUTEUPSTREAMNEIGHBOR      3
#define DVMRPROUTEIFINDEX                   4
#define DVMRPROUTEMETRIC                    5
#define DVMRPROUTEEXPIRYTIME            6
#define DVMRPROUTEUPTIME            7

/********************************************
 ************dvmrpRouteNextHopTable**********
 ********************************************
 */
#define DVMRPROUTENEXTHOPSOURCE             1
#define DVMRPROUTENEXTHOPSOURCEMASK             2
#define DVMRPROUTENEXTHOPIFINDEX                3
#define DVMRPROUTENEXTHOPTYPE               4


/********************************************
 *****************dvmrpPruneTable************
 ********************************************
 */
#define DVMRPPRUNEGROUP             1
#define DVMRPPRUNESOURCE                2
#define DVMRPPRUNESOURCEMASK    3
#define DVMRPPRUNEEXPIRYTIME    4

/********************************************
 *****************dvmrpPruneTable************
 ********************************************
 */
#define IPCIDRROUTEEXTDEST                1
#define IPCIDRROUTEEXTMASK                2
#define IPCIDRROUTEEXTTOS                 3
#define IPCIDRROUTEEXTNEXTHOP     4
#define IPCIDRROUTEEXTOSPFSUBTYPE 5

#if 0  /* use new mib */
/********************************************
 ***************remoteLogServerTable*********
 ********************************************
 */
#define REMOTELOGSERVERIP               1
#define REMOTELOGSERVERSTATUS           2

#endif

/********************************************
 ***********remoteLogServerInetTable*********
 ********************************************
 */

#define REMOTELOGSERVERINETADDRESSTYPE       1
#define REMOTELOGSERVERINETADDRESS       2
#define REMOTELOGSERVERSTATUS           3
#define REMOTELOGSERVERUDPPORT          4
#define REMOTELOGSERVERFACILITYTYPE     5
#define REMOTELOGSERVERHOSTLEVEL        6


/********************************************
 ***************smtpServerIpTable************
 ********************************************
 */
#define SMTPSERVERIP            1
#define SMTPSERVERIPSTATUS      2

/********************************************
 ***************smtpDestEMailTable************
 ********************************************
 */
#define SMTPDESTEMAIL           1
#define SMTPDESTEMAILSTATUS     2

/********************************************
 ***************sntpServerTable**************
 ********************************************
 */
#define SNTPSERVERINDEX         1
#define SNTPSERVERIPADDRESS     2
#define SNTPSERVERINETADDRESSTYPE       4
#define SNTPSERVERINETADDRESS           5
#define SNTPSERVERSTATUS                6

/********************************************
 ***************ntpServerTable**************
 ********************************************
 */
#define NTPSERVERIPADDRESS      1
#define NTPSERVERVERSION        2
#define NTPSERVERKEYID          3
#define NTPSERVERSTATUS         4

/********************************************
 ***************ntpAuthKeyTable**************
 ********************************************
 */
#define NTPAUTHKEYID            1
#define NTPAUTHKEYWORD          2
#define NTPAUTHKEYSTATUS        3

/********************************************
 **************fileInfoTable*****************
 ********************************************
 */
#define FILEINFOUNITID                  1
#define FILEINFOFILENAME                2
#define FILEINFOFILETYPE                3
#define FILEINFOISSTARTUP               4
#define FILEINFOFILESIZE                5
#define FILEINFOCREATIONTIME            6
#define FILEINFODELETE                  7

/**********************************************************
 **************fileAutoDownloadResultTable*****************
 **********************************************************
 */
#define FILEAUTODOWNLOADRESULTUNITID            1
#define FILEAUTODOWNLOADRESULTACTION            2
#define FILEAUTODOWNLOADRESULTSTATUS            3

/********************************************
 *****************dnsHostTable***************
 ********************************************
 */
#define DNSHOSTNAME             1
#define DNSHOSTINDEX    2
#define DNSHOSTIPTYPE           3
#define DNSHOSTIP               4

/********************************************
 *****************dnsAliasTable**************
 ********************************************
 */
#define DNSALIASNAME            1
#define DNSALIASALIAS           2

/********************************************
 ***************dnsDomainListTable***********
 ********************************************
 */
#define DNSDOMAINLISTNAME               1
#define DNSDOMAINLISTSTATUS             2

/********************************************
 ***************dnsNameServerTable***********
 ********************************************
 */
#define DNSNAMESERVERINETADDRESSTYPE       1
#define DNSNAMESERVERINETADDRESS       2
#define DNSNAMESERVERINETSTATUS       3

#if (SYS_CPNT_POE == TRUE)
/********************************************
 ***************pethPsePortExtTable***********
 ********************************************
 */
void init_pethPseMainExtTable(void);
FindVarMethod var_pethPseMainExtTable;

void init_pethPsePortExtTable(void);
FindVarMethod var_pethPsePortExtTable;

#if (SYS_CPNT_POE_TIME_RANGE == TRUE)
WriteMethod write_pethPsePortTimeRange;
#endif  /* #if (SYS_CPNT_POE_TIME_RANGE == TRUE) */

WriteMethod write_pethPsePortExtMaximumPowerValue;


#define PETHPSEPORTEXTMIRROREDDLLPDREQUESTEDPOWERVALUE       4
#define PETHPSEPORTEXTDLLPSEALLOCATEDPOWERVALUE       6
#define PETHPSEPORTTIMERANGE       11
#define PETHPSEPORTTIMERANGESTATUS       12
#define PETHPSEPORTEXTMAXIMUMPOWERVALUE       13
#define PETHPSEPORTEXTUSEDPOWERVALUE       14
#endif /*end of #if (SYS_CPNT_POE == TRUE)*/

/********************************************
 **************dnsCacheTable*****************
 ********************************************
 */
#define DNSCACHEINDEX           1
#define DNSCACHEFLAG            2
#define DNSCACHETYPE            3
#define DNSCACHEIPTYPE          4
#define DNSCACHEIP              5
#define DNSCACHETTL             6
#define DNSCACHEDOMAIN          7

/********************************************
 **************dnsAliasByIdTable*************
 ********************************************
 */
#if 0
#define DNSALIASBYIDNAMEINDEX           1
#define DNSALIASBYIDALIASINDEX          2
#define DNSALIASBYIDNAME                3
#define DNSALIASBYIDALIAS               4
#endif

/********************************************
 **************cHsrpGrpTable*****************
 ********************************************
 */
#define CHSRPGRPNUMBER                      1
#define CHSRPGRPAUTH                        2
#define CHSRPGRPPRIORITY                        3
#define CHSRPGRPPREEMPT                     4
#define CHSRPGRPPREEMPTDELAY                5
#define CHSRPGRPUSECONFIGUREDTIMERS             6
#define CHSRPGRPCONFIGUREDHELLOTIME             7
#define CHSRPGRPCONFIGUREDHOLDTIME              8
#define CHSRPGRPLEARNEDHELLOTIME                9
#define CHSRPGRPLEARNEDHOLDTIME             10
#define CHSRPGRPVIRTUALIPADDR               11
#define CHSRPGRPUSECONFIGVIRTUALIPADDR  12
#define CHSRPGRPACTIVEROUTER                13
#define CHSRPGRPSTANDBYROUTER               14
#define CHSRPGRPSTANDBYSTATE                15
#define CHSRPGRPVIRTUALMACADDR              16
#define CHSRPGRPENTRYROWSTATUS              17


/********************************************
 ***********cHsrpExtIfTrackedTable***********
 ********************************************
 */
#define CHSRPEXTIFTRACKED                       1
#define CHSRPEXTIFTRACKEDPRIORITY               2
#define CHSRPEXTIFTRACKEDROWSTATUS              3

/********************************************
 ************cHsrpExtSecAddrTable************
 ********************************************
 */
#define CHSRPEXTSECADDRADDRESS              1
#define CHSRPEXTSECADDRROWSTATUS                2

#if (SYS_CPNT_DHCPSNP == TRUE)
#define DHCPSNOOPVLANINDEX              1
#define DHCPSNOOPVLANENABLE             2

#define DHCPSNOOPPORTIFINDEX            1
#define DHCPSNOOPPORTTRUSTENABLE        2

#define DHCPSNOOPBINDINGSVLANINDEX      1
#define DHCPSNOOPBINDINGSMACADDRESS     2
#define DHCPSNOOPBINDINGSADDRTYPE       3
#define DHCPSNOOPBINDINGSENTRYTYPE      4
#define DHCPSNOOPBINDINGSIPADDRESS      5
#define DHCPSNOOPBINDINGSPORTIFINDEX    6
#define DHCPSNOOPBINDINGSLEASETIME      7
#if 0
#define DHCPSNOOPBINDINGSSTATUS 8
#endif
#if (SYS_CPNT_IP_SOURCE_GUARD == TRUE)
#define IPSRCGUARDPORTIFINDEX           1
#define IPSRCGUARDMODE                  2

#define IPSRCGUARDBINDINGSVLANINDEX     1
#define IPSRCGUARDBINDINGSMACADDRESS    2
#define IPSRCGUARDBINDINGSADDRTYPE      3
#define IPSRCGUARDBINDINGSENTRYTYPE     4
#define IPSRCGUARDBINDINGSIPADDRESS     5
#define IPSRCGUARDBINDINGSPORTIFINDEX   6
#define IPSRCGUARDBINDINGSLEASETIME     7
#define IPSRCGUARDBINDINGSSTATUS        8
#endif /* #if (SYS_CPNT_IP_SOURCE_GUARD == TRUE) */
#endif /* #if (SYS_CPNT_DHCPSNP == TRUE) */

#define UNKNOWNUCASTSTORMIFINDEX       1
#define UNKNOWNUCASTSTORMSTATUS       2
#define UNKNOWNUCASTSTORMSAMPLETYPE       3
#define UNKNOWNUCASTSTORMPKTRATE       4
#define UNKNOWNUCASTSTORMOCTETRATE       5
#define UNKNOWNUCASTSTORMPERCENT       6

#define RATEBASEDSTORMIFINDEX       1
#define RATEBASEDSTORMRATE       2
#define RATEBASEDSTORMMODE       3

#if (SYS_CPNT_MLDSNP == TRUE)
#define MLDSNOOPROUTERCURRENTVLANINDEX       1
#define MLDSNOOPROUTERCURRENTPORTS       2
#define MLDSNOOPROUTERCURRENTSTATUS       3
#define MLDSNOOPROUTERSTATICVLANINDEX       1
#define MLDSNOOPROUTERSTATICPORTS       2
#define MLDSNOOPROUTERSTATICSTATUS       3
#define MLDSNOOPMULTICASTCURRENTVLANINDEX       1
#define MLDSNOOPMULTICASTCURRENTIPADDRESS       2
#define MLDSNOOPMULTICASTCURRENTPORTS       3
#define MLDSNOOPMULTICASTCURRENTSTATUS       4
#define MLDSNOOPMULTICASTSTATICVLANINDEX       1
#define MLDSNOOPMULTICASTSTATICIPADDRESS       2
#define MLDSNOOPMULTICASTSTATICPORTS       3
#define MLDSNOOPMULTICASTSTATICSTATUS       4
#define MLDSNOOPCURRENTVLANINDEX       1
#define MLDSNOOPCURRENTVLANIMMEDIATELEAVE       2
#define MLDSNOOPCURRENTVLANIMMEDIATELEAVEBYHOSTIP       3
#endif  /* #if (SYS_CPNT_MLDSNP == TRUE)*/

/********************************************
 ***********pingHistoryTable*****************
 ********************************************
 */
#define PINGHISTORYINDEX       1
#define PINGHISTORYRESPONSE       2
/********************************************
 ***********userauth*****************
 ********************************************
 */
#define USERAUTHUSERNAME                    1
#define USERAUTHPASSWORD                    2
#define USERAUTHPRIVILEGE                   3
#define USERAUTHPUBLICKEY                   4
#define USERAUTHSTATUS                      5

/* UDP helper */
#define UDPHELPERFORWARDPROTOCOLPORT       1
#define UDPHELPERFORWARDPROTOCOLSTATUS       2
#define UDPHELPERINETADDRIFINDEX       1
#define UDPHELPERINETADDRTYPE       2
#define UDPHELPERINETADDR       3
#define UDPHELPERINETADDRSTATUS       4

/********************************************
 ****************daiVlanTable****************
 ********************************************
 */
#define DAIVLANINDEX       1
#define DAIVLANSTATUS       2
#define DAIVLANARPACLNAME       3
#define DAIVLANARPACLSTATUS       4

/********************************************
 ****************daiPortTable****************
 ********************************************
 */
#define DAIPORTIFINDEX       1
#define DAIPORTTRUSTSTATUS       2
#define DAIPORTRATELIMIT       3

/********************************************
 ***************daiLogTable******************
 ********************************************
 */
#define DAILOGINDEX       1
#define DAILOGVLAN       2
#define DAILOGPORT       3
#define DAILOGSRCIPADDRESS       4
#define DAILOGDESTIPADDRESS       5
#define DAILOGSRCMACADDRESS       6
#define DAILOGDESTMACADDRESS       7

/********************************************
 ***************ospfMultiProcessRouteTable***
 ********************************************
 */
#define OSPFMULTIPROCESSROUTEDEST       1
#define OSPFMULTIPROCESSROUTEPFXLEN       2
#define OSPFMULTIPROCESSROUTENEXTHOP       3
#define OSPFMULTIPROCESSROUTEINTERFACE       4
#define OSPFMULTIPROCESSROUTECOST       5
#define OSPFMULTIPROCESSROUTEPATHTYPE       6
#define OSPFMULTIPROCESSROUTEAREAID       7
#define OSPFMULTIPROCESSROUTETRANSITAREA       8

/********************************************
 ***************ipv6TunnelTable**************
 ********************************************
 */
#define IPV6TUNNELINDEX       1
#define IPV6TUNNELNDRASUPPRESS       2
#define IPV6TUNNELMODE       3
#define IPV6TUNNELTTL       4
#define IPV6TUNNELDESTINATION       5
#define IPV6TUNNELSOURCEVLANIFINDEX       6
#define IPV6TUNNELROWSTATUS       7

#if (SYS_CPNT_PPPOE_IA == TRUE)
void init_pppoeiaGlobal(void);
Netsnmp_Node_Handler do_pppoeiaGlobalStatus;
Netsnmp_Node_Handler do_pppoeiaGlobalAccessNodeId;
Netsnmp_Node_Handler get_pppoeiaGlobalOperAccessNodeId;
Netsnmp_Node_Handler do_pppoeiaGlobalGenericErrorMsg;
Netsnmp_Node_Handler get_pppoeiaGlobalOperGenericErrorMsg;
Netsnmp_Node_Handler do_pppoeiaGlobalClearStatisticsAction;

void init_pppoeiaPortTable(void);
FindVarMethod var_pppoeiaPortTable;
WriteMethod write_pppoeiaPortStatus;
WriteMethod write_pppoeiaPortTrustStatus;
WriteMethod write_pppoeiaPortVendorTagStrip;
WriteMethod write_pppoeiaPortCircuitId;
WriteMethod write_pppoeiaPortRemoteId;

#if (SYS_CPNT_PPPOE_IA_REMOTE_ID_ENHANCE == TRUE)
WriteMethod write_pppoeiaPortRemoteIdDelimiterEnable;
WriteMethod write_pppoeiaPortRemoteIdDelimiterAscii;
#endif

void init_pppoeiaPortStatsTable(void);
FindVarMethod var_pppoeiaPortStatsTable;
WriteMethod write_pppoeiaPortStatsClearAction;

/********************************************
 ***********pppoeiaPortTable*****************
 ********************************************
 */
#define PPPOEIAPORTINDEX                        1
#define PPPOEIAPORTSTATUS                       2
#define PPPOEIAPORTTRUSTSTATUS                  3
#define PPPOEIAPORTVENDORTAGSTRIP               4
#define PPPOEIAPORTCIRCUITID                    5
#define PPPOEIAPORTOPERCIRCUITID                6
#define PPPOEIAPORTREMOTEID                     7
#define PPPOEIAPORTOPERREMOTEID                 8

#define PPPOEIAPORTREMOTEIDDELIMITERENABLE      9
#define PPPOEIAPORTREMOTEIDDELIMITERASCII       10

/********************************************
 *********pppoeiaPortStatsTable**************
 ********************************************
 */
#define PPPOEIAPORTSTATSINDEX                   1
#define PPPOEIAPORTSTATSRECVPKTS                2
#define PPPOEIAPORTSTATSRECVPADIPKTS            3
#define PPPOEIAPORTSTATSRECVPADOPKTS            4
#define PPPOEIAPORTSTATSRECVPADRPKTS            5
#define PPPOEIAPORTSTATSRECVPADSPKTS            6
#define PPPOEIAPORTSTATSRECVPADTPKTS            7
#define PPPOEIAPORTSTATSDROPUNTRUSTRESPPKTS     8
#define PPPOEIAPORTSTATSDROPUNTRUSTREQPKTS      9
#define PPPOEIAPORTSTATSDROPMALFORMEDPKTS       10
#define PPPOEIAPORTSTATSCLEARACTION             11
#endif  /* SYS_CPNT_PPPOE_IA == TRUE */

#if (SYS_CPNT_IPV6_RA_GUARD == TRUE)
/********************************************
 ************** ipv6RaGuardMgt **************
 ********************************************
 */

/********************************************
 ************** ipv6RaGuardPortTable ********
 ********************************************
 */
void init_ipv6RaGuardPortTable(void);
FindVarMethod var_ipv6RaGuardPortTable;
WriteMethod write_ipv6RaGuardPortStatus;

#define IPV6RAGUARDPORTINDEX        1
#define IPV6RAGUARDPORTSTATUS       2

#endif /* #if (SYS_CPNT_IPV6_RA_GUARD == TRUE) */

#if (SYS_CPNT_DHCP_INFORM == TRUE)
/********************************************
 ***************dhcpInformTable******************
 ********************************************
 */
#define DHCPINFORMIFINDEX       1
#define DHCPINFORMSTATUS       2
#endif /* #if (SYS_CPNT_DHCP_INFORM == TRUE)*/

#if (SYS_CPNT_DHCPV6SNP == TRUE)
/********************************************
 ***************init_dhcpv6SnoopGlobal*******
 ********************************************
 */
void init_dhcpv6SnoopGlobal(void);
Netsnmp_Node_Handler do_dhcpv6SnoopEnable;
Netsnmp_Node_Handler do_dhcpv6SnoopBindingTableClearAction;
Netsnmp_Node_Handler do_dhcpv6SnoopStatisticsClearAction;
#if (SYS_CPNT_DHCPV6SNP_REMOTE_ID_OPTION == TRUE)
Netsnmp_Node_Handler do_dhcpv6SnoopOptionRemoteIdEnable;
Netsnmp_Node_Handler do_dhcpv6SnoopOptionRemoteIdPolicy;
#endif

/********************************************
 ***********dhcpv6SnoopVlanConfigTable*******
 ********************************************
 */
void init_dhcpv6SnoopVlanConfigTable(void);
FindVarMethod var_dhcpv6SnoopVlanConfigTable;
WriteMethod write_dhcpv6SnoopVlanEnable;
#define DHCPV6SNOOPVLANINDEX        1
#define DHCPV6SNOOPVLANENABLE       2

/********************************************
 ***********dhcpv6SnoopPortConfigTable*******
 ********************************************
 */
void init_dhcpv6SnoopPortConfigTable(void);
FindVarMethod var_dhcpv6SnoopPortConfigTable;
WriteMethod write_dhcpv6SnoopPortTrustEnable;
WriteMethod write_dhcpv6SnoopPortMaxBinding;
#define DHCPV6SNOOPPORTIFINDEX              1
#define DHCPV6SNOOPPORTTRUSTENABLE          2
#define DHCPV6SNOOPPORTMAXBINDING           3
#define DHCPV6SNOOPPORTCURRENTBINDING       4


/********************************************
 ***************dhcpv6SnoopBindingTable******
 ********************************************
 */
void init_dhcpv6SnoopBindingTable(void);
FindVarMethod var_dhcpv6SnoopBindingTable;
#define DHCPV6SNOOPBINDINGLINKLAYERADDRESS       1
#define DHCPV6SNOOPBINDINGIATYPE                 2
#define DHCPV6SNOOPBINDINGIAID                   3
#define DHCPV6SNOOPBINDINGIPV6ADDRESS            4
#define DHCPV6SNOOPBINDINGVLANINDEX              5
#define DHCPV6SNOOPBINDINGPORTIFINDEX            6
#define DHCPV6SNOOPBINDINGLIFETIME               7

/********************************************
 ***************dhcpv6SnoopStatistics********
 ********************************************
 */
void init_dhcpv6SnoopStatistics(void);
Netsnmp_Node_Handler get_dhcpSnoopRecvClientPkts;
Netsnmp_Node_Handler get_dhcpSnoopSentClientPkts;
Netsnmp_Node_Handler get_dhcpSnoopDroppedClientPkts;
Netsnmp_Node_Handler get_dhcpSnoopRecvServerPkts;
Netsnmp_Node_Handler get_dhcpSnoopSentServerPkts;
Netsnmp_Node_Handler get_dhcpSnoopDroppedServerPkts;
Netsnmp_Node_Handler get_dhcpSnoopRecvRelayPkts;
Netsnmp_Node_Handler get_dhcpSnoopSentRelayPkts;
Netsnmp_Node_Handler get_dhcpSnoopDroppedRelayPkts;
#endif /* end of #if (SYS_CPNT_DHCPV6SNP == TRUE)*/

/********************************************
 ***************ip6SrcGuardConfigTable*******
 ********************************************
 */
void init_ip6SrcGuardConfigTable(void);
FindVarMethod var_ip6SrcGuardConfigTable;
WriteMethod write_ip6SrcGuardMode;
WriteMethod write_ip6SrcGuardMaxBinding;

#define IP6SRCGUARDPORTIFINDEX       1
#define IP6SRCGUARDMODE              2
#define IP6SRCGUARDMAXBINDING        3

/********************************************
 ***************ip6SrcGuardAddrTable*********
 ********************************************
 */
void init_ip6SrcGuardAddrTable(void);
FindVarMethod var_ip6SrcGuardAddrTable;
WriteMethod write_ip6SrcGuardBindingVlanIndex;
WriteMethod write_ip6SrcGuardBindingPortIfIndex;
WriteMethod write_ip6SrcGuardBindingStatus;

#define IP6SRCGUARDBINDINGTYPE          1
#define IP6SRCGUARDBINDINGMACADDRESS    2
#define IP6SRCGUARDBINDINGIPV6ADDRESS   3
#define IP6SRCGUARDBINDINGVLANINDEX     4
#define IP6SRCGUARDBINDINGPORTIFINDEX   5
#define IP6SRCGUARDBINDINGSTATUS        6

#if (SYS_CPNT_CN == TRUE)
/********************************************
 ***************cnGlobal*********************
 ********************************************
 */
void init_cnGlobal(void);
Netsnmp_Node_Handler do_cnGlobalAdminStatus;
Netsnmp_Node_Handler get_cnGlobalOperStatus;
Netsnmp_Node_Handler do_cnCnmTransmitPriority;
Netsnmp_Node_Handler get_cnDiscardedFrames;

/********************************************
 ***************cnPriTable*******************
 ********************************************
 */
void init_cnPriTable(void);
FindVarMethod var_cnPriTable;
WriteMethod write_cnPriDefenseMode;
WriteMethod write_cnPriAdminAlternatePriority;
WriteMethod write_cnPriRowStatus;

#define CNPRIPRIORITY                   1
#define CNPRIDEFENSEMODE                2
#define CNPRIADMINALTERNATEPRIORITY     3
#define CNPRIAUTOALTERNATEPRIORITY      4
#define CNPRIROWSTATUS                  5

/********************************************
 ***************cnPortPriTable***************
 ********************************************
 */
void init_cnPortPriTable(void);
FindVarMethod var_cnPortPriTable;
WriteMethod write_cnPortPriAdminDefenseMode;
WriteMethod write_cnPortPriAdminAlternatePriority;

#define CNPORTPRIPRIORITY                   1
#define CNPORTPRIIFINDEX                    2
#define CNPORTPRIADMINDEFENSEMODE           3
#define CNPORTPRIOPERDEFENSEMODE            4
#define CNPORTPRIADMINALTERNATEPRIORITY     5
#define CNPORTPRIOPERALTERNATEPRIORITY      6

/********************************************
 ***************cnCpTable********************
 ********************************************
 */
void init_cnCpTable(void);
FindVarMethod var_cnCpTable;

#define CNCPIFINDEX             1
#define CNCPINDEX               2
#define CNCPIDENTIFIER          3
#define CNCPQUEUE               4
#define CNCPMANAGEDCNPVS        5
#define CNCPMACADDRESS          6
#define CNCPSETPOINT            7
#define CNCPFEEDBACKWEIGHT      8
#define CNCPMINSAMPLEBASE       9
#define CNCPDISCARDEDFRAMES     10
#define CNCPTRANSMITTEDFRAMES   11
#define CNCPTRANSMITTEDCNMS     12
#endif /* #if (SYS_CPNT_CN == TRUE) */

#if (SYS_CPNT_DCBX == TRUE)
/********************************************
 ***************dcbxPortTable****************
 ********************************************
 */
void init_dcbxPortTable(void);
FindVarMethod var_dcbxPortTable;
WriteMethod write_dcbxPortStatus;
WriteMethod write_dcbxPortMode;

#define DCBXPORTIFINDEX     1
#define DCBXPORTSTATUS      2
#define DCBXPORTMODE        3
#endif /* #if (SYS_CPNT_DCBX == TRUE) */

#if (SYS_CPNT_VXLAN == TRUE)
void init_vxlanUdpDstPort(void);
Netsnmp_Node_Handler do_vxlanUdpDstPort;

void init_vxlanFloodTable(void);
FindVarMethod var_vxlanFloodTable;
WriteMethod write_vxlanFloodVlanIndex;
WriteMethod write_vxlanFloodEgressPort;
WriteMethod write_vxlanFloodStatus;

#define VXLANFLOODVNIINDEX       1
#define VXLANFLOODREMOTEIPADDRESS       2
#define VXLANFLOODSOURCEIPADDRESS       3
#define VXLANFLOODVLANINDEX       4
#define VXLANFLOODEGRESSPORT       5
#define VXLANFLOODSTATUS       6

void init_vxlanVlanVniMappingTable(void);
FindVarMethod var_vxlanVlanVniMappingTable;
WriteMethod write_vxlanVniIndex;
#define VXLANVLANINDEX                  1
#define VXLANVNIINDEX                   2
#endif /* #if (SYS_CPNT_VXLAN == TRUE) */

#if (SYS_CPNT_HASH_SELECTION == TRUE)
void init_hashSelTable(void);
FindVarMethod var_hashSelMacTable;
FindVarMethod var_hashSelIpv4Table;
FindVarMethod var_hashSelIpv6Table;
WriteMethod write_hashSelMacField;
WriteMethod write_hashSelIpv4Field;
WriteMethod write_hashSelIpv6Field;

/********************************************
 ***************hashSelMacTable**************
 ********************************************
 */
#define HASHSELMACBLOCKINDEX         1
#define HASHSELMACSRCMAC             2
#define HASHSELMACDSTMAC             3
#define HASHSELMACETHERTYPE          4
#define HASHSELMACVLAN               5

/********************************************
 ***************hashSelIpv4Table**************
 ********************************************
 */
#define HASHSELIPV4BLOCKINDEX        1
#define HASHSELIPV4SRCIP             2
#define HASHSELIPV4DSTIP             3
#define HASHSELIPV4SRCL4PORT         4
#define HASHSELIPV4DSTL4PORT         5
#define HASHSELIPV4PROTOCOLID        6
#define HASHSELIPV4VLAN              7

/********************************************
 ***************hashSelIp64Table**************
 ********************************************
 */
#define HASHSELIPV6BLOCKINDEX        1
#define HASHSELIPV6SRCIP             2
#define HASHSELIPV6DSTIP             3
#define HASHSELIPV6SRCL4PORT         4
#define HASHSELIPV6DSTL4PORT         5
#define HASHSELIPV6NEXTHEADER        6
#define HASHSELIPV6VLAN              7

#endif /*#if (SYS_CPNT_HASH_SELECTION == TRUE)*/

#endif /* PRIVATEMIB_H */
